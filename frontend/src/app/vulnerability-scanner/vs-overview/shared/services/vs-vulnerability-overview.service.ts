import {HttpClient, HttpResponse} from '@angular/common/http';
import {Injectable} from '@angular/core';
import {Observable} from 'rxjs';
import {SERVER_API_URL} from '../../../../app.constants';
import {TableBuilderResponseType} from '../../../../shared/chart/types/response/table-builder-response.type';
import {ChartSerieValueType} from '../../../../shared/types/chart-reponse/chart-serie-value.type';
import {PieResponseType} from '../../../../shared/types/chart-reponse/pie-response.type';
import {createRequestOption} from '../../../../shared/util/request-util';


@Injectable({
  providedIn: 'root'
})
export class VsVulnerabilityOverviewService {
  public resourceUrl = SERVER_API_URL + 'api/vulnerabilities/overview/';

  constructor(private http: HttpClient) {
  }

  getAssetsVulnerabilities(req?: any): Observable<HttpResponse<ChartSerieValueType[]>> {
    const options = createRequestOption(req);
    return this.http.get<ChartSerieValueType[]>(this.resourceUrl + 'assetWithVulnerabilities', {
      params: options,
      observe: 'response'
    });
  }

  getVulnerabilitiesMetrics(req?: any): Observable<HttpResponse<ChartSerieValueType[]>> {
    const options = createRequestOption(req);
    return this.http.get<ChartSerieValueType[]>(this.resourceUrl + 'vulnerabilities', {
      params: options,
      observe: 'response'
    });
  }


  getTopVulnerableHost(req?: any): Observable<HttpResponse<TableBuilderResponseType>> {
    const options = createRequestOption(req);
    return this.http.get<TableBuilderResponseType>(this.resourceUrl + 'topTenMostVulnerableHosts', {
      params: options,
      observe: 'response'
    });
  }


  getVulnerabilitiesBySeverityLabel(req?: any): Observable<HttpResponse<PieResponseType>> {
    const options = createRequestOption(req);
    return this.http.get<PieResponseType>(this.resourceUrl + 'vulnerabilitiesBySeverityLabel', {
      params: options,
      observe: 'response'
    });
  }


}
