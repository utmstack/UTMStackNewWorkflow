import {Component, Input, OnInit} from '@angular/core';
import {VsSeverityResolverService} from '../../../../shared/services/scan/vs-severity-resolver.service';

@Component({
  selector: 'app-vs-severity',
  templateUrl: './vs-severity.component.html',
  styleUrls: ['./vs-severity.component.scss']
})
export class VsSeverityComponent implements OnInit {
  @Input() severity: number;
  pieOption: any;
  firstLoad = true;

  constructor(public severityResolverService: VsSeverityResolverService) {
  }

  ngOnInit() {
    const color = this.severityResolverService.resolveColor(this.severity);
    this.severity = this.severity ? this.severity : -1;
    const dataStyle = {
      normal: {
        borderWidth: 2,
        borderColor: color,
        avoidLabelOverlap: true,
        label: {
          color,
          top: '50%',
          fontSize: '8px',
          position: 'center',
          formatter: () => {
            return this.severity; // Use sum variable here
          },
        },
        labelLine: {
          show: false,
        },
      }
    };
    const placeHolderStyle = {
      cursor: 'pointer',
      normal: {
        borderColor: 'rgba(196,195,195,0.96)',
        borderWidth: 2
      }
    };
    this.pieOption = {
      // Colors
      animation: false,
      color: [color],

      // Global text styles
      textStyle: {
        fontFamily: 'Roboto, Arial, Verdana, sans-serif',
        fontSize: 8
      },
      series: [
        {
          type: 'pie',
          cursor: 'pointer',
          clockWise: false,
          radius: ['89%', '90%'],
          hoverOffset: 0,
          itemStyle: dataStyle,
          data: [
            {
              value: this.severity <= 0
                ? 10 : this.severity,
              itemStyle: {
                cursor: 'pointer',
              }
            },
            {
              value: 10 - (this.severity === 0
                ? 10 : this.severity),
              itemStyle: placeHolderStyle
            }
          ]
        },
      ]
    };
    this.firstLoad = false;
  }

}
