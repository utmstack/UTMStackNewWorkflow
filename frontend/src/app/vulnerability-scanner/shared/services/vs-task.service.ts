import {HttpClient, HttpResponse} from '@angular/common/http';
import {Injectable} from '@angular/core';
import {Observable} from 'rxjs';
import {SERVER_API_URL} from '../../../app.constants';
import {createRequestOption} from '../../../shared/util/request-util';
import {VsQuickScanParamType} from '../type/vs-quick-scan-param.type';
import {VsTaskType} from '../type/vs-task.type';

@Injectable({
  providedIn: 'root'
})
export class VsTaskService {
  public resourceUrl = SERVER_API_URL + 'api/utm-gvm-tasks/';

  constructor(private http: HttpClient) {
  }

  quickScan(scan: VsQuickScanParamType): Observable<HttpResponse<any>> {
    return this.http.post(SERVER_API_URL + 'api/openvas/tasks/quickScanTask', scan,
      {observe: 'response', responseType: 'text'});
  }

  stopTask(stop: { commandName: string, taskId: string }): Observable<HttpResponse<any>> {
    return this.http.post<any>(SERVER_API_URL + 'api/openvas/tasks/stop', stop,
      {observe: 'response'});
  }

  getPropertyValues(req?: any): Observable<HttpResponse<string[]>> {
    const options = createRequestOption(req);
    return this.http.get<string[]>(this.resourceUrl + 'search-property-values',
      {params: options, observe: 'response'});
  }

  getLastScanForHost(req?: any): Observable<HttpResponse<VsTaskType>> {
    const options = createRequestOption(req);
    return this.http.get<VsTaskType>(this.resourceUrl + 'last-scan-for-host',
      {params: options, observe: 'response'});
  }


  searchPropertyValue(req?: any): Observable<HttpResponse<any[]>> {
    const options = createRequestOption(req);
    return this.http.get<any[]>(this.resourceUrl + 'search-property-value',
      {params: options, observe: 'response'});
  }

  getSingleTask(req?: any): Observable<HttpResponse<VsTaskType>> {
    const options = createRequestOption(req);
    return this.http.get<VsTaskType>(this.resourceUrl + 'single-task',
      {params: options, observe: 'response'});
  }

  queryTask(req?: any): Observable<HttpResponse<VsTaskType[]>> {
    const options = createRequestOption(req);
    return this.http.get<VsTaskType[]>(this.resourceUrl + 'task-by-filter',
      {params: options, observe: 'response'});
  }
}
