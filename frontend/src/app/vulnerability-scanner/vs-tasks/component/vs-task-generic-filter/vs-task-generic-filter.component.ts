import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';
import {ElasticFilterType} from '../../../../shared/types/filter/elastic-filter.type';
import {VsTaskFilterEnum} from '../../../shared/enums/vs-task-filter.enum';
import {VsTaskService} from '../../../shared/services/vs-task.service';

@Component({
  selector: 'app-vs-task-generic-filter',
  templateUrl: './vs-task-generic-filter.component.html',
  styleUrls: ['./vs-task-generic-filter.component.scss']
})
export class VsTaskGenericFilterComponent implements OnInit {
  @Input() fieldFilter: ElasticFilterType;
  @Output() filterGenericChange = new EventEmitter<{ prop: VsTaskFilterEnum, values: string[] }>();
  fieldValues: string[] = [];
  loading = true;
  selected = [];
  loadingMore = false;
  searching = false;
  requestParams: any;

  constructor(private vsTaskService: VsTaskService) {
  }

  ngOnInit() {
    this.requestParams = {page: 0, prop: this.fieldFilter.field, size: 6};
    this.getPropertyValues();
  }

  onScroll() {
    this.requestParams.page += 1;
    this.loadingMore = true;
    this.getPropertyValues();
  }

  getPropertyValues() {
    this.vsTaskService.getPropertyValues(this.requestParams).subscribe(response => {
      this.fieldValues = this.fieldValues.concat(response.body);
      this.loading = false;
      this.searching = false;
      this.loadingMore = false;
    });
  }

  selectValue(value: string) {
    const index = this.selected.findIndex(val => val === value);
    if (index === -1) {
      this.selected.push(value);
    } else {
      this.selected.splice(index, 1);
    }
    this.filterGenericChange.emit({prop: VsTaskFilterEnum[this.fieldFilter.field], values: this.selected});
  }

  searchInValues($event: string) {
    this.requestParams.value = $event;
    this.requestParams.page = 0;
    this.searching = true;
    this.fieldValues = [];
    this.getPropertyValues();
  }

  onSortValuesChange($event: { orderByCount: boolean; sortAsc: boolean }) {
  }
}
