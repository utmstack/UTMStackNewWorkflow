name: Plugins Build

on:
  release:
    types: [ 'released' ]
  push:
    branches: [ 'main', 'feature/**' ]
    paths:
      - 'plugins/**'
      - 'etc/threatwinds/pipeline/**'
  pull_request_review:
    types: [submitted]
    paths: 
      - 'plugins/**'
      - 'etc/threatwinds/pipeline/**'

jobs:
  check:
    name: Checking
    runs-on: ubuntu-latest
    outputs:
      env_version: ${{ steps.set-env.outputs.env_version }}
    steps:
      - name: Determine Build Environment
        id: set-env
        run: |
          if ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/') }}; then
            echo "DEV environment"
            echo "env_version=v10-dev" >> $GITHUB_OUTPUT
          elif ${{ github.event_name == 'pull_request_review' && github.event.review.state == 'approved' && github.event.pull_request.base.ref == 'main' && startsWith(github.event.pull_request.head.ref, 'feature/') }}; then
            echo "QA environment"
            echo "env_version=v10-qa" >> $GITHUB_OUTPUT
          elif ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}; then
            echo "RC environment"
            echo "env_version=v10-rc" >> $GITHUB_OUTPUT
          elif ${{ github.event_name == 'release' }}; then
            echo "RELEASE environment"
            echo "env_version=release" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build and push to Google CDN
    needs: check
    if: needs.check.outputs.env_version != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Build and push plugins
        id: set-env
        run: |
          export DEPLOY_ENV=${{ needs.check.outputs.env_version }}
          python -m pip install --upgrade pip
          pip install google-cloud-storage
          
          export GOOS=linux
          export GOARCH=amd64
          cd ${{ github.workspace }}/plugins
          make build

          export GCP_KEY='${{ secrets.GCP_KEY }}'
          cd ${{ github.workspace }}/.github/scripts
          python plugins-deploy.py $DEPLOY_ENV
