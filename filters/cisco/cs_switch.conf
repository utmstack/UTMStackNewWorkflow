filter {
#......................................................................#
# Cisco Switches bassed on https://www.cisco.com/c/en/us/td/docs/ios/15_0sy/system/messages/15sysmg.pdf (july, 2022)
# https://www.cisco.com/c/en/us/support/ios-nx-os-software/index.html (november 2022)
# Support CISCO IOS from 15 SY to IOS XE v17
# Filter version 2.0.1

  split {
    field => "message"
    terminator => "<utm-log-separator>"
  }

    #Looking for datasource generated by an agent and parse original message
  if [message]=~/\[utm_stack_agent_ds=(.+)\]-(.+)/ {
    grok {
      match => {
        "message" => [ "\[utm_stack_agent_ds=%{DATA:dataSource}\]-%{GREEDYDATA:original_log_message}" ]
      }
    }
  }
  if [original_log_message] {
    mutate {
      update => { "message" => "%{[original_log_message]}" }
    }
  }


  if [message] and [message] =~/%(\w|_)+-((\b\w+\b-\b\w+\b-)?)(\d)-([A-Z]|_)+/{
    grok {
      match => { "message" => [
           "(<%{POSINT:syslog_pri}>)?(%{INT}: )?%{SYSLOGTIMESTAMP:syslog_timestamp}: %%{CISCO_REASON:facility}-((?<sub_facility>(\b\w+\b-\b\w+\b))-)?%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:cisco_msg}",
           "(<%{POSINT:syslog_pri}>)?(%{INT}: )?%{SYSLOGTIMESTAMP:syslog_timestamp}: %%{WORD:card_type}-%{INT}-MSG:(\s)?%{WORD:card_slot} %%{CISCO_REASON:facility}-((?<sub_facility>(\b\w+\b-\b\w+\b))-)?%{INT:severity_level}-%{CISCO_REASON:facility_mnemonic}: %{GREEDYDATA:cisco_msg}"
           ]
      }
    }
    if [facility] and ([facility] !="ASA" and [facility] !="FTD") {
#......................................................................#
#Generating dataSource field required by CurrelationRulesEngine
#Checks if exists, if not evaluate to the host variable
     if (![dataSource]){
        mutate { add_field => { "dataSource" => "%{host}" } }
     }
#......................................................................#
#Generating dataType field required by CurrelationRulesEngine
        mutate { add_field => { "dataType" => "cisco-switch" } }
#......................................................................#
#Decoding syslog_pri fields 
       if [syslog_pri] {
         syslog_pri {
           use_labels => true
         }
       }
#Decoding CISCO Severity 
       if [severity_level] {
          if [severity_level] == "0"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "emergency" } }
          } else if [severity_level] == "1"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "alert" } }
          } else if [severity_level] == "2"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "critical" } }
          } else if [severity_level] == "3"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "error" } }
          } else if [severity_level] == "4"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "warning" } }
          } else if [severity_level] == "5"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "notification" } }
          } else if [severity_level] == "6"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "informational" } }
          } else if [severity_level] == "7"{
             mutate { add_field => { "[logx][cisco_switch][severity_label]" => "debugging" } }
          }
       }
#......................................................................#	   
#Formatting number values
       if [severity_level]{
	        mutate { convert => {"severity_level" => "integer"} }
       }

#......................................................................#	   
#Generating default values if field is not present
       if ![sub_facility] {
          mutate { add_field => { "[sub_facility]" => "NP" } }
       }
       if ![card_type] {
          mutate { add_field => { "[card_type]" => "NP" } }
       }
       if ![card_slot] {
          mutate { add_field => { "[card_slot]" => "NP" } }
       }
#Generating logx structure
        mutate { 
          rename => { "syslog_pri" => "[logx][cisco_switch][syslog_pri]" }
          rename => { "syslog_timestamp" => "[logx][cisco_switch][syslog_timestamp]" }
          rename => { "facility" => "[logx][cisco_switch][facility]" }
          rename => { "severity_level" => "[logx][cisco_switch][severity_level]" }
          rename => { "facility_mnemonic" => "[logx][cisco_switch][facility_mnemonic]" }
          rename => { "cisco_msg" => "[logx][cisco_switch][cisco_msg]" }
          rename => { "syslog_facility_code" => "[logx][cisco_switch][syslog_facility_code]" }
          rename => { "syslog_facility" => "[logx][cisco_switch][syslog_facility]" }
          rename => { "syslog_severity_code" => "[logx][cisco_switch][syslog_severity_code]" }
          rename => { "syslog_severity" => "[logx][cisco_switch][syslog_severity]" }
          rename => { "message" => "[logx][cisco_switch][message]" }

          #Added in v1.1.1
          rename => { "sub_facility" => "[logx][cisco_switch][sub_facility]" }
          rename => { "card_type" => "[logx][cisco_switch][card_type]" }
          rename => { "card_slot" => "[logx][cisco_switch][card_slot]" }
        }
#Finally, remove unnecessary fields
        mutate {
          remove_field => ["@version","path"]
        }
    }
  }
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["original_log_message","headers"]
   }
}
