# Postgres module filter, version 3.0.0
# Filter Input requirements -> fileset: datatype
#                              log    : plain text
# 
# Documentations
# 1- https://www.postgresql.org/docs/
# 2- https://www.postgresql.org/docs/current/runtime-config-logging.html
# 3- https://www.elastic.co/guide/en/beats/filebeat/7.13/filebeat-module-postgresql.html
# 
# Implementation
# 1. Parsing the json from beats
# 2. Parsing the message field containing the postgres log
pipeline:
  - dataTypes:
      - postgresql
    steps:
      - json:
          source: raw

      # Parse beats field    
      - rename:
          from:
            - log.log.file.path
          to: local.file
      - rename:
          from:
            - log.host.ip
          to: local.ips
      - rename:
          from:
            - log.host.mac
          to: local.macs
      - rename:
          from:
            - log.host.hostname
          to: local.host
      - rename:
          from:
            - log.event.dataset
          to: action
      - rename:
          from:
            - log.agent.version
          to: log.agentVersion
      - rename:
          from:
            - log.host.os.kernel
          to: log.osVersion
      - rename:
          from:
            - log.host.os.type
          to: log.osType
      - rename:
          from:
            - log.host.architecture
          to: log.cpuArchitecture

      # Fields conversions
      - cast:
          to: '[]string'
          fields:
            - local.ips
      - cast:
          to: '[]string'
          fields:
            - local.macs

      # Common postgresql log parsing
      # Example Log 
      # Mar 24 14:58:08 webappsecure postgres[7694]: [10-2] 42701 530b5e00.1e0e STATEMENT: ALTER TABLE sessiongroup ADD COLUMN requests bigint    
      - grok:
          patterns:
            - fieldName: log.deviceTime
              pattern: '{{.monthName}}{{.space}}{{.monthDay}}{{.space}}{{.time}}'
            - fieldName: from.host
              pattern: '{{.hostname}}'
            - fieldName: from.process
              pattern: '{{.word}}'
            - fieldName: log.processId
              pattern: '((\[{{.data}}\]:)?)'
            - fieldName: log.messageNumber
              pattern: '(\[{{.data}}\])'
            - fieldName: log.error
              pattern: '((\d+)?)'
            - fieldName: log.sessionId
              pattern: '(([0-9a-f]{8}\.[0-9a-f]{4})?)'
            - fieldName: log.actionResult
              pattern: '{{.greedy}}' 
          source: log.message

      # Common postgresql log parsing
      # Example Log 
      # 2022-02-15 19:43:52.364 UTC [25] LOG:  database system was shut down at 2022-02-11 20:01:30 UTC
      - grok:
          patterns:
            - fieldName: log.deviceTime
              pattern: '{{.year}}(-){{.monthNumber}}(-){{.monthDay}}{{.space}}{{.time}}{{.space}}((UTC)?)'
            - fieldName: log.processId
              pattern: '((\[{{.data}}\])?)'
            - fieldName: log.actionResult
              pattern: '{{.greedy}}' 
          source: log.message

      # Removing unused caracters
      - trim:
          function: prefix
          substring: '['
          fields:
            - log.messageNumber
            - log.processId
      - trim:
          function: suffix
          substring: ':'
          fields:
            - log.processId
      - trim:
          function: suffix
          substring: ']'
          fields:
            - log.messageNumber
            - log.processId
            
      # Removing unused fields
      - delete:
          fields:
            - log.service
            - log.metadata
            - log.agent
            - log.host
            - log.event
            - log.ecs
            - log.log