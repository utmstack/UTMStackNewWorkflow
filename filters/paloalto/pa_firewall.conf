filter {

# Palo Alto Firewall filter version 2.0.1
# Support Syslog CEF format
# Based on PAN-OS version 10.2
# https://docs.paloaltonetworks.com/pan-os/10-2/pan-os-admin/monitoring/use-syslog-for-monitoring/syslog-field-descriptions (june, 2022)
# https://docs.paloaltonetworks.com/resources/cef (june, 2022)

    split {
     field => "message"
     terminator => "<utm-log-separator>"
    }

    #Looking for datasource generated by an agent and parse original message
    if [message]=~/\[utm_stack_agent_ds=(.+)\]-(.+)/ {
      grok {
        match => {
          "message" => [ "\[utm_stack_agent_ds=%{DATA:dataSource}\]-%{GREEDYDATA:original_log_message}" ]
        }
      }
    }
    if [original_log_message] {
      mutate {
        update => { "message" => "%{[original_log_message]}" }
      }
    }

    if ![dataType] {
        #First, search to define the entry point contain CEF:, contain |something, or look for Palo Alto
        if [message] and ((("CEF:" in [message] or "LEEF:" in [message]) 
        and ([message] =~/\|(\w+)?(\s)?Palo(\s)Alto(\s)Networks(\s)?(\w+)?\|/ 
        and [message] =~/\|(\w+)?(\s)?PAN-OS(\s)?(\w+)?\|/))
        or ([message] =~/(.+),(\s)?(TRAFFIC|START|END)(\s)?,(\s)?(start|end|drop|deny)/)
        or ([message] =~/(.+),(\s)?(THREAT)(\s)?,(\s)?(data|dlp|dlp-non-file|file|flood|packet|scan|spyware|url|ml-virus|virus|vulnerability|wildfire|wildfire-virus)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(HIP-MATCH|IPTAG)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(GLOBALPROTECT)(\s)?,(\s)?(data|file|flood|packet|scan|spyware|url|virus|vulnerability|wildfire|wildfire-virus)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(USERID)(\s)?,(\s)?(login|logout|register-tag|unregister-tag)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(DECRYPTION)(\s)?,(.+),(\s)?(allow|deny|drop|drop ICMP|reset both|reset client|reset server)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(SCTP)(\s)?,(.+),(\s)?(allow|deny)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(CONFIG)(\s)?,(.+),(\s)?(add|clone|commit|delete|edit|move|rename|set)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(AUTHENTICATION|SYSTEM|CORRELATION)(\s)?,(\s)?(crypto|dhcp|dnsproxy|dos|general|global-protect|ha|hw|nat|ntpd|pbf|port|pppoe|ras|routing|satd|sslmgr|sslvpn|userid|url-filtering|vpn)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(GTP)(\s)?,(\s)?(start|end|drop|deny)(\s)?,(.+)/)){
#......................................................................#
#Generating dataSource field required by CurrelationRulesEngine
#Checks if exists, if not evaluate to the host variable
           if (![dataSource]){
              mutate {
               add_field => { "dataSource" => "%{host}" }
              }
           }
#......................................................................# 
#Generating dataType field required by CurrelationRulesEngine
              mutate {
               add_field => { "dataType" => "firewall-paloalto" }
              }
#......................................................................#
#If CEF formatted log do the parsing of the message
        if ("CEF:" in [message] or "LEEF:" in [message]) {
#......................................................................#
#Using grok to parse header of the message
            grok {
              match => {
                "message" => [
                   "(%{INT:not_defined})?(\s)?(<%{NUMBER:priority}>)?(%{INT:syslog_version})?((\s)%{GREEDYDATA:syslog_date_host}(\s))?(?<format_type>(CEF|LEEF)):(\s)?(?<format_version>(%{INT}\.%{INT}|%{INT}))%{GREEDYDATA:cef_or_leef_msg_all}"
                ]
              }
            }
        }
        if ("CEF:" in [message] ) {
#......................................................................#
#Logs have different structure according to Firewall Log Types, so first, define Log Type
#Using grok to parse components of the cef_message
#......................................................................#
#FIREWALL LOGS 
#......................................................................#
        if ([cef_or_leef_msg_all]){
          #Detect if its a Traffic log
          if ([message] =~/\|(TRAFFIC|traffic)\|/){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its an url threat log
          } else if ([message] =~/\|(THREAT|threat)\|/ and [message] =~/\|(URL|url)\|/){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a data threat log
          } else if ([message] =~/\|(THREAT|threat)\|/ and [message] =~/\|(DATA|data|DLP|dlp|dlp-non-file|FILE|file)\|/){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a WildFire threat log
          } else if ([message] =~/\|(THREAT|threat)\|/ and [message] =~/\|(WILDFIRE|wildfire)\|/){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its general threat log
          } else if ([message] =~/\|(THREAT|threat)\|/){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_threatid}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a Config log
          } else if ([message] =~/\|(CONFIG|config)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_result}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a System log
          } else if ([message] =~/\|(SYSTEM|system)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a HIP-MATCH log
          } else if ([message] =~/\|(HIP-MATCH|hip-match)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_matchtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its an AUTHENTICATION log
          } else if ([message] =~/\|(AUTHENTICATION|authentication)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its an USERID log
          } else if ([message] =~/\|(USERID|userid)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its an IPTAG log
          } else if ([message] =~/\|(IPTAG|iptag)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a Tunnel log
          } else if ([message] =~/\|(START|start|END|end)\|(START|start|END|end)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a CORRELATION log
          } else if ([message] =~/\|(CORRELATION|correlation)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_category}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a GTP log
          } else if ([message] =~/\|(GTP|gtp)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_subtype}\|%{DATA:pa_type}\|%{DATA:severity}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a SCTP log
          } else if ([message] =~/\|(SCTP|sctp)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_type}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a GLOBALPROTECT log
          } else if ([message] =~/\|(GLOBALPROTECT|globalprotect)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_type}\|%{DATA:pa_subtype}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a DECRYPTION log
          } else if ([message] =~/\|(DECRYPTION|decryption)\|/ ){
              grok {
               match => {
                 "cef_or_leef_msg_all" => [
                    "\|%{DATA:embDeviceVendor}\|%{DATA:embDeviceProduct}\|%{DATA:pa_sender_sw_version}\|%{DATA:pa_type}\|%{DATA:pa_subtype}\|%{GREEDYDATA:cef_or_leef_msg}"
                  ]
               }
              }
          }
# END OF FIREWALL LOGS BY TYPE
        }
        }

#......................................................................#
#If CSV formatted log do the parsing of the message

        if ([message] and ([message] =~/(.+),(\s)?(TRAFFIC|START|END)(\s)?,(\s)?(start|end|drop|deny)/)
        or ([message] =~/(.+),(\s)?(THREAT)(\s)?,(\s)?(data|dlp|dlp-non-file|file|flood|packet|scan|spyware|url|ml-virus|virus|vulnerability|wildfire|wildfire-virus)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(HIP-MATCH|IPTAG)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(GLOBALPROTECT)(\s)?,(\s)?(data|file|flood|packet|scan|spyware|url|virus|vulnerability|wildfire|wildfire-virus)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(USERID)(\s)?,(\s)?(login|logout|register-tag|unregister-tag)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(DECRYPTION)(\s)?,(.+),(\s)?(allow|deny|drop|drop ICMP|reset both|reset client|reset server)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(SCTP)(\s)?,(.+),(\s)?(allow|deny)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(CONFIG)(\s)?,(.+),(\s)?(add|clone|commit|delete|edit|move|rename|set)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(AUTHENTICATION|SYSTEM|CORRELATION)(\s)?,(\s)?(crypto|dhcp|dnsproxy|dos|general|global-protect|ha|hw|nat|ntpd|pbf|port|pppoe|ras|routing|satd|sslmgr|sslvpn|userid|url-filtering|vpn)(\s)?,(.+)/)
        or ([message] =~/(.+),(\s)?(GTP)(\s)?,(\s)?(start|end|drop|deny)(\s)?,(.+)/)){ 
          grok {
            match => {
              "message" => [
                "(%{INT:not_defined})?(\s)?(<%{NUMBER:priority}>)?(%{INT:syslog_version})?(\s)?%{DATA:syslog_date_host}(\s)?%{NUMBER:FUTURE_USE},%{GREEDYDATA:csv_msg_all}"
              ]
            }
          }
          if ([csv_msg_all]){
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#If csv contain "" word+ "" 
            if ([csv_msg_all] =~/(.+)""(.+)""(.+)/){
              mutate { gsub => [ "csv_msg_all", '""(.+)""', '"\1"'] }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a TRAFFIC log
            if ([message] =~/(.+),(\s)?(TRAFFIC)(\s)?,(\s)?(start|end|drop|deny)(\s)?,(.+)/){
              csv {
                source => "csv_msg_all"
                skip_header => "true"
                columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "src", 
                            "dst", "natsrc", "natdst", "rule", "srcuser", "dstuser", "app", "vsys", "from", "to", "inbound_if",
                            "outbound_if", "logset", "FUTURE_USE", "sessionid", "repeatcnt", "spt", "dpt", "natspt", "natdpt", 
                            "flags", "proto", "act", "bytes", "bytes_sent", "bytes_received", "packets", "start", "elapsed", 
                            "category", "FUTURE_USE", "seqno", "actionflags", "srcloc", "dstloc", "FUTURE_USE", "pkts_sent", 
                            "pkts_received", "session_end_reason", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", 
                            "dg_hier_level_4","vsys_name", "device_name", "action_source", "src_uuid", "dst_uuid", "tunnelid_imsi",
                            "monitortag_imei", "parent_session_id", "parent_start_time", "tunnel", "assoc_id", "chunks", "chunks_sent",
                            "chunks_received", "rule_uuid", "http2_connection", "link_change_count", "policy_id", "link_switches",
                            "sdwan_cluster", "sdwan_device_type", "sdwan_cluster_type", "sdwan_site", "dynusergroup_name", "xff_ip",
                            "src_category", "src_profile", "src_model", "src_vendor", "src_osfamily", "src_osversion", "src_host",
                            "src_mac", "dst_category", "dst_profile", "dst_model", "dst_vendor", "dst_osfamily", "dst_osversion",
                            "dst_host", "dst_mac", "container_id", "pod_namespace", "pod_name", "src_edl", "dst_edl", "hostid",
                            "serialnumber", "src_dag", "dst_dag", "session_owner", "high_res_timestamp", "nsdsai_sst", "nsdsai_sd",
                            "subcategory_of_app", "category_of_app", "technology_of_app", "risk_of_app", "characteristic_of_app",
                            "container_of_app", "tunneled_app", "is_saas_of_app", "sanctioned_state_of_app", "offloaded"]
            }
                      #......................................................................#
# Rename fields of TRAFFIC log
              mutate {
                rename => { "[receive_time]" => "[kv_field][receive_time]" }
                rename => { "[serial]" => "[kv_field][serial]" }
                rename => { "[pa_type]" => "[kv_field][pa_type]" }
                rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
                rename => { "[time_generated]" => "[kv_field][time_generated]" }
                rename => { "[src]" => "[kv_field][src]" }
                rename => { "[dst]" => "[kv_field][dst]" }
                rename => { "[natsrc]" => "[kv_field][natsrc]" }
                rename => { "[natdst]" => "[kv_field][natdst]" }
                rename => { "[rule]" => "[kv_field][rule]" }
                rename => { "[srcuser]" => "[kv_field][srcuser]" }
                rename => { "[dstuser]" => "[kv_field][dstuser]" }
                rename => { "[app]" => "[kv_field][app]" }
                rename => { "[vsys]" => "[kv_field][vsys]" }
                rename => { "[from]" => "[kv_field][from]" }
                rename => { "[to]" => "[kv_field][to]" }
                rename => { "[inbound_if]" => "[kv_field][inbound_if]" }
                rename => { "[outbound_if]" => "[kv_field][outbound_if]" }
                rename => { "[logset]" => "[kv_field][logset]" }
                rename => { "[sessionid]" => "[kv_field][sessionid]" }
                rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
                rename => { "[spt]" => "[kv_field][spt]" }
                rename => { "[dpt]" => "[kv_field][dpt]" }
                rename => { "[natspt]" => "[kv_field][natspt]" }
                rename => { "[natdpt]" => "[kv_field][natdpt]" }
                rename => { "[flags]" => "[kv_field][flags]" }
                rename => { "[proto]" => "[kv_field][proto]" }
                rename => { "[act]" => "[kv_field][act]" }
                rename => { "[bytes]" => "[kv_field][bytes]" }
                rename => { "[bytes_sent]" => "[kv_field][bytes_sent]" }
                rename => { "[bytes_received]" => "[kv_field][bytes_received]" }
                rename => { "[packets]" => "[kv_field][packets]" }
                rename => { "[start]" => "[kv_field][start]" }
                rename => { "[elapsed]" => "[kv_field][elapsed]" }
                rename => { "[category]" => "[kv_field][category]" }
                rename => { "[seqno]" => "[kv_field][seqno]" }
                rename => { "[actionflags]" => "[kv_field][actionflags]" }
                rename => { "[srcloc]" => "[kv_field][srcloc]" }
                rename => { "[dstloc]" => "[kv_field][dstloc]" }
                rename => { "[pkts_sent]" => "[kv_field][pkts_sent]" }
                rename => { "[pkts_received]" => "[kv_field][pkts_received]" }
                rename => { "[session_end_reason]" => "[kv_field][session_end_reason]" }
                rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
                rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
                rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
                rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
                rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
                rename => { "[device_name]" => "[kv_field][device_name]" }
                rename => { "[action_source]" => "[kv_field][action_source]" }
                rename => { "[src_uuid]" => "[kv_field][src_uuid]" }
                rename => { "[dst_uuid]" => "[kv_field][dst_uuid]" }
                rename => { "[tunnelid_imsi]" => "[kv_field][tunnelid_imsi]" }
                rename => { "[monitortag_imei]" => "[kv_field][monitortag_imei]" }
                rename => { "[parent_session_id]" => "[kv_field][parent_session_id]" }
                rename => { "[parent_start_time]" => "[kv_field][parent_start_time]" }
                rename => { "[tunnel]" => "[kv_field][tunnel]" }
                rename => { "[assoc_id]" => "[kv_field][assoc_id]" }
                rename => { "[chunks]" => "[kv_field][chunks]" }
                rename => { "[chunks_sent]" => "[kv_field][chunks_sent]" }
                rename => { "[chunks_received]" => "[kv_field][chunks_received]" }
                rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
                rename => { "[http2_connection]" => "[kv_field][http2_connection]" }
                rename => { "[link_change_count]" => "[kv_field][link_change_count]" }
                rename => { "[policy_id]" => "[kv_field][policy_id]" }
                rename => { "[link_switches]" => "[kv_field][link_switches]" }
                rename => { "[sdwan_cluster]" => "[kv_field][sdwan_cluster]" }
                rename => { "[sdwan_device_type]" => "[kv_field][sdwan_device_type]" }
                rename => { "[sdwan_cluster_type]" => "[kv_field][sdwan_cluster_type]" }
                rename => { "[sdwan_site]" => "[kv_field][sdwan_site]" }
                rename => { "[dynusergroup_name]" => "[kv_field][dynusergroup_name]" }
                rename => { "[xff_ip]" => "[kv_field][xff_ip]" }
                rename => { "[src_category]" => "[kv_field][src_category]" }
                rename => { "[src_profile]" => "[kv_field][src_profile]" }
                rename => { "[src_model]" => "[kv_field][src_model]" }
                rename => { "[src_vendor]" => "[kv_field][src_vendor]" }
                rename => { "[src_osfamily]" => "[kv_field][src_osfamily]" }
                rename => { "[src_osversion]" => "[kv_field][src_osversion]" }
                rename => { "[src_host]" => "[kv_field][src_host]" }
                rename => { "[src_mac]" => "[kv_field][src_mac]" }
                rename => { "[dst_category]" => "[kv_field][dst_category]" }
                rename => { "[dst_profile]" => "[kv_field][dst_profile]" }
                rename => { "[dst_model]" => "[kv_field][dst_model]" }
                rename => { "[dst_vendor]" => "[kv_field][dst_vendor]" }
                rename => { "[dst_osfamily]" => "[kv_field][dst_osfamily]" }
                rename => { "[dst_osversion]" => "[kv_field][dst_osversion]" }
                rename => { "[dst_host]" => "[kv_field][dst_host]" }
                rename => { "[dst_mac]" => "[kv_field][dst_mac]" }
                rename => { "[container_id]" => "[kv_field][container_id]" }
                rename => { "[pod_namespace]" => "[kv_field][pod_namespace]" }
                rename => { "[pod_name]" => "[kv_field][pod_name]" }
                rename => { "[src_edl]" => "[kv_field][src_edl]" }
                rename => { "[dst_edl]" => "[kv_field][dst_edl]" }
                rename => { "[hostid]" => "[kv_field][hostid]" }
                rename => { "[serialnumber]" => "[kv_field][serialnumber]" }
                rename => { "[src_dag]" => "[kv_field][src_dag]" }
                rename => { "[dst_dag]" => "[kv_field][dst_dag]" }
                rename => { "[session_owner]" => "[kv_field][session_owner]" }
                rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
                rename => { "[nsdsai_sst]" => "[kv_field][nsdsai_sst]" }
                rename => { "[nsdsai_sd]" => "[kv_field][nsdsai_sd]" }
                rename => { "[subcategory_of_app]" => "[kv_field][subcategory_of_app]" }
                rename => { "[category_of_app]" => "[kv_field][category_of_app]" }
                rename => { "[technology_of_app]" => "[kv_field][technology_of_app]" }
                rename => { "[risk_of_app]" => "[kv_field][risk_of_app]" }
                rename => { "[characteristic_of_app]" => "[kv_field][characteristic_of_app]" }
                rename => { "[container_of_app]" => "[kv_field][container_of_app]" }
                rename => { "[tunneled_app]" => "[kv_field][tunneled_app]" }
                rename => { "[is_saas_of_app]" => "[kv_field][is_saas_of_app]" }
                rename => { "[sanctioned_state_of_app]" => "[kv_field][sanctioned_state_of_app]" }
                rename => { "[offloaded]" => "[kv_field][offloaded]" }
              }
            #--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a THREAT log
          }else if ([message] =~/(.+),(\s)?(THREAT)(\s)?,(\s)?(data|dlp|dlp-non-file|file|flood|packet|scan|spyware|url|ml-virus|virus|vulnerability|wildfire|wildfire-virus)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "src", 
                          "dst", "natsrc", "natdst", "rule", "srcuser", "dstuser", "app", "vsys", "from", "to", "inbound_if",
                          "outbound_if", "logset", "FUTURE_USE", "sessionid", "repeatcnt", "spt", "dpt", "natspt", "natdpt", 
                          "flags", "proto", "act", "misc", "pa_threatid", "category", "severity", "direction", 
                          "seqno", "actionflags", "srcloc", "dstloc", "FUTURE_USE", "contenttype", "pcap_id", "filedigest", 
                          "cloud", "url_idx", "user_agent", "filetype", "xff", "referer", "sender", "subject", "recipient", "reportid",
                          "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4", "vsys_name", "device_name", "FUTURE_USE",
                          "src_uuid", "dst_uuid", "http_method", "tunnelid_imsi", "monitortag_imei", "parent_session_id", "parent_start_time", 
                          "tunnel", "thr_category", "contentver", "FUTURE_USE", "assoc_id", "ppid", "http_headers", "url_category_list",
                          "rule_uuid", "http2_connection", "dynusergroup_name", "xff_ip", "src_category", "src_profile", "src_model",
                          "src_vendor", "src_osfamily", "src_osversion", "src_host", "src_mac", "dst_category", "dst_profile", "dst_model", 
                          "dst_vendor", "dst_osfamily", "dst_osversion", "dst_host", "dst_mac", "container_id", "pod_namespace", "pod_name", 
                          "src_edl", "dst_edl", "hostid", "serialnumber", "domain_edl", "src_dag", "dst_dag", "partial_hash", "high_res_timestamp",
                          "reason", "justification", "nssai_sst", "subcategory_of_app", "category_of_app", "technology_of_app", "risk_of_app", 
                          "characteristic_of_app", "container_of_app", "tunneled_app", "is_saas_of_app", "sanctioned_state_of_app", "cloud_reportid"]
           }
                       #......................................................................#
# Rename fields of THREAT log
           mutate {
            rename => { "[receive_time]" => "[kv_field][receive_time]" }
            rename => { "[serial]" => "[kv_field][serial]" }
            rename => { "[pa_type]" => "[kv_field][pa_type]" }
            rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
            rename => { "[time_generated]" => "[kv_field][time_generated]" }
            rename => { "[src]" => "[kv_field][src]" }
            rename => { "[dst]" => "[kv_field][dst]" }
            rename => { "[natsrc]" => "[kv_field][natsrc]" }
            rename => { "[natdst]" => "[kv_field][natdst]" }
            rename => { "[rule]" => "[kv_field][rule]" }
            rename => { "[srcuser]" => "[kv_field][srcuser]" }
            rename => { "[dstuser]" => "[kv_field][dstuser]" }
            rename => { "[app]" => "[kv_field][app]" }
            rename => { "[vsys]" => "[kv_field][vsys]" }
            rename => { "[from]" => "[kv_field][from]" }
            rename => { "[to]" => "[kv_field][to]" }
            rename => { "[inbound_if]" => "[kv_field][inbound_if]" }
            rename => { "[outbound_if]" => "[kv_field][outbound_if]" }
            rename => { "[logset]" => "[kv_field][logset]" }
            rename => { "[sessionid]" => "[kv_field][sessionid]" }
            rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
            rename => { "[spt]" => "[kv_field][spt]" }
            rename => { "[dpt]" => "[kv_field][dpt]" }
            rename => { "[natspt]" => "[kv_field][natspt]" }
            rename => { "[natdpt]" => "[kv_field][natdpt]" }
            rename => { "[flags]" => "[kv_field][flags]" }
            rename => { "[proto]" => "[kv_field][proto]" }
            rename => { "[act]" => "[kv_field][act]" }
            rename => { "[misc]" => "[kv_field][misc]" }
            rename => { "[pa_threatid]" => "[kv_field][pa_threatid]" }
            rename => { "[category]" => "[kv_field][category]" }
            rename => { "[severity]" => "[kv_field][severity]" }
            rename => { "[direction]" => "[kv_field][direction]" }
            rename => { "[seqno]" => "[kv_field][seqno]" }
            rename => { "[actionflags]" => "[kv_field][actionflags]" }
            rename => { "[srcloc]" => "[kv_field][srcloc]" }
            rename => { "[dstloc]" => "[kv_field][dstloc]" }
            rename => { "[contenttype]" => "[kv_field][contenttype]" }
            rename => { "[pcap_id]" => "[kv_field][pcap_id]" }
            rename => { "[filedigest]" => "[kv_field][filedigest]" }
            rename => { "[cloud]" => "[kv_field][cloud]" }
            rename => { "[url_idx]" => "[kv_field][url_idx]" }
            rename => { "[user_agent]" => "[kv_field][user_agent]" }
            rename => { "[filetype]" => "[kv_field][filetype]" }
            rename => { "[xff]" => "[kv_field][xff]" }
            rename => { "[referer]" => "[kv_field][referer]" }
            rename => { "[sender]" => "[kv_field][sender]" }
            rename => { "[subject]" => "[kv_field][subject]" }
            rename => { "[recipient]" => "[kv_field][recipient]" }
            rename => { "[reportid]" => "[kv_field][reportid]" }
            rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
            rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
            rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
            rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
            rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
            rename => { "[device_name]" => "[kv_field][device_name]" }
            rename => { "[src_uuid]" => "[kv_field][src_uuid]" }
            rename => { "[dst_uuid]" => "[kv_field][dst_uuid]" }
            rename => { "[http_method]" => "[kv_field][http_method]" }
            rename => { "[tunnelid_imsi]" => "[kv_field][tunnelid_imsi]" }
            rename => { "[monitortag_imei]" => "[kv_field][monitortag_imei]" }
            rename => { "[parent_session_id]" => "[kv_field][parent_session_id]" }
            rename => { "[parent_start_time]" => "[kv_field][parent_start_time]" }
            rename => { "[tunnel]" => "[kv_field][tunnel]" }
            rename => { "[thr_category]" => "[kv_field][thr_category]" }
            rename => { "[contentver]" => "[kv_field][contentver]" }
            rename => { "[assoc_id]" => "[kv_field][assoc_id]" }
            rename => { "[ppid]" => "[kv_field][ppid]" }
            rename => { "[http_headers]" => "[kv_field][http_headers]" }
            rename => { "[url_category_list]" => "[kv_field][url_category_list]" }
            rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
            rename => { "[http2_connection]" => "[kv_field][http2_connection]" }
            rename => { "[dynusergroup_name]" => "[kv_field][dynusergroup_name]" }
            rename => { "[xff_ip]" => "[kv_field][xff_ip]" }
            rename => { "[src_category]" => "[kv_field][src_category]" }
            rename => { "[src_profile]" => "[kv_field][src_profile]" }
            rename => { "[src_model]" => "[kv_field][src_model]" }
            rename => { "[src_vendor]" => "[kv_field][src_vendor]" }
            rename => { "[src_osfamily]" => "[kv_field][src_osfamily]" }
            rename => { "[src_osversion]" => "[kv_field][src_osversion]" }
            rename => { "[src_host]" => "[kv_field][src_host]" }
            rename => { "[src_mac]" => "[kv_field][src_mac]" }
            rename => { "[dst_category]" => "[kv_field][dst_category]" }
            rename => { "[dst_profile]" => "[kv_field][dst_profile]" }
            rename => { "[dst_model]" => "[kv_field][dst_model]" }
            rename => { "[dst_vendor]" => "[kv_field][dst_vendor]" }
            rename => { "[dst_osfamily]" => "[kv_field][dst_osfamily]" }
            rename => { "[dst_osversion]" => "[kv_field][dst_osversion]" }
            rename => { "[dst_host]" => "[kv_field][dst_host]" }
            rename => { "[dst_mac]" => "[kv_field][dst_mac]" }
            rename => { "[container_id]" => "[kv_field][container_id]" }
            rename => { "[pod_namespace]" => "[kv_field][pod_namespace]" }
            rename => { "[pod_name]" => "[kv_field][pod_name]" }
            rename => { "[src_edl]" => "[kv_field][src_edl]" }
            rename => { "[dst_edl]" => "[kv_field][dst_edl]" }
            rename => { "[hostid]" => "[kv_field][hostid]" }
            rename => { "[serialnumber]" => "[kv_field][serialnumber]" }
            rename => { "[domain_edl]" => "[kv_field][domain_edl]" }
            rename => { "[src_dag]" => "[kv_field][src_dag]" }
            rename => { "[dst_dag]" => "[kv_field][dst_dag]" }
            rename => { "[partial_hash]" => "[kv_field][partial_hash]" }
            rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
            rename => { "[reason]" => "[kv_field][reason]" }
            rename => { "[justification]" => "[kv_field][justification]" }
            rename => { "[nssai_sst]" => "[kv_field][nssai_sst]" }
            rename => { "[subcategory_of_app]" => "[kv_field][subcategory_of_app]" }
            rename => { "[category_of_app]" => "[kv_field][category_of_app]" }
            rename => { "[technology_of_app]" => "[kv_field][technology_of_app]" }
            rename => { "[risk_of_app]" => "[kv_field][risk_of_app]" }
            rename => { "[characteristic_of_app]" => "[kv_field][characteristic_of_app]" }
            rename => { "[container_of_app]" => "[kv_field][container_of_app]" }
            rename => { "[tunneled_app]" => "[kv_field][tunneled_app]" }
            rename => { "[is_saas_of_app]" => "[kv_field][is_saas_of_app]" }
            rename => { "[sanctioned_state_of_app]" => "[kv_field][sanctioned_state_of_app]" }
            rename => { "[cloud_reportid]" => "[kv_field][cloud_reportid]" }
           }
            #--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a HIP-MATCH log
          }else if ([message] =~/(.+),(\s)?(HIP-MATCH)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "srcuser", "vsys", 
                          "machinename", "os", "src", "matchname", "repeatcnt", "matchtype", "FUTURE_USE", "FUTURE_USE", 
                          "seqno", "actionflags", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4",
                          "vsys_name", "device_name", "vsys_id", "srcipv6", "hostid", "serialnumber", "mac", "high_res_timestamp"]
           }
           #......................................................................#
# Rename fields of HIP-MATCH log
          mutate {
            rename => { "[receive_time]" => "[kv_field][receive_time]" }
            rename => { "[serial]" => "[kv_field][serial]" }
            rename => { "[pa_type]" => "[kv_field][pa_type]" }
            rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
            rename => { "[time_generated]" => "[kv_field][time_generated]" }
            rename => { "[srcuser]" => "[kv_field][srcuser]" }
            rename => { "[vsys]" => "[kv_field][vsys]" }
            rename => { "[machinename]" => "[kv_field][machinename]" }
            rename => { "[os]" => "[kv_field][os]" }
            rename => { "[src]" => "[kv_field][src]" }
            rename => { "[matchname]" => "[kv_field][matchname]" }
            rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
            rename => { "[matchtype]" => "[kv_field][matchtype]" }
            rename => { "[seqno]" => "[kv_field][seqno]" }
            rename => { "[actionflags]" => "[kv_field][actionflags]" }
            rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
            rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
            rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
            rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
            rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
            rename => { "[device_name]" => "[kv_field][device_name]" }
            rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
            rename => { "[srcipv6]" => "[kv_field][srcipv6]" }
            rename => { "[hostid]" => "[kv_field][hostid]" }
            rename => { "[serialnumber]" => "[kv_field][serialnumber]" }
            rename => { "[mac]" => "[kv_field][mac]" }
            rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
          }
          #--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a GLOBALPROTECT log
          }else if ([message] =~/(.+),(\s)?(GLOBALPROTECT)(\s)?,(\s)?(data|file|flood|packet|scan|spyware|url|virus|vulnerability|wildfire|wildfire-virus)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "vsys","eventid",
                          "stage", "auth_method", "tunnel_type", "srcuser", "srcregion", "machinename", "public_ip", "public_ipv6", 
                          "private_ip", "private_ipv6", "hostid", "serialnumber", "client_ver", "client_os", "client_os_ver", 
                          "repeatcnt", "reason", "error", "opaque", "status", "location", "PanOSLoginDuration", "connect_method", 
                          "error_code", "portal", "seqno", "actionflags", "high_res_timestamp", "selection_type", "response_time", 
                          "priority", "attempted_gateways", "gateway", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", 
                          "dg_hier_level_4", "vsys_name", "device_name", "vsys_id"]
           }
#......................................................................#
# Rename fields of GLOBALPROTECT log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[eventid]" => "[kv_field][eventid]" }
              rename => { "[stage]" => "[kv_field][stage]" }
              rename => { "[auth_method]" => "[kv_field][auth_method]" }
              rename => { "[tunnel_type]" => "[kv_field][tunnel_type]" }
              rename => { "[srcuser]" => "[kv_field][srcuser]" }
              rename => { "[srcregion]" => "[kv_field][srcregion]" }
              rename => { "[machinename]" => "[kv_field][machinename]" }
              rename => { "[public_ip]" => "[kv_field][public_ip]" }
              rename => { "[public_ipv6]" => "[kv_field][public_ipv6]" }
              rename => { "[private_ip]" => "[kv_field][private_ip]" }
              rename => { "[private_ipv6]" => "[kv_field][private_ipv6]" }
              rename => { "[hostid]" => "[kv_field][hostid]" }
              rename => { "[serialnumber]" => "[kv_field][serialnumber]" }
              rename => { "[client_ver]" => "[kv_field][client_ver]" }
              rename => { "[client_os]" => "[kv_field][client_os]" }
              rename => { "[client_os_ver]" => "[kv_field][client_os_ver]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[reason]" => "[kv_field][reason]" }
              rename => { "[error]" => "[kv_field][error]" }
              rename => { "[opaque]" => "[kv_field][opaque]" }
              rename => { "[status]" => "[kv_field][status]" }
              rename => { "[location]" => "[kv_field][location]" }
              rename => { "[PanOSLoginDuration]" => "[kv_field][PanOSLoginDuration]" }
              rename => { "[connect_method]" => "[kv_field][connect_method]" }
              rename => { "[error_code]" => "[kv_field][error_code]" }
              rename => { "[portal]" => "[kv_field][portal]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
              rename => { "[selection_type]" => "[kv_field][selection_type]" }
              rename => { "[response_time]" => "[kv_field][response_time]" }
              rename => { "[priority]" => "[kv_field][priority]" }
              rename => { "[attempted_gateways]" => "[kv_field][attempted_gateways]" }
              rename => { "[gateway]" => "[kv_field][gateway]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a IPTAG log
          }else if([message] =~/(.+),(\s)?(.+),(\s)?(IPTAG)(\s)?,(.+)/){
              csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "vsys", "src", "tag_name", 
                          "event_id", "repeatcnt", "timeout", "datasourcename", "datasource_type", "datasource_subtype", "seqno", 
                          "actionflags", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4", "vsys_name", 
                          "device_name", "vsys_id", "high_res_timestamp"]
           }
#......................................................................#
# Rename fields of IPTAG log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[tag_name]" => "[kv_field][tag_name]" }
              rename => { "[event_id]" => "[kv_field][event_id]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[timeout]" => "[kv_field][timeout]" }
              rename => { "[datasourcename]" => "[kv_field][datasourcename]" }
              rename => { "[datasource_type]" => "[kv_field][datasource_type]" }
              rename => { "[datasource_subtype]" => "[kv_field][datasource_subtype]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a USERID log
          }else if ([message] =~/(.+),(\s)?(USERID)(\s)?,(\s)?(login|logout|register-tag|unregister-tag)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "vsys", "src", "user", 
                          "datasourcename", "event_id", "repeatcnt", "timeout", "beginport", "endport", "datasource", "datasource_type", "seqno", 
                          "actionflags", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4", "vsys_name", 
                          "device_name", "vsys_id", "factortype", "factorcompletiontime", "factorno", "FUTURE_USE", "FUTURE_USE", "ugflags", "userbysource", "high_res_timestamp"]
           }
#......................................................................#
# Rename fields of USERID log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[user]" => "[kv_field][user]" }
              rename => { "[datasourcename]" => "[kv_field][datasourcename]" }
              rename => { "[event_id]" => "[kv_field][event_id]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[timeout]" => "[kv_field][timeout]" }
              rename => { "[beginport]" => "[kv_field][beginport]" }
              rename => { "[endport]" => "[kv_field][endport]" }
              rename => { "[datasource]" => "[kv_field][datasource]" }
              rename => { "[datasource_type]" => "[kv_field][datasource_type]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
              rename => { "[factortype]" => "[kv_field][factortype]" }
              rename => { "[factorcompletiontime]" => "[kv_field][factorcompletiontime]" }
              rename => { "[factorno]" => "[kv_field][factorno]" }
              rename => { "[ugflags]" => "[kv_field][ugflags]" }
              rename => { "[userbysource]" => "[kv_field][userbysource]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a DECRYPTION log
          }else if ([message] =~/(.+),(\s)?(DECRYPTION)(\s)?,(.+),(\s)?(allow|deny|drop|drop ICMP|reset both|reset client|reset server)(\s)?,(.+)/){
              csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "config_ver", "time_generated", "src", "dst", 
                          "natsrc", "natdst", "rule", "srcuser", "dstuser", "app", "vsys", "from", "to", "inbound_if", 
                          "outbound_if", "logset", "time_received", "sessionid", "repeatcnt", "spt", "dpt", "natspt", 
                          "natdpt", "flags", "proto", "act", "tunnel", "FUTURE_USE", "FUTURE_USE", "src_uuid", "dst_uuid", 
                          "rule_uuid", "hs_stage_c2f", "hs_stage_f2s", "tls_version", "tls_keyxchg", "tls_enc", "tls_auth", 
                          "policy_name", "ec_curve", "err_index", "root_status", "chain_status", "proxy_type", "cert_serial", 
                          "fingerprint", "notbefore", "notafter", "cert_ver", "cert_size", "cn_len", "issuer_len", "rootcn_len", 
                          "sni_len", "cert_flags", "cn", "issuer_cn", "root_cn", "sni", "error", "container_id", "pod_namespace", 
                          "pod_name", "src_edl", "dst_edl", "src_dag", "dst_dag", "high_res_timestamp", "src_category", 
                          "src_profile", "src_model", "src_vendor", "src_osfamily", "src_osversion", "src_host", "src_mac", 
                          "dst_category", "dst_profile", "dst_model", "dst_vendor", "dst_osfamily", "dst_osversion", 
                          "dst_host", "dst_mac", "seqno", "actionflags", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", 
                          "dg_hier_level_4", "vsys_name", "device_name", "vsys_id", "subcategory_of_app", "category_of_app", 
                          "technology_of_app", "risk_of_app", "characteristic_of_app", "container_of_app", "is_saas_of_app", 
                          "sanctioned_state_of_app"]
           }
#......................................................................#
# Rename fields of DECRYPTION log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[config_ver]" => "[kv_field][config_ver]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[dst]" => "[kv_field][dst]" }
              rename => { "[natsrc]" => "[kv_field][natsrc]" }
              rename => { "[natdst]" => "[kv_field][natdst]" }
              rename => { "[rule]" => "[kv_field][rule]" }
              rename => { "[srcuser]" => "[kv_field][srcuser]" }
              rename => { "[dstuser]" => "[kv_field][dstuser]" }
              rename => { "[app]" => "[kv_field][app]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[from]" => "[kv_field][from]" }
              rename => { "[to]" => "[kv_field][to]" }
              rename => { "[inbound_if]" => "[kv_field][inbound_if]" }
              rename => { "[outbound_if]" => "[kv_field][outbound_if]" }
              rename => { "[logset]" => "[kv_field][logset]" }
              rename => { "[time_received]" => "[kv_field][time_received]" }
              rename => { "[sessionid]" => "[kv_field][sessionid]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[spt]" => "[kv_field][spt]" }
              rename => { "[dpt]" => "[kv_field][dpt]" }
              rename => { "[natspt]" => "[kv_field][natspt]" }
              rename => { "[natdpt]" => "[kv_field][natdpt]" }
              rename => { "[flags]" => "[kv_field][flags]" }
              rename => { "[proto]" => "[kv_field][proto]" }
              rename => { "[act]" => "[kv_field][act]" }
              rename => { "[tunnel]" => "[kv_field][tunnel]" }
              rename => { "[src_uuid]" => "[kv_field][src_uuid]" }
              rename => { "[dst_uuid]" => "[kv_field][dst_uuid]" }
              rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
              rename => { "[hs_stage_c2f]" => "[kv_field][hs_stage_c2f]" }
              rename => { "[hs_stage_f2s]" => "[kv_field][hs_stage_f2s]" }
              rename => { "[tls_version]" => "[kv_field][tls_version]" }
              rename => { "[tls_keyxchg]" => "[kv_field][tls_keyxchg]" }
              rename => { "[tls_enc]" => "[kv_field][tls_enc]" }
              rename => { "[tls_auth]" => "[kv_field][tls_auth]" }
              rename => { "[policy_name]" => "[kv_field][policy_name]" }
              rename => { "[ec_curve]" => "[kv_field][ec_curve]" }
              rename => { "[err_index]" => "[kv_field][err_index]" }
              rename => { "[root_status]" => "[kv_field][root_status]" }
              rename => { "[chain_status]" => "[kv_field][chain_status]" }
              rename => { "[proxy_type]" => "[kv_field][proxy_type]" }
              rename => { "[cert_serial]" => "[kv_field][cert_serial]" }
              rename => { "[fingerprint]" => "[kv_field][fingerprint]" }
              rename => { "[notbefore]" => "[kv_field][notbefore]" }
              rename => { "[notafter]" => "[kv_field][notafter]" }
              rename => { "[cert_ver]" => "[kv_field][cert_ver]" }
              rename => { "[cert_size]" => "[kv_field][cert_size]" }
              rename => { "[cn_len]" => "[kv_field][cn_len]" }
              rename => { "[issuer_len]" => "[kv_field][issuer_len]" }
              rename => { "[rootcn_len]" => "[kv_field][rootcn_len]" }
              rename => { "[sni_len]" => "[kv_field][sni_len]" }
              rename => { "[cert_flags]" => "[kv_field][cert_flags]" }
              rename => { "[cn]" => "[kv_field][cn]" }
              rename => { "[issuer_cn]" => "[kv_field][issuer_cn]" }
              rename => { "[root_cn]" => "[kv_field][root_cn]" }
              rename => { "[sni]" => "[kv_field][sni]" }
              rename => { "[error]" => "[kv_field][error]" }
              rename => { "[container_id]" => "[kv_field][container_id]" }
              rename => { "[pod_namespace]" => "[kv_field][pod_namespace]" }
              rename => { "[pod_name]" => "[kv_field][pod_name]" }
              rename => { "[src_edl]" => "[kv_field][src_edl]" }
              rename => { "[dst_edl]" => "[kv_field][dst_edl]" }
              rename => { "[src_dag]" => "[kv_field][src_dag]" }
              rename => { "[dst_dag]" => "[kv_field][dst_dag]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
              rename => { "[src_category]" => "[kv_field][src_category]" }
              rename => { "[src_profile]" => "[kv_field][src_profile]" }
              rename => { "[src_model]" => "[kv_field][src_model]" }
              rename => { "[src_vendor]" => "[kv_field][src_vendor]" }
              rename => { "[src_osfamily]" => "[kv_field][src_osfamily]" }
              rename => { "[src_osversion]" => "[kv_field][src_osversion]" }
              rename => { "[src_host]" => "[kv_field][src_host]" }
              rename => { "[src_mac]" => "[kv_field][src_mac]" }
              rename => { "[dst_category]" => "[kv_field][dst_category]" }
              rename => { "[dst_profile]" => "[kv_field][dst_profile]" }
              rename => { "[dst_model]" => "[kv_field][dst_model]" }
              rename => { "[dst_vendor]" => "[kv_field][dst_vendor]" }
              rename => { "[dst_osfamily]" => "[kv_field][dst_osfamily]" }
              rename => { "[dst_osversion]" => "[kv_field][dst_osversion]" }
              rename => { "[dst_host]" => "[kv_field][dst_host]" }
              rename => { "[dst_mac]" => "[kv_field][dst_mac]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
              rename => { "[subcategory_of_app]" => "[kv_field][subcategory_of_app]" }
              rename => { "[category_of_app]" => "[kv_field][category_of_app]" }
              rename => { "[technology_of_app]" => "[kv_field][technology_of_app]" }
              rename => { "[risk_of_app]" => "[kv_field][risk_of_app]" }
              rename => { "[characteristic_of_app]" => "[kv_field][characteristic_of_app]" }
              rename => { "[container_of_app]" => "[kv_field][container_of_app]" }
              rename => { "[is_saas_of_app]" => "[kv_field][is_saas_of_app]" }
              rename => { "[sanctioned_state_of_app]" => "[kv_field][sanctioned_state_of_app]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a TUNNEL INSPECTION log
          }else if ([message] =~/(.+),(\s)?(START|END)(\s)?,(\s)?(start|end|drop|deny)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "src", "dst", 
                          "natsrc", "natdst", "rule", "srcuser", "dstuser", "app", "vsys", "from", "to", "inbound_if", 
                          "outbound_if", "logset", "FUTURE_USE", "sessionid", "repeatcnt", "spt", "dpt", "natspt", 
                          "natdpt", "flags", "proto", "act", "severity", "seqno", "actionflags", "srcloc", "dstloc", 
                          "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4","vsys_name", "device_name", "tunnelid",
                          "monitortag", "parent_session_id", "parent_start_time", "tunnel", "bytes", "bytes_sent", "bytes_received", 
                          "packets", "pkts_sent", "pkts_received", "max_encap", "unknown_proto", "strict_check", "tunnel_fragment", 
                          "sessions_created", "sessions_closed", "session_end_reason", "action_source", "start", "elapsed", 
                          "tunnel_insp_rule", "remote_user_ip", "remote_user_id", "rule_uuid", "pcap_id", "dynusergroup_name", "src_edl", 
                          "dst_edl", "high_res_timestamp", "nssai_sd", "nssai_sd", "pdu_session_id", "subcategory_of_app", "category_of_app", 
                          "technology_of_app", "risk_of_app", "characteristic_of_app", "container_of_app", "is_saas_of_app", "sanctioned_state_of_app"]
           }
#......................................................................#
# Rename fields of TUNNEL INSPECTION log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[dst]" => "[kv_field][dst]" }
              rename => { "[natsrc]" => "[kv_field][natsrc]" }
              rename => { "[natdst]" => "[kv_field][natdst]" }
              rename => { "[rule]" => "[kv_field][rule]" }
              rename => { "[srcuser]" => "[kv_field][srcuser]" }
              rename => { "[dstuser]" => "[kv_field][dstuser]" }
              rename => { "[app]" => "[kv_field][app]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[from]" => "[kv_field][from]" }
              rename => { "[to]" => "[kv_field][to]" }
              rename => { "[inbound_if]" => "[kv_field][inbound_if]" }
              rename => { "[outbound_if]" => "[kv_field][outbound_if]" }
              rename => { "[logset]" => "[kv_field][logset]" }
              rename => { "[sessionid]" => "[kv_field][sessionid]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[spt]" => "[kv_field][spt]" }
              rename => { "[dpt]" => "[kv_field][dpt]" }
              rename => { "[natspt]" => "[kv_field][natspt]" }
              rename => { "[natdpt]" => "[kv_field][natdpt]" }
              rename => { "[flags]" => "[kv_field][flags]" }
              rename => { "[proto]" => "[kv_field][proto]" }
              rename => { "[act]" => "[kv_field][act]" }
              rename => { "[severity]" => "[kv_field][severity]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[srcloc]" => "[kv_field][srcloc]" }
              rename => { "[dstloc]" => "[kv_field][dstloc]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[tunnelid]" => "[kv_field][tunnelid]" }
              rename => { "[monitortag]" => "[kv_field][monitortag]" }
              rename => { "[parent_session_id]" => "[kv_field][parent_session_id]" }
              rename => { "[parent_start_time]" => "[kv_field][parent_start_time]" }
              rename => { "[tunnel]" => "[kv_field][tunnel]" }
              rename => { "[bytes]" => "[kv_field][bytes]" }
              rename => { "[bytes_sent]" => "[kv_field][bytes_sent]" }
              rename => { "[bytes_received]" => "[kv_field][bytes_received]" }
              rename => { "[packets]" => "[kv_field][packets]" }
              rename => { "[pkts_sent]" => "[kv_field][pkts_sent]" }
              rename => { "[pkts_received]" => "[kv_field][pkts_received]" }
              rename => { "[max_encap]" => "[kv_field][max_encap]" }
              rename => { "[unknown_proto]" => "[kv_field][unknown_proto]" }
              rename => { "[strict_check]" => "[kv_field][strict_check]" }
              rename => { "[tunnel_fragment]" => "[kv_field][tunnel_fragment]" }
              rename => { "[sessions_created]" => "[kv_field][sessions_created]" }
              rename => { "[sessions_closed]" => "[kv_field][sessions_closed]" }
              rename => { "[session_end_reason]" => "[kv_field][session_end_reason]" }
              rename => { "[action_source]" => "[kv_field][action_source]" }
              rename => { "[start]" => "[kv_field][start]" }
              rename => { "[elapsed]" => "[kv_field][elapsed]" }
              rename => { "[tunnel_insp_rule]" => "[kv_field][tunnel_insp_rule]" }
              rename => { "[remote_user_ip]" => "[kv_field][remote_user_ip]" }
              rename => { "[remote_user_id]" => "[kv_field][remote_user_id]" }
              rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
              rename => { "[pcap_id]" => "[kv_field][pcap_id]" }
              rename => { "[dynusergroup_name]" => "[kv_field][dynusergroup_name]" }
              rename => { "[src_edl]" => "[kv_field][src_edl]" }
              rename => { "[dst_edl]" => "[kv_field][dst_edl]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
              rename => { "[nssai_sd]" => "[kv_field][nssai_sd]" }
              rename => { "[nssai_sd]" => "[kv_field][nssai_sd]" }
              rename => { "[pdu_session_id]" => "[kv_field][pdu_session_id]" }
              rename => { "[subcategory_of_app]" => "[kv_field][subcategory_of_app]" }
              rename => { "[category_of_app]" => "[kv_field][category_of_app]" }
              rename => { "[technology_of_app]" => "[kv_field][technology_of_app]" }
              rename => { "[risk_of_app]" => "[kv_field][risk_of_app]" }
              rename => { "[characteristic_of_app]" => "[kv_field][characteristic_of_app]" }
              rename => { "[container_of_app]" => "[kv_field][container_of_app]" }
              rename => { "[is_saas_of_app]" => "[kv_field][is_saas_of_app]" }
              rename => { "[sanctioned_state_of_app]" => "[kv_field][sanctioned_state_of_app]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a SCTP log
          }else if([message] =~/(.+),(\s)?(SCTP)(\s)?,(.+),(\s)?(allow|deny)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "FUTURE_USE", "FUTURE_USE", "time_generated", "src", 
                          "dst", "FUTURE_USE", "FUTURE_USE", "rule", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "vsys", "from", "to", "inbound_if",
                          "outbound_if", "logset", "FUTURE_USE", "sessionid", "repeatcnt", "spt", "dpt", "FUTURE_USE", "FUTURE_USE", 
                          "FUTURE_USE", "FUTURE_USE", "proto", "act", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4",
                          "vsys_name", "device_name", "seqno", "FUTURE_USE", "assoc_id", "ppid", "severity", "sctp_chunk_type", "FUTURE_USE", "verif_tag_1", 
                          "verif_tag_2", "sctp_cause_code", "diam_app_id", "diam_cmd_code", "diam_avp_code", "stream_id", "assoc_end_reason", "op_code", 
                          "sccp_calling_ssn", "sccp_calling_gt", "sctp_filter", "chunks", "chunks_sent", "chunks_received", "packets", "pkts_sent", "pkts_received", "rule_uuid", "high_res_timestamp"]
           }
#......................................................................#
# Rename fields of SCTP log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[dst]" => "[kv_field][dst]" }
              rename => { "[rule]" => "[kv_field][rule]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[from]" => "[kv_field][from]" }
              rename => { "[to]" => "[kv_field][to]" }
              rename => { "[inbound_if]" => "[kv_field][inbound_if]" }
              rename => { "[outbound_if]" => "[kv_field][outbound_if]" }
              rename => { "[logset]" => "[kv_field][logset]" }
              rename => { "[sessionid]" => "[kv_field][sessionid]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[spt]" => "[kv_field][spt]" }
              rename => { "[dpt]" => "[kv_field][dpt]" }
              rename => { "[proto]" => "[kv_field][proto]" }
              rename => { "[act]" => "[kv_field][act]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[assoc_id]" => "[kv_field][assoc_id]" }
              rename => { "[ppid]" => "[kv_field][ppid]" }
              rename => { "[severity]" => "[kv_field][severity]" }
              rename => { "[sctp_chunk_type]" => "[kv_field][sctp_chunk_type]" }
              rename => { "[verif_tag_1]" => "[kv_field][verif_tag_1]" }
              rename => { "[verif_tag_2]" => "[kv_field][verif_tag_2]" }
              rename => { "[sctp_cause_code]" => "[kv_field][sctp_cause_code]" }
              rename => { "[diam_app_id]" => "[kv_field][diam_app_id]" }
              rename => { "[diam_cmd_code]" => "[kv_field][diam_cmd_code]" }
              rename => { "[diam_avp_code]" => "[kv_field][diam_avp_code]" }
              rename => { "[stream_id]" => "[kv_field][stream_id]" }
              rename => { "[assoc_end_reason]" => "[kv_field][assoc_end_reason]" }
              rename => { "[op_code]" => "[kv_field][op_code]" }
              rename => { "[sccp_calling_ssn]" => "[kv_field][sccp_calling_ssn]" }
              rename => { "[sccp_calling_gt]" => "[kv_field][sccp_calling_gt]" }
              rename => { "[sctp_filter]" => "[kv_field][sctp_filter]" }
              rename => { "[chunks]" => "[kv_field][chunks]" }
              rename => { "[chunks_sent]" => "[kv_field][chunks_sent]" }
              rename => { "[chunks_received]" => "[kv_field][chunks_received]" }
              rename => { "[packets]" => "[kv_field][packets]" }
              rename => { "[pkts_sent]" => "[kv_field][pkts_sent]" }
              rename => { "[pkts_received]" => "[kv_field][pkts_received]" }
              rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a CONFIG log
          }else if([message] =~/(.+),(\s)?(CONFIG)(\s)?,(.+),(\s)?(add|clone|commit|delete|edit|move|rename|set)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "host", "vsys", 
                          "cmd", "admin", "client", "result", "path", "before_change_detail", "after_change_detail", 
                          "seqno", "actionflags", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4",
                          "vsys_name", "device_name", "dg_id", "comment", "FUTURE_USE", "high_res_timestamp"]
           }
#......................................................................#
# Rename fields of CONFIG log
          mutate {
            rename => { "[receive_time]" => "[kv_field][receive_time]" }
            rename => { "[serial]" => "[kv_field][serial]" }
            rename => { "[pa_type]" => "[kv_field][pa_type]" }
            rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
            rename => { "[time_generated]" => "[kv_field][time_generated]" }
            rename => { "[host]" => "[kv_field][host]" }
            rename => { "[vsys]" => "[kv_field][vsys]" }
            rename => { "[cmd]" => "[kv_field][cmd]" }
            rename => { "[admin]" => "[kv_field][admin]" }
            rename => { "[client]" => "[kv_field][client]" }
            rename => { "[result]" => "[kv_field][result]" }
            rename => { "[path]" => "[kv_field][path]" }
            rename => { "[before_change_detail]" => "[kv_field][before_change_detail]" }
            rename => { "[after_change_detail]" => "[kv_field][after_change_detail]" }
            rename => { "[seqno]" => "[kv_field][seqno]" }
            rename => { "[actionflags]" => "[kv_field][actionflags]" }
            rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
            rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
            rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
            rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
            rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
            rename => { "[device_name]" => "[kv_field][device_name]" }
            rename => { "[dg_id]" => "[kv_field][dg_id]" }
            rename => { "[comment]" => "[kv_field][comment]" }
            rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
          }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a AUTHENTICATION log
          }else if([message] =~/(.+),(\s)?(AUTHENTICATION)(\s)?,(\s)?(crypto|dhcp|dnsproxy|dos|general|global-protect|ha|hw|nat|ntpd|pbf|port|pppoe|ras|routing|satd|sslmgr|sslvpn|userid|url-filtering|vpn)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "vsys", "src", "user", 
                         "normalize_user", "object", "authpolicy", "repeatcnt", "authid", "vendor", "logset", "serverprofile", 
                         "desc", "clienttype", "event", "factorno", "seqno", "actionflags", "dg_hier_level_1", "dg_hier_level_2", 
                         "dg_hier_level_3", "dg_hier_level_4", "vsys_name", "device_name", "vsys_id", "authproto", "rule_uuid", 
                         "high_res _timestamp", "src_category", "src_profile", "src_model","src_vendor", "src_osfamily", "src_osversion", 
                         "src_host", "src_mac", "region", "FUTURE_USE", "user_agent", "sessionid"]
           }
#......................................................................#
# Rename fields of AUTHENTICATION log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[user]" => "[kv_field][user]" }
              rename => { "[normalize_user]" => "[kv_field][normalize_user]" }
              rename => { "[object]" => "[kv_field][object]" }
              rename => { "[authpolicy]" => "[kv_field][authpolicy]" }
              rename => { "[repeatcnt]" => "[kv_field][repeatcnt]" }
              rename => { "[authid]" => "[kv_field][authid]" }
              rename => { "[vendor]" => "[kv_field][vendor]" }
              rename => { "[logset]" => "[kv_field][logset]" }
              rename => { "[serverprofile]" => "[kv_field][serverprofile]" }
              rename => { "[desc]" => "[kv_field][desc]" }
              rename => { "[clienttype]" => "[kv_field][clienttype]" }
              rename => { "[event]" => "[kv_field][event]" }
              rename => { "[factorno]" => "[kv_field][factorno]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
              rename => { "[authproto]" => "[kv_field][authproto]" }
              rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
              rename => { "[src_category]" => "[kv_field][src_category]" }
              rename => { "[src_profile]" => "[kv_field][src_profile]" }
              rename => { "[src_model]" => "[kv_field][src_model]" }
              rename => { "[src_vendor]" => "[kv_field][src_vendor]" }
              rename => { "[src_osfamily]" => "[kv_field][src_osfamily]" }
              rename => { "[src_osversion]" => "[kv_field][src_osversion]" }
              rename => { "[src_host]" => "[kv_field][src_host]" }
              rename => { "[src_mac]" => "[kv_field][src_mac]" }
              rename => { "[region]" => "[kv_field][region]" }
              rename => { "[user_agent]" => "[kv_field][user_agent]" }
              rename => { "[sessionid]" => "[kv_field][sessionid]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a SYSTEM log
          }else if([message] =~/(.+),(\s)?(SYSTEM)(\s)?,(\s)?(crypto|dhcp|dnsproxy|dos|general|global-protect|ha|hw|nat|ntpd|pbf|port|pppoe|ras|routing|satd|sslmgr|sslvpn|userid|url-filtering|vpn)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "vsys", "eventid", 
                          "object", "FUTURE_USE", "FUTURE_USE", "module", "severity", "opaque", "seqno", "actionflags", 
                          "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", "dg_hier_level_4", "vsys_name", 
                          "device_name", "FUTURE_USE", "FUTURE_USE", "high_res_timestamp"]
           }
#......................................................................#
# Rename fields of SYSTEM log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[eventid]" => "[kv_field][eventid]" }
              rename => { "[object]" => "[kv_field][object]" }
              rename => { "[module]" => "[kv_field][module]" }
              rename => { "[severity]" => "[kv_field][severity]" }
              rename => { "[opaque]" => "[kv_field][opaque]" }
              rename => { "[seqno]" => "[kv_field][seqno]" }
              rename => { "[actionflags]" => "[kv_field][actionflags]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a CORRELATED EVENTS log
          }else if ([message] =~/(.+),(\s)?(CORRELATION)(\s)?,(\s)?(crypto|dhcp|dnsproxy|dos|general|global-protect|ha|hw|nat|ntpd|pbf|port|pppoe|ras|routing|satd|sslmgr|sslvpn|userid|url-filtering|vpn)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "src", 
                          "srcuser", "vsys", "category", "severity", "dg_hier_level_1", "dg_hier_level_2", "dg_hier_level_3", 
                          "dg_hier_level_4", "vsys_name", "device_name", "vsys_id", "objectname", "object_id", "evidence"]
           }
#......................................................................#
# Rename fields of CORRELATED EVENTS log
            mutate {
              rename => { "[receive_time]" => "[kv_field][receive_time]" }
              rename => { "[serial]" => "[kv_field][serial]" }
              rename => { "[pa_type]" => "[kv_field][pa_type]" }
              rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
              rename => { "[time_generated]" => "[kv_field][time_generated]" }
              rename => { "[src]" => "[kv_field][src]" }
              rename => { "[srcuser]" => "[kv_field][srcuser]" }
              rename => { "[vsys]" => "[kv_field][vsys]" }
              rename => { "[category]" => "[kv_field][category]" }
              rename => { "[severity]" => "[kv_field][severity]" }
              rename => { "[dg_hier_level_1]" => "[kv_field][dg_hier_level_1]" }
              rename => { "[dg_hier_level_2]" => "[kv_field][dg_hier_level_2]" }
              rename => { "[dg_hier_level_3]" => "[kv_field][dg_hier_level_3]" }
              rename => { "[dg_hier_level_4]" => "[kv_field][dg_hier_level_4]" }
              rename => { "[vsys_name]" => "[kv_field][vsys_name]" }
              rename => { "[device_name]" => "[kv_field][device_name]" }
              rename => { "[vsys_id]" => "[kv_field][vsys_id]" }
              rename => { "[objectname]" => "[kv_field][objectname]" }
              rename => { "[object_id]" => "[kv_field][object_id]" }
              rename => { "[evidence]" => "[kv_field][evidence]" }
            }
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Detect if its a GTP log
          }else if ([message] =~/(.+),(\s)?(GTP)(\s)?,(\s)?(start|end|drop|deny)(\s)?,(.+)/){
            csv {
              source => "csv_msg_all"
              skip_header => "true"
              columns => ["receive_time", "serial", "pa_type", "pa_subtype", "FUTURE_USE", "time_generated", "src", 
                          "dst", "FUTURE_USE", "FUTURE_USE", "rule", "FUTURE_USE", "FUTURE_USE", "app", "vsys", "from", "to", "inbound_if", 
                          "outbound_if", "logset", "FUTURE_USE", "sessionid", "FUTURE_USE", "spt", "dpt", "FUTURE_USE", "FUTURE_USE", 
                          "FUTURE_USE", "proto", "act", "event_type", "msisdn", "apn", "rat", "msg_type", "end_ip_adr", "teid1", 
                          "teid2", "gtp_interface", "cause_code", "severity", "mcc", "mnc", "area_code", "cell_id", "event_code", 
                          "FUTURE_USE", "FUTURE_USE", "srcloc", "dstloc", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", 
                          "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "imsi", "imei", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", 
                          "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", 
                          "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "FUTURE_USE", "start", "elapsed", "tunnel_insp_rule", 
                          "remote_user_ip", "remote_user_id", "rule_uuid", "pcap_id", "high_res_timestamp", "nsdsai_sst", "nsdsai_sd", 
                          "subcategory_of_app", "category_of_app", "technology_of_app", "risk_of_app", "characteristic_of_app",
                          "container_of_app", "is_saas_of_app", "sanctioned_state_of_app"]
           }
           #......................................................................#
# Rename fields of GTP log
           mutate {
            rename => { "[receive_time]" => "[kv_field][receive_time]" }
            rename => { "[serial]" => "[kv_field][serial]" }
            rename => { "[pa_type]" => "[kv_field][pa_type]" }
            rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
            rename => { "[time_generated]" => "[kv_field][time_generated]" }
            rename => { "[src]" => "[kv_field][src]" }
            rename => { "[dst]" => "[kv_field][dst]" }
            rename => { "[rule]" => "[kv_field][rule]" }
            rename => { "[app]" => "[kv_field][app]" }
            rename => { "[vsys]" => "[kv_field][vsys]" }
            rename => { "[from]" => "[kv_field][from]" }
            rename => { "[to]" => "[kv_field][to]" }
            rename => { "[inbound_if]" => "[kv_field][inbound_if]" }
            rename => { "[outbound_if]" => "[kv_field][outbound_if]" }
            rename => { "[logset]" => "[kv_field][logset]" }
            rename => { "[sessionid]" => "[kv_field][sessionid]" }
            rename => { "[spt]" => "[kv_field][spt]" }
            rename => { "[dpt]" => "[kv_field][dpt]" }
            rename => { "[proto]" => "[kv_field][proto]" }
            rename => { "[act]" => "[kv_field][act]" }
            rename => { "[event_type]" => "[kv_field][event_type]" }
            rename => { "[msisdn]" => "[kv_field][msisdn]" }
            rename => { "[apn]" => "[kv_field][apn]" }
            rename => { "[rat]" => "[kv_field][rat]" }
            rename => { "[msg_type]" => "[kv_field][msg_type]" }
            rename => { "[end_ip_adr]" => "[kv_field][end_ip_adr]" }
            rename => { "[teid1]" => "[kv_field][teid1]" }
            rename => { "[teid2]" => "[kv_field][teid2]" }
            rename => { "[gtp_interface]" => "[kv_field][gtp_interface]" }
            rename => { "[cause_code]" => "[kv_field][cause_code]" }
            rename => { "[severity]" => "[kv_field][severity]" }
            rename => { "[mcc]" => "[kv_field][mcc]" }
            rename => { "[mnc]" => "[kv_field][mnc]" }
            rename => { "[area_code]" => "[kv_field][area_code]" }
            rename => { "[cell_id]" => "[kv_field][cell_id]" }
            rename => { "[event_code]" => "[kv_field][event_code]" }
            rename => { "[srcloc]" => "[kv_field][srcloc]" }
            rename => { "[dstloc]" => "[kv_field][dstloc]" }
            rename => { "[imsi]" => "[kv_field][imsi]" }
            rename => { "[imei]" => "[kv_field][imei]" }
            rename => { "[start]" => "[kv_field][start]" }
            rename => { "[elapsed]" => "[kv_field][elapsed]" }
            rename => { "[tunnel_insp_rule]" => "[kv_field][tunnel_insp_rule]" }
            rename => { "[remote_user_ip]" => "[kv_field][remote_user_ip]" }
            rename => { "[remote_user_id]" => "[kv_field][remote_user_id]" }
            rename => { "[rule_uuid]" => "[kv_field][rule_uuid]" }
            rename => { "[pcap_id]" => "[kv_field][pcap_id]" }
            rename => { "[high_res_timestamp]" => "[kv_field][high_res_timestamp]" }
            rename => { "[nsdsai_sst]" => "[kv_field][nsdsai_sst]" }
            rename => { "[nsdsai_sd]" => "[kv_field][nsdsai_sd]" }
            rename => { "[subcategory_of_app]" => "[kv_field][subcategory_of_app]" }
            rename => { "[category_of_app]" => "[kv_field][category_of_app]" }
            rename => { "[technology_of_app]" => "[kv_field][technology_of_app]" }
            rename => { "[risk_of_app]" => "[kv_field][risk_of_app]" }
            rename => { "[characteristic_of_app]" => "[kv_field][characteristic_of_app]" }
            rename => { "[container_of_app]" => "[kv_field][container_of_app]" }
            rename => { "[is_saas_of_app]" => "[kv_field][is_saas_of_app]" }
            rename => { "[sanctioned_state_of_app]" => "[kv_field][sanctioned_state_of_app]" }
           }
          }
        }
      }

#......................................................................# 
#Then, replace whitespaces with default string after = to avoid issues
              if ([cef_or_leef_msg]){
                 mutate { gsub => [ "cef_or_leef_msg", "(\w+)= ", "\1=X0X " ] }
            
#......................................................................#
#Using grok to parse individual fields
                 grok { match => { "cef_or_leef_msg" => ["act=%{DATA:act} %{WORD}=","act=%{GREEDYDATA:act}"] } }
                 grok { match => { "cef_or_leef_msg" => ["anOSTimeGeneratedHighResolution=%{DATA:anOSTimeGeneratedHighResolution} %{WORD}=","anOSTimeGeneratedHighResolution=%{GREEDYDATA:anOSTimeGeneratedHighResolution}"] } }
                 grok { match => { "cef_or_leef_msg" => ["app=%{DATA:app} %{WORD}=","app=%{GREEDYDATA:app}"] } }
                 grok { match => { "cef_or_leef_msg" => ["c6a2=%{DATA:c6a2} %{WORD}=","c6a2=%{GREEDYDATA:c6a2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["c6a2Label=%{DATA:c6a2Label} %{WORD}=","c6a2Label=%{GREEDYDATA:c6a2Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cat=%{DATA:cat} %{WORD}=","cat=%{GREEDYDATA:cat}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp1=%{DATA:cfp1} %{WORD}=","cfp1=%{GREEDYDATA:cfp1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp1Label=%{DATA:cfp1Label} %{WORD}=","cfp1Label=%{GREEDYDATA:cfp1Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp2=%{DATA:cfp2} %{WORD}=","cfp2=%{GREEDYDATA:cfp2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp2Label=%{DATA:cfp2Label} %{WORD}=","cfp2Label=%{GREEDYDATA:cfp2Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp3=%{DATA:cfp3} %{WORD}=","cfp3=%{GREEDYDATA:cfp3}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp3Label=%{DATA:cfp3Label} %{WORD}=","cfp3Label=%{GREEDYDATA:cfp3Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp4=%{DATA:cfp4} %{WORD}=","cfp4=%{GREEDYDATA:cfp4}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cfp4Label=%{DATA:cfp4Label} %{WORD}=","cfp4Label=%{GREEDYDATA:cfp4Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn1=%{DATA:cn1} %{WORD}=","cn1=%{GREEDYDATA:cn1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn1Label=%{DATA:cn1Label} %{WORD}=","cn1Label=%{GREEDYDATA:cn1Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn2=%{DATA:cn2} %{WORD}=","cn2=%{GREEDYDATA:cn2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn2Label=%{DATA:cn2Label} %{WORD}=","cn2Label=%{GREEDYDATA:cn2Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn3=%{DATA:cn3} %{WORD}=","cn3=%{GREEDYDATA:cn3}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn3Label=%{DATA:cn3Label} %{WORD}=","cn3Label=%{GREEDYDATA:cn3Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn4=%{DATA:cn4} %{WORD}=","cn4=%{GREEDYDATA:cn4}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn4Label=%{DATA:cn4Label} %{WORD}=","cn4Label=%{GREEDYDATA:cn4Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn5=%{DATA:cn5} %{WORD}=","cn5=%{GREEDYDATA:cn5}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn5Label=%{DATA:cn5Label} %{WORD}=","cn5Label=%{GREEDYDATA:cn5Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn6=%{DATA:cn6} %{WORD}=","cn6=%{GREEDYDATA:cn6}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cn6Label=%{DATA:cn6Label} %{WORD}=","cn6Label=%{GREEDYDATA:cn6Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cnt=%{DATA:cnt} %{WORD}=","cnt=%{GREEDYDATA:cnt}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs1=%{DATA:cs1} %{WORD}=","cs1=%{GREEDYDATA:cs1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs1Label=%{DATA:cs1Label} %{WORD}=","cs1Label=%{GREEDYDATA:cs1Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs2=%{DATA:cs2} %{WORD}=","cs2=%{GREEDYDATA:cs2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs2Label=%{DATA:cs2Label} %{WORD}=","cs2Label=%{GREEDYDATA:cs2Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs3=%{DATA:cs3} %{WORD}=","cs3=%{GREEDYDATA:cs3}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs3Label=%{DATA:cs3Label} %{WORD}=","cs3Label=%{GREEDYDATA:cs3Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs4=%{DATA:cs4} %{WORD}=","cs4=%{GREEDYDATA:cs4}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs4Label=%{DATA:cs4Label} %{WORD}=","cs4Label=%{GREEDYDATA:cs4Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs5=%{DATA:cs5} %{WORD}=","cs5=%{GREEDYDATA:cs5}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs5Label=%{DATA:cs5Label} %{WORD}=","cs5Label=%{GREEDYDATA:cs5Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs6=%{DATA:cs6} %{WORD}=","cs6=%{GREEDYDATA:cs6}"] } }
                 grok { match => { "cef_or_leef_msg" => ["cs6Label=%{DATA:cs6Label} %{WORD}=","cs6Label=%{GREEDYDATA:cs6Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["destinationServiceName=%{DATA:destinationServiceName} %{WORD}=","destinationServiceName=%{GREEDYDATA:destinationServiceName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["destinationTranslatedAddress=%{DATA:destinationTranslatedAddress} %{WORD}=","destinationTranslatedAddress=%{GREEDYDATA:destinationTranslatedAddress}"] } }
                 grok { match => { "cef_or_leef_msg" => ["destinationTranslatedPort=%{DATA:destinationTranslatedPort} %{WORD}=","destinationTranslatedPort=%{GREEDYDATA:destinationTranslatedPort}"] } }
                 grok { match => { "cef_or_leef_msg" => ["deviceExternalId=%{DATA:deviceExternalId} %{WORD}=","deviceExternalId=%{GREEDYDATA:deviceExternalId}"] } }
                 grok { match => { "cef_or_leef_msg" => ["deviceInboundInterface=%{DATA:deviceInboundInterface} %{WORD}=","deviceInboundInterface=%{GREEDYDATA:deviceInboundInterface}"] } }
                 grok { match => { "cef_or_leef_msg" => ["deviceOutboundInterface=%{DATA:deviceOutboundInterface} %{WORD}=","deviceOutboundInterface=%{GREEDYDATA:deviceOutboundInterface}"] } }
                 grok { match => { "cef_or_leef_msg" => ["dpt=%{DATA:dpt} %{WORD}=","dpt=%{GREEDYDATA:dpt}"] } }
                 grok { match => { "cef_or_leef_msg" => ["dst=%{DATA:dst} %{WORD}=","dst=%{GREEDYDATA:dst}"] } }
                 grok { match => { "cef_or_leef_msg" => ["duid=%{DATA:duid} %{WORD}=","duid=%{GREEDYDATA:duid}"] } }
                 grok { match => { "cef_or_leef_msg" => ["duser=%{DATA:duser} %{WORD}=","duser=%{GREEDYDATA:duser}"] } }
                 grok { match => { "cef_or_leef_msg" => ["dvchost=%{DATA:dvchost} %{WORD}=","dvchost=%{GREEDYDATA:dvchost}"] } }
                 grok { match => { "cef_or_leef_msg" => ["end=%{DATA:end} %{WORD}=","end=%{GREEDYDATA:end}"] } }
                 grok { match => { "cef_or_leef_msg" => ["externalId=%{DATA:externalId} %{WORD}=","externalId=%{GREEDYDATA:externalId}"] } }
                 grok { match => { "cef_or_leef_msg" => ["fileHash=%{DATA:fileHash} %{WORD}=","fileHash=%{GREEDYDATA:fileHash}"] } }
                 grok { match => { "cef_or_leef_msg" => ["fileId=%{DATA:fileId} %{WORD}=","fileId=%{GREEDYDATA:fileId}"] } }
                 grok { match => { "cef_or_leef_msg" => ["filePath=%{DATA:filePath} %{WORD}=","filePath=%{GREEDYDATA:filePath}"] } }
                 grok { match => { "cef_or_leef_msg" => ["fileType=%{DATA:fileType} %{WORD}=","fileType=%{GREEDYDATA:fileType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flags=%{DATA:flags} %{WORD}=","flags=%{GREEDYDATA:flags}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexNumber1=%{DATA:flexNumber1} %{WORD}=","flexNumber1=%{GREEDYDATA:flexNumber1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexNumber1Label=%{DATA:flexNumber1Label} %{WORD}=","flexNumber1Label=%{GREEDYDATA:flexNumber1Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexNumber2=%{DATA:flexNumber2} %{WORD}=","flexNumber2=%{GREEDYDATA:flexNumber2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexNumber2Label=%{DATA:flexNumber2Label} %{WORD}=","flexNumber2Label=%{GREEDYDATA:flexNumber2Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexString1=%{DATA:flexString1} %{WORD}=","flexString1=%{GREEDYDATA:flexString1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexString1Label=%{DATA:flexString1Label} %{WORD}=","flexString1Label=%{GREEDYDATA:flexString1Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexString2=%{DATA:flexString2} %{WORD}=","flexString2=%{GREEDYDATA:flexString2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["flexString2Label=%{DATA:flexString2Label} %{WORD}=","flexString2Label=%{GREEDYDATA:flexString2Label}"] } }
                 grok { match => { "cef_or_leef_msg" => ["fname=%{DATA:fname} %{WORD}=","fname=%{GREEDYDATA:fname}"] } }
                 grok { match => { "cef_or_leef_msg" => ["in=%{DATA:in} %{WORD}=","in=%{GREEDYDATA:in}"] } }
                 grok { match => { "cef_or_leef_msg" => ["msg=%{DATA:msg} %{WORD}=","msg=%{GREEDYDATA:msg}"] } }
                 grok { match => { "cef_or_leef_msg" => ["oldFileId=%{DATA:oldFileId} %{WORD}=","oldFileId=%{GREEDYDATA:oldFileId}"] } }
                 grok { match => { "cef_or_leef_msg" => ["out=%{DATA:out} %{WORD}=","out=%{GREEDYDATA:out}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanASServiceDiff=%{DATA:PanASServiceDiff} %{WORD}=","PanASServiceDiff=%{GREEDYDATA:PanASServiceDiff}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanASServiceType=%{DATA:PanASServiceType} %{WORD}=","PanASServiceType=%{GREEDYDATA:PanASServiceType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanContainerName=%{DATA:PanContainerName} %{WORD}=","PanContainerName=%{GREEDYDATA:PanContainerName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDomainEDL=%{DATA:PanDomainEDL} %{WORD}=","PanDomainEDL=%{GREEDYDATA:PanDomainEDL}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDAG=%{DATA:PanDstDAG} %{WORD}=","PanDstDAG=%{GREEDYDATA:PanDstDAG}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDeviceCat=%{DATA:PanDstDeviceCat} %{WORD}=","PanDstDeviceCat=%{GREEDYDATA:PanDstDeviceCat}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDeviceModel=%{DATA:PanDstDeviceModel} %{WORD}=","PanDstDeviceModel=%{GREEDYDATA:PanDstDeviceModel}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDeviceOS=%{DATA:PanDstDeviceOS} %{WORD}=","PanDstDeviceOS=%{GREEDYDATA:PanDstDeviceOS}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDeviceOSv=%{DATA:PanDstDeviceOSv} %{WORD}=","PanDstDeviceOSv=%{GREEDYDATA:PanDstDeviceOSv}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDeviceProf=%{DATA:PanDstDeviceProf} %{WORD}=","PanDstDeviceProf=%{GREEDYDATA:PanDstDeviceProf}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstDeviceVendor=%{DATA:PanDstDeviceVendor} %{WORD}=","PanDstDeviceVendor=%{GREEDYDATA:PanDstDeviceVendor}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstEDL=%{DATA:PanDstEDL} %{WORD}=","PanDstEDL=%{GREEDYDATA:PanDstEDL}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstHostname=%{DATA:PanDstHostname} %{WORD}=","PanDstHostname=%{GREEDYDATA:PanDstHostname}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDstMac=%{DATA:PanDstMac} %{WORD}=","PanDstMac=%{GREEDYDATA:PanDstMac}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanDynamicUsrgrp=%{DATA:PanDynamicUsrgrp} %{WORD}=","PanDynamicUsrgrp=%{GREEDYDATA:PanDynamicUsrgrp}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanEPSerial=%{DATA:PanEPSerial} %{WORD}=","PanEPSerial=%{GREEDYDATA:PanEPSerial}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanGPHostID=%{DATA:PanGPHostID} %{WORD}=","PanGPHostID=%{GREEDYDATA:PanGPHostID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanHASessionOwner=%{DATA:PanHASessionOwner} %{WORD}=","PanHASessionOwner=%{GREEDYDATA:PanHASessionOwner}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanJustification=%{DATA:PanJustification} %{WORD}=","PanJustification=%{GREEDYDATA:PanJustification}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanLinkChange=%{DATA:PanLinkChange} %{WORD}=","PanLinkChange=%{GREEDYDATA:PanLinkChange}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanLinkDetail=%{DATA:PanLinkDetail} %{WORD}=","PanLinkDetail=%{GREEDYDATA:PanLinkDetail}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSActionFlags=%{DATA:PanOSActionFlags} %{WORD}=","PanOSActionFlags=%{GREEDYDATA:PanOSActionFlags}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSAPName=%{DATA:PanOSAPName} %{WORD}=","PanOSAPName=%{GREEDYDATA:PanOSAPName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSAreaCode=%{DATA:PanOSAreaCode} %{WORD}=","PanOSAreaCode=%{GREEDYDATA:PanOSAreaCode}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSAssocID=%{DATA:PanOSAssocID} %{WORD}=","PanOSAssocID=%{GREEDYDATA:PanOSAssocID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSAttemptedGateways=%{DATA:PanOSAttemptedGateways} %{WORD}=","PanOSAttemptedGateways=%{GREEDYDATA:PanOSAttemptedGateways}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSAuthMethod=%{DATA:PanOSAuthMethod} %{WORD}=","PanOSAuthMethod=%{GREEDYDATA:PanOSAuthMethod}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCellID=%{DATA:PanOSCellID} %{WORD}=","PanOSCellID=%{GREEDYDATA:PanOSCellID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCertificateFlags=%{DATA:PanOSCertificateFlags} %{WORD}=","PanOSCertificateFlags=%{GREEDYDATA:PanOSCertificateFlags}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCertificateSerial=%{DATA:PanOSCertificateSerial} %{WORD}=","PanOSCertificateSerial=%{GREEDYDATA:PanOSCertificateSerial}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCertificateSize=%{DATA:PanOSCertificateSize} %{WORD}=","PanOSCertificateSize=%{GREEDYDATA:PanOSCertificateSize}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCertificateVersion=%{DATA:PanOSCertificateVersion} %{WORD}=","PanOSCertificateVersion=%{GREEDYDATA:PanOSCertificateVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSChainStatus=%{DATA:PanOSChainStatus} %{WORD}=","PanOSChainStatus=%{GREEDYDATA:PanOSChainStatus}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSChunkType=%{DATA:PanOSChunkType} %{WORD}=","PanOSChunkType=%{GREEDYDATA:PanOSChunkType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSClientToFirewall=%{DATA:PanOSClientToFirewall} %{WORD}=","PanOSClientToFirewall=%{GREEDYDATA:PanOSClientToFirewall}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCommonName=%{DATA:PanOSCommonName} %{WORD}=","PanOSCommonName=%{GREEDYDATA:PanOSCommonName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCommonNameLength=%{DATA:PanOSCommonNameLength} %{WORD}=","PanOSCommonNameLength=%{GREEDYDATA:PanOSCommonNameLength}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSConfigVersion=%{DATA:PanOSConfigVersion} %{WORD}=","PanOSConfigVersion=%{GREEDYDATA:PanOSConfigVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSConnectionError=%{DATA:PanOSConnectionError} %{WORD}=","PanOSConnectionError=%{GREEDYDATA:PanOSConnectionError}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSConnectionErrorID=%{DATA:PanOSConnectionErrorID} %{WORD}=","PanOSConnectionErrorID=%{GREEDYDATA:PanOSConnectionErrorID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSConnectionMethod=%{DATA:PanOSConnectionMethod} %{WORD}=","PanOSConnectionMethod=%{GREEDYDATA:PanOSConnectionMethod}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSContainerID=%{DATA:PanOSContainerID} %{WORD}=","PanOSContainerID=%{GREEDYDATA:PanOSContainerID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSContainerName=%{DATA:PanOSContainerName} %{WORD}=","PanOSContainerName=%{GREEDYDATA:PanOSContainerName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSContainerNameSpace=%{DATA:PanOSContainerNameSpace} %{WORD}=","PanOSContainerNameSpace=%{GREEDYDATA:PanOSContainerNameSpace}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSContentVer=%{DATA:PanOSContentVer} %{WORD}=","PanOSContentVer=%{GREEDYDATA:PanOSContentVer}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSCountOfRepeats=%{DATA:PanOSCountOfRepeats} %{WORD}=","PanOSCountOfRepeats=%{GREEDYDATA:PanOSCountOfRepeats}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDataSourceName=%{DATA:PanOSDataSourceName} %{WORD}=","PanOSDataSourceName=%{GREEDYDATA:PanOSDataSourceName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDataSourceSubType=%{DATA:PanOSDataSourceSubType} %{WORD}=","PanOSDataSourceSubType=%{GREEDYDATA:PanOSDataSourceSubType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDataSourceType=%{DATA:PanOSDataSourceType} %{WORD}=","PanOSDataSourceType=%{GREEDYDATA:PanOSDataSourceType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDesc=%{DATA:PanOSDesc} %{WORD}=","PanOSDesc=%{GREEDYDATA:PanOSDesc}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDescription=%{DATA:PanOSDescription} %{WORD}=","PanOSDescription=%{GREEDYDATA:PanOSDescription}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceCategory=%{DATA:PanOSDestinationDeviceCategory} %{WORD}=","PanOSDestinationDeviceCategory=%{GREEDYDATA:PanOSDestinationDeviceCategory}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceHost=%{DATA:PanOSDestinationDeviceHost} %{WORD}=","PanOSDestinationDeviceHost=%{GREEDYDATA:PanOSDestinationDeviceHost}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceMac=%{DATA:PanOSDestinationDeviceMac} %{WORD}=","PanOSDestinationDeviceMac=%{GREEDYDATA:PanOSDestinationDeviceMac}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceModel=%{DATA:PanOSDestinationDeviceModel} %{WORD}=","PanOSDestinationDeviceModel=%{GREEDYDATA:PanOSDestinationDeviceModel}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceOSFamily=%{DATA:PanOSDestinationDeviceOSFamily} %{WORD}=","PanOSDestinationDeviceOSFamily=%{GREEDYDATA:PanOSDestinationDeviceOSFamily}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceOSVersion=%{DATA:PanOSDestinationDeviceOSVersion} %{WORD}=","PanOSDestinationDeviceOSVersion=%{GREEDYDATA:PanOSDestinationDeviceOSVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceProfile=%{DATA:PanOSDestinationDeviceProfile} %{WORD}=","PanOSDestinationDeviceProfile=%{GREEDYDATA:PanOSDestinationDeviceProfile}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDeviceVendor=%{DATA:PanOSDestinationDeviceVendor} %{WORD}=","PanOSDestinationDeviceVendor=%{GREEDYDATA:PanOSDestinationDeviceVendor}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationDynamicAddressGroup=%{DATA:PanOSDestinationDynamicAddressGroup} %{WORD}=","PanOSDestinationDynamicAddressGroup=%{GREEDYDATA:PanOSDestinationDynamicAddressGroup}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationEDL=%{DATA:PanOSDestinationEDL} %{WORD}=","PanOSDestinationEDL=%{GREEDYDATA:PanOSDestinationEDL}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDestinationUUID=%{DATA:PanOSDestinationUUID} %{WORD}=","PanOSDestinationUUID=%{GREEDYDATA:PanOSDestinationUUID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDeviceSN=%{DATA:PanOSDeviceSN} %{WORD}=","PanOSDeviceSN=%{GREEDYDATA:PanOSDeviceSN}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDGl1=%{DATA:PanOSDGl1} %{WORD}=","PanOSDGl1=%{GREEDYDATA:PanOSDGl1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDGl2=%{DATA:PanOSDGl2} %{WORD}=","PanOSDGl2=%{GREEDYDATA:PanOSDGl2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDGl3=%{DATA:PanOSDGl3} %{WORD}=","PanOSDGl3=%{GREEDYDATA:PanOSDGl3}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDGl4=%{DATA:PanOSDGl4} %{WORD}=","PanOSDGl4=%{GREEDYDATA:PanOSDGl4}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDiameterApp=%{DATA:PanOSDiameterApp} %{WORD}=","PanOSDiameterApp=%{GREEDYDATA:PanOSDiameterApp}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDiameterAVPCode=%{DATA:PanOSDiameterAVPCode} %{WORD}=","PanOSDiameterAVPCode=%{GREEDYDATA:PanOSDiameterAVPCode}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDiameterCmdCode=%{DATA:PanOSDiameterCmdCode} %{WORD}=","PanOSDiameterCmdCode=%{GREEDYDATA:PanOSDiameterCmdCode}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSDstUUID=%{DATA:PanOSDstUUID} %{WORD}=","PanOSDstUUID=%{GREEDYDATA:PanOSDstUUID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEllipticCurve=%{DATA:PanOSEllipticCurve} %{WORD}=","PanOSEllipticCurve=%{GREEDYDATA:PanOSEllipticCurve}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEndpointDeviceName=%{DATA:PanOSEndpointDeviceName} %{WORD}=","PanOSEndpointDeviceName=%{GREEDYDATA:PanOSEndpointDeviceName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEndpointMac=%{DATA:PanOSEndpointMac} %{WORD}=","PanOSEndpointMac=%{GREEDYDATA:PanOSEndpointMac}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEndpointOSType=%{DATA:PanOSEndpointOSType} %{WORD}=","PanOSEndpointOSType=%{GREEDYDATA:PanOSEndpointOSType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEndpointOSVersion=%{DATA:PanOSEndpointOSVersion} %{WORD}=","PanOSEndpointOSVersion=%{GREEDYDATA:PanOSEndpointOSVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEndpointSerialNumber=%{DATA:PanOSEndpointSerialNumber} %{WORD}=","PanOSEndpointSerialNumber=%{GREEDYDATA:PanOSEndpointSerialNumber}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEndUserIP=%{DATA:PanOSEndUserIP} %{WORD}=","PanOSEndUserIP=%{GREEDYDATA:PanOSEndUserIP}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSErrorIndex=%{DATA:PanOSErrorIndex} %{WORD}=","PanOSErrorIndex=%{GREEDYDATA:PanOSErrorIndex}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSErrorMessage=%{DATA:PanOSErrorMessage} %{WORD}=","PanOSErrorMessage=%{GREEDYDATA:PanOSErrorMessage}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEventID=%{DATA:PanOSEventID} %{WORD}=","PanOSEventID=%{GREEDYDATA:PanOSEventID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSEventStatus=%{DATA:PanOSEventStatus} %{WORD}=","PanOSEventStatus=%{GREEDYDATA:PanOSEventStatus}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSFingerprint=%{DATA:PanOSFingerprint} %{WORD}=","PanOSFingerprint=%{GREEDYDATA:PanOSFingerprint}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSFirewallToServer=%{DATA:PanOSFirewallToServer} %{WORD}=","PanOSFirewallToServer=%{GREEDYDATA:PanOSFirewallToServer}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSFWDeviceGroup=%{DATA:PanOSFWDeviceGroup} %{WORD}=","PanOSFWDeviceGroup=%{GREEDYDATA:PanOSFWDeviceGroup}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGateway=%{DATA:PanOSGateway} %{WORD}=","PanOSGateway=%{GREEDYDATA:PanOSGateway}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGatewayPriority=%{DATA:PanOSGatewayPriority} %{WORD}=","PanOSGatewayPriority=%{GREEDYDATA:PanOSGatewayPriority}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGatewaySelectionType=%{DATA:PanOSGatewaySelectionType} %{WORD}=","PanOSGatewaySelectionType=%{GREEDYDATA:PanOSGatewaySelectionType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGlobalProtectClientVersion=%{DATA:PanOSGlobalProtectClientVersion} %{WORD}=","PanOSGlobalProtectClientVersion=%{GREEDYDATA:PanOSGlobalProtectClientVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGPGatewayLocation=%{DATA:PanOSGPGatewayLocation} %{WORD}=","PanOSGPGatewayLocation=%{GREEDYDATA:PanOSGPGatewayLocation}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGTPCause=%{DATA:PanOSGTPCause} %{WORD}=","PanOSGTPCause=%{GREEDYDATA:PanOSGTPCause}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGTPEventCode=%{DATA:PanOSGTPEventCode} %{WORD}=","PanOSGTPEventCode=%{GREEDYDATA:PanOSGTPEventCode}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGTPEventType=%{DATA:PanOSGTPEventType} %{WORD}=","PanOSGTPEventType=%{GREEDYDATA:PanOSGTPEventType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGTPInterface=%{DATA:PanOSGTPInterface} %{WORD}=","PanOSGTPInterface=%{GREEDYDATA:PanOSGTPInterface}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSGTPMsgType=%{DATA:PanOSGTPMsgType} %{WORD}=","PanOSGTPMsgType=%{GREEDYDATA:PanOSGTPMsgType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSHostID=%{DATA:PanOSHostID} %{WORD}=","PanOSHostID=%{GREEDYDATA:PanOSHostID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSHTTP2Con=%{DATA:PanOSHTTP2Con} %{WORD}=","PanOSHTTP2Con=%{GREEDYDATA:PanOSHTTP2Con}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSHTTPHeader=%{DATA:PanOSHTTPHeader} %{WORD}=","PanOSHTTPHeader=%{GREEDYDATA:PanOSHTTPHeader}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSHTTPUserAgent=%{DATA:PanOSHTTPUserAgent} %{WORD}=","PanOSHTTPUserAgent=%{GREEDYDATA:PanOSHTTPUserAgent}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSIssuerCommonName=%{DATA:PanOSIssuerCommonName} %{WORD}=","PanOSIssuerCommonName=%{GREEDYDATA:PanOSIssuerCommonName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSIssuerNameLength=%{DATA:PanOSIssuerNameLength} %{WORD}=","PanOSIssuerNameLength=%{GREEDYDATA:PanOSIssuerNameLength}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSLoginDuration=%{DATA:PanOSLoginDuration} %{WORD}=","PanOSLoginDuration=%{GREEDYDATA:PanOSLoginDuration}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSLogTimeStamp=%{DATA:PanOSLogTimeStamp} %{WORD}=","PanOSLogTimeStamp=%{GREEDYDATA:PanOSLogTimeStamp}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSLogTypeSeqNo=%{DATA:PanOSLogTypeSeqNo} %{WORD}=","PanOSLogTypeSeqNo=%{GREEDYDATA:PanOSLogTypeSeqNo}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSMonitorTag=%{DATA:PanOSMonitorTag} %{WORD}=","PanOSMonitorTag=%{GREEDYDATA:PanOSMonitorTag}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSMSISDN=%{DATA:PanOSMSISDN} %{WORD}=","PanOSMSISDN=%{GREEDYDATA:PanOSMSISDN}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSOpCode=%{DATA:PanOSOpCode} %{WORD}=","PanOSOpCode=%{GREEDYDATA:PanOSOpCode}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPacketsReceived=%{DATA:PanOSPacketsReceived} %{WORD}=","PanOSPacketsReceived=%{GREEDYDATA:PanOSPacketsReceived}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPacketsSent=%{DATA:PanOSPacketsSent} %{WORD}=","PanOSPacketsSent=%{GREEDYDATA:PanOSPacketsSent}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSParentSessionID=%{DATA:PanOSParentSessionID} %{WORD}=","PanOSParentSessionID=%{GREEDYDATA:PanOSParentSessionID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSParentStartTime=%{DATA:PanOSParentStartTime} %{WORD}=","PanOSParentStartTime=%{GREEDYDATA:PanOSParentStartTime}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPayloadProtID=%{DATA:PanOSPayloadProtID} %{WORD}=","PanOSPayloadProtID=%{GREEDYDATA:PanOSPayloadProtID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPcapID=%{DATA:PanOSPcapID} %{WORD}=","PanOSPcapID=%{GREEDYDATA:PanOSPcapID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPolicyAuditComment=%{DATA:PanOSPolicyAuditComment} %{WORD}=","PanOSPolicyAuditComment=%{GREEDYDATA:PanOSPolicyAuditComment}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPolicyName=%{DATA:PanOSPolicyName} %{WORD}=","PanOSPolicyName=%{GREEDYDATA:PanOSPolicyName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPortal=%{DATA:PanOSPortal} %{WORD}=","PanOSPortal=%{GREEDYDATA:PanOSPortal}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPPID=%{DATA:PanOSPPID} %{WORD}=","PanOSPPID=%{GREEDYDATA:PanOSPPID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPrivateIPv4=%{DATA:PanOSPrivateIPv4} %{WORD}=","PanOSPrivateIPv4=%{GREEDYDATA:PanOSPrivateIPv4}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPrivateIPv6=%{DATA:PanOSPrivateIPv6} %{WORD}=","PanOSPrivateIPv6=%{GREEDYDATA:PanOSPrivateIPv6}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSProxyType=%{DATA:PanOSProxyType} %{WORD}=","PanOSProxyType=%{GREEDYDATA:PanOSProxyType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPublicIPv4=%{DATA:PanOSPublicIPv4} %{WORD}=","PanOSPublicIPv4=%{GREEDYDATA:PanOSPublicIPv4}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSPublicIPv6=%{DATA:PanOSPublicIPv6} %{WORD}=","PanOSPublicIPv6=%{GREEDYDATA:PanOSPublicIPv6}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSQuarantineReason=%{DATA:PanOSQuarantineReason} %{WORD}=","PanOSQuarantineReason=%{GREEDYDATA:PanOSQuarantineReason}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRadioTech=%{DATA:PanOSRadioTech} %{WORD}=","PanOSRadioTech=%{GREEDYDATA:PanOSRadioTech}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSReferer=%{DATA:PanOSReferer} %{WORD}=","PanOSReferer=%{GREEDYDATA:PanOSReferer}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRmtUserID=%{DATA:PanOSRmtUserID} %{WORD}=","PanOSRmtUserID=%{GREEDYDATA:PanOSRmtUserID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRmtUserIP=%{DATA:PanOSRmtUserIP} %{WORD}=","PanOSRmtUserIP=%{GREEDYDATA:PanOSRmtUserIP}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRootCNLength=%{DATA:PanOSRootCNLength} %{WORD}=","PanOSRootCNLength=%{GREEDYDATA:PanOSRootCNLength}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRootCommonName=%{DATA:PanOSRootCommonName} %{WORD}=","PanOSRootCommonName=%{GREEDYDATA:PanOSRootCommonName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRootStatus=%{DATA:PanOSRootStatus} %{WORD}=","PanOSRootStatus=%{GREEDYDATA:PanOSRootStatus}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSRuleUUID=%{DATA:PanOSRuleUUID} %{WORD}=","PanOSRuleUUID=%{GREEDYDATA:PanOSRuleUUID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCCPCallingGT=%{DATA:PanOSSCCPCallingGT} %{WORD}=","PanOSSCCPCallingGT=%{GREEDYDATA:PanOSSCCPCallingGT}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCCPCallingPartySSN=%{DATA:PanOSSCCPCallingPartySSN} %{WORD}=","PanOSSCCPCallingPartySSN=%{GREEDYDATA:PanOSSCCPCallingPartySSN}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPAssocEndReason=%{DATA:PanOSSCTPAssocEndReason} %{WORD}=","PanOSSCTPAssocEndReason=%{GREEDYDATA:PanOSSCTPAssocEndReason}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPAssocID=%{DATA:PanOSSCTPAssocID} %{WORD}=","PanOSSCTPAssocID=%{GREEDYDATA:PanOSSCTPAssocID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPCauseCode=%{DATA:PanOSSCTPCauseCode} %{WORD}=","PanOSSCTPCauseCode=%{GREEDYDATA:PanOSSCTPCauseCode}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPChunkRcv=%{DATA:PanOSSCTPChunkRcv} %{WORD}=","PanOSSCTPChunkRcv=%{GREEDYDATA:PanOSSCTPChunkRcv}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPChunks=%{DATA:PanOSSCTPChunks} %{WORD}=","PanOSSCTPChunks=%{GREEDYDATA:PanOSSCTPChunks}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPChunkSent=%{DATA:PanOSSCTPChunkSent} %{WORD}=","PanOSSCTPChunkSent=%{GREEDYDATA:PanOSSCTPChunkSent}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPChunksRcv=%{DATA:PanOSSCTPChunksRcv} %{WORD}=","PanOSSCTPChunksRcv=%{GREEDYDATA:PanOSSCTPChunksRcv}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPFilter=%{DATA:PanOSSCTPFilter} %{WORD}=","PanOSSCTPFilter=%{GREEDYDATA:PanOSSCTPFilter}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPStreamID=%{DATA:PanOSSCTPStreamID} %{WORD}=","PanOSSCTPStreamID=%{GREEDYDATA:PanOSSCTPStreamID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPVerTag1=%{DATA:PanOSSCTPVerTag1} %{WORD}=","PanOSSCTPVerTag1=%{GREEDYDATA:PanOSSCTPVerTag1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSCTPVerTag2=%{DATA:PanOSSCTPVerTag2} %{WORD}=","PanOSSCTPVerTag2=%{GREEDYDATA:PanOSSCTPVerTag2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSequenceNo=%{DATA:PanOSSequenceNo} %{WORD}=","PanOSSequenceNo=%{GREEDYDATA:PanOSSequenceNo}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSServerNameIndication=%{DATA:PanOSServerNameIndication} %{WORD}=","PanOSServerNameIndication=%{GREEDYDATA:PanOSServerNameIndication}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSServingCntryMCC=%{DATA:PanOSServingCntryMCC} %{WORD}=","PanOSServingCntryMCC=%{GREEDYDATA:PanOSServingCntryMCC}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSServingNetMNC=%{DATA:PanOSServingNetMNC} %{WORD}=","PanOSServingNetMNC=%{GREEDYDATA:PanOSServingNetMNC}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSeverity=%{DATA:PanOSSeverity} %{WORD}=","PanOSSeverity=%{GREEDYDATA:PanOSSeverity}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSNILength=%{DATA:PanOSSNILength} %{WORD}=","PanOSSNILength=%{GREEDYDATA:PanOSSNILength}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceCategory=%{DATA:PanOSSourceDeviceCategory} %{WORD}=","PanOSSourceDeviceCategory=%{GREEDYDATA:PanOSSourceDeviceCategory}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceHost=%{DATA:PanOSSourceDeviceHost} %{WORD}=","PanOSSourceDeviceHost=%{GREEDYDATA:PanOSSourceDeviceHost}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceMac=%{DATA:PanOSSourceDeviceMac} %{WORD}=","PanOSSourceDeviceMac=%{GREEDYDATA:PanOSSourceDeviceMac}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceModel=%{DATA:PanOSSourceDeviceModel} %{WORD}=","PanOSSourceDeviceModel=%{GREEDYDATA:PanOSSourceDeviceModel}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceOSFamily=%{DATA:PanOSSourceDeviceOSFamily} %{WORD}=","PanOSSourceDeviceOSFamily=%{GREEDYDATA:PanOSSourceDeviceOSFamily}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceOSVersion=%{DATA:PanOSSourceDeviceOSVersion} %{WORD}=","PanOSSourceDeviceOSVersion=%{GREEDYDATA:PanOSSourceDeviceOSVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceProfile=%{DATA:PanOSSourceDeviceProfile} %{WORD}=","PanOSSourceDeviceProfile=%{GREEDYDATA:PanOSSourceDeviceProfile}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDeviceVendor=%{DATA:PanOSSourceDeviceVendor} %{WORD}=","PanOSSourceDeviceVendor=%{GREEDYDATA:PanOSSourceDeviceVendor}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceDynamicAddressGroup=%{DATA:PanOSSourceDynamicAddressGroup} %{WORD}=","PanOSSourceDynamicAddressGroup=%{GREEDYDATA:PanOSSourceDynamicAddressGroup}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceEDL=%{DATA:PanOSSourceEDL} %{WORD}=","PanOSSourceEDL=%{GREEDYDATA:PanOSSourceEDL}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceHostname=%{DATA:PanOSSourceHostname} %{WORD}=","PanOSSourceHostname=%{GREEDYDATA:PanOSSourceHostname}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceMac=%{DATA:PanOSSourceMac} %{WORD}=","PanOSSourceMac=%{GREEDYDATA:PanOSSourceMac}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceRegion=%{DATA:PanOSSourceRegion} %{WORD}=","PanOSSourceRegion=%{GREEDYDATA:PanOSSourceRegion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceUserName=%{DATA:PanOSSourceUserName} %{WORD}=","PanOSSourceUserName=%{GREEDYDATA:PanOSSourceUserName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSourceUUID=%{DATA:PanOSSourceUUID} %{WORD}=","PanOSSourceUUID=%{GREEDYDATA:PanOSSourceUUID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSrcUUID=%{DATA:PanOSSrcUUID} %{WORD}=","PanOSSrcUUID=%{GREEDYDATA:PanOSSrcUUID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSSSLResponseTime=%{DATA:PanOSSSLResponseTime} %{WORD}=","PanOSSSLResponseTime=%{GREEDYDATA:PanOSSSLResponseTime}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSStage=%{DATA:PanOSStage} %{WORD}=","PanOSStage=%{GREEDYDATA:PanOSStage}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTagName=%{DATA:PanOSTagName} %{WORD}=","PanOSTagName=%{GREEDYDATA:PanOSTagName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSThreatCategory=%{DATA:PanOSThreatCategory} %{WORD}=","PanOSThreatCategory=%{GREEDYDATA:PanOSThreatCategory}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTimeGeneratedHighResolution=%{DATA:PanOSTimeGeneratedHighResolution} %{WORD}=","PanOSTimeGeneratedHighResolution=%{GREEDYDATA:PanOSTimeGeneratedHighResolution}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTimeNotAfter=%{DATA:PanOSTimeNotAfter} %{WORD}=","PanOSTimeNotAfter=%{GREEDYDATA:PanOSTimeNotAfter}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTimeNotBefore=%{DATA:PanOSTimeNotBefore} %{WORD}=","PanOSTimeNotBefore=%{GREEDYDATA:PanOSTimeNotBefore}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTimeout=%{DATA:PanOSTimeout} %{WORD}=","PanOSTimeout=%{GREEDYDATA:PanOSTimeout}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTimeReceivedManagementPlane=%{DATA:PanOSTimeReceivedManagementPlane} %{WORD}=","PanOSTimeReceivedManagementPlane=%{GREEDYDATA:PanOSTimeReceivedManagementPlane}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTLSAuth=%{DATA:PanOSTLSAuth} %{WORD}=","PanOSTLSAuth=%{GREEDYDATA:PanOSTLSAuth}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTLSEncryptionAlgorithm=%{DATA:PanOSTLSEncryptionAlgorithm} %{WORD}=","PanOSTLSEncryptionAlgorithm=%{GREEDYDATA:PanOSTLSEncryptionAlgorithm}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTLSKeyExchange=%{DATA:PanOSTLSKeyExchange} %{WORD}=","PanOSTLSKeyExchange=%{GREEDYDATA:PanOSTLSKeyExchange}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTLSVersion=%{DATA:PanOSTLSVersion} %{WORD}=","PanOSTLSVersion=%{GREEDYDATA:PanOSTLSVersion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTrafficOriginRegion=%{DATA:PanOSTrafficOriginRegion} %{WORD}=","PanOSTrafficOriginRegion=%{GREEDYDATA:PanOSTrafficOriginRegion}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTrafficSessionID=%{DATA:PanOSTrafficSessionID} %{WORD}=","PanOSTrafficSessionID=%{GREEDYDATA:PanOSTrafficSessionID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunneInspectionRule=%{DATA:PanOSTunneInspectionRule} %{WORD}=","PanOSTunneInspectionRule=%{GREEDYDATA:PanOSTunneInspectionRule}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnel=%{DATA:PanOSTunnel} %{WORD}=","PanOSTunnel=%{GREEDYDATA:PanOSTunnel}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnelEndptID1=%{DATA:PanOSTunnelEndptID1} %{WORD}=","PanOSTunnelEndptID1=%{GREEDYDATA:PanOSTunnelEndptID1}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnelEndptID2=%{DATA:PanOSTunnelEndptID2} %{WORD}=","PanOSTunnelEndptID2=%{GREEDYDATA:PanOSTunnelEndptID2}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnelFragment=%{DATA:PanOSTunnelFragment} %{WORD}=","PanOSTunnelFragment=%{GREEDYDATA:PanOSTunnelFragment}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnelID=%{DATA:PanOSTunnelID} %{WORD}=","PanOSTunnelID=%{GREEDYDATA:PanOSTunnelID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnelInspectionRule=%{DATA:PanOSTunnelInspectionRule} %{WORD}=","PanOSTunnelInspectionRule=%{GREEDYDATA:PanOSTunnelInspectionRule}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSTunnelType=%{DATA:PanOSTunnelType} %{WORD}=","PanOSTunnelType=%{GREEDYDATA:PanOSTunnelType}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSUGFlags=%{DATA:PanOSUGFlags} %{WORD}=","PanOSUGFlags=%{GREEDYDATA:PanOSUGFlags}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSURLCatList=%{DATA:PanOSURLCatList} %{WORD}=","PanOSURLCatList=%{GREEDYDATA:PanOSURLCatList}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSUserBySource=%{DATA:PanOSUserBySource} %{WORD}=","PanOSUserBySource=%{GREEDYDATA:PanOSUserBySource}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSVirtualSystem=%{DATA:PanOSVirtualSystem} %{WORD}=","PanOSVirtualSystem=%{GREEDYDATA:PanOSVirtualSystem}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSVsysName=%{DATA:PanOSVsysName} %{WORD}=","PanOSVsysName=%{GREEDYDATA:PanOSVsysName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanOSXForwarderfor=%{DATA:PanOSXForwarderfor} %{WORD}=","PanOSXForwarderfor=%{GREEDYDATA:PanOSXForwarderfor}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanPartialHash=%{DATA:PanPartialHash} %{WORD}=","PanPartialHash=%{GREEDYDATA:PanPartialHash}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanPODName=%{DATA:PanPODName} %{WORD}=","PanPODName=%{GREEDYDATA:PanPODName}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanPODNamespace=%{DATA:PanPODNamespace} %{WORD}=","PanPODNamespace=%{GREEDYDATA:PanPODNamespace}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanPolicyID=%{DATA:PanPolicyID} %{WORD}=","PanPolicyID=%{GREEDYDATA:PanPolicyID}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanReasonFilteringAction=%{DATA:PanReasonFilteringAction} %{WORD}=","PanReasonFilteringAction=%{GREEDYDATA:PanReasonFilteringAction}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSDWANCluster=%{DATA:PanSDWANCluster} %{WORD}=","PanSDWANCluster=%{GREEDYDATA:PanSDWANCluster}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSDWANClustype=%{DATA:PanSDWANClustype} %{WORD}=","PanSDWANClustype=%{GREEDYDATA:PanSDWANClustype}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSDWANDevice=%{DATA:PanSDWANDevice} %{WORD}=","PanSDWANDevice=%{GREEDYDATA:PanSDWANDevice}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSDWANSite=%{DATA:PanSDWANSite} %{WORD}=","PanSDWANSite=%{GREEDYDATA:PanSDWANSite}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDAG=%{DATA:PanSrcDAG} %{WORD}=","PanSrcDAG=%{GREEDYDATA:PanSrcDAG}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDeviceCat=%{DATA:PanSrcDeviceCat} %{WORD}=","PanSrcDeviceCat=%{GREEDYDATA:PanSrcDeviceCat}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDeviceModel=%{DATA:PanSrcDeviceModel} %{WORD}=","PanSrcDeviceModel=%{GREEDYDATA:PanSrcDeviceModel}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDeviceOS=%{DATA:PanSrcDeviceOS} %{WORD}=","PanSrcDeviceOS=%{GREEDYDATA:PanSrcDeviceOS}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDeviceOSv=%{DATA:PanSrcDeviceOSv} %{WORD}=","PanSrcDeviceOSv=%{GREEDYDATA:PanSrcDeviceOSv}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDeviceProf=%{DATA:PanSrcDeviceProf} %{WORD}=","PanSrcDeviceProf=%{GREEDYDATA:PanSrcDeviceProf}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcDeviceVendor=%{DATA:PanSrcDeviceVendor} %{WORD}=","PanSrcDeviceVendor=%{GREEDYDATA:PanSrcDeviceVendor}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcEDL=%{DATA:PanSrcEDL} %{WORD}=","PanSrcEDL=%{GREEDYDATA:PanSrcEDL}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcHostname=%{DATA:PanSrcHostname} %{WORD}=","PanSrcHostname=%{GREEDYDATA:PanSrcHostname}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanSrcMac=%{DATA:PanSrcMac} %{WORD}=","PanSrcMac=%{GREEDYDATA:PanSrcMac}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanTimeHighRes=%{DATA:PanTimeHighRes} %{WORD}=","PanTimeHighRes=%{GREEDYDATA:PanTimeHighRes}"] } }
                 grok { match => { "cef_or_leef_msg" => ["PanXFFIP=%{DATA:PanXFFIP} %{WORD}=","PanXFFIP=%{GREEDYDATA:PanXFFIP}"] } }
                 grok { match => { "cef_or_leef_msg" => ["proto=%{DATA:proto} %{WORD}=","proto=%{GREEDYDATA:proto}"] } }
                 grok { match => { "cef_or_leef_msg" => ["reason=%{DATA:reason} %{WORD}=","reason=%{GREEDYDATA:reason}"] } }
                 grok { match => { "cef_or_leef_msg" => ["request=%{DATA:request} %{WORD}=","request=%{GREEDYDATA:request}"] } }
                 grok { match => { "cef_or_leef_msg" => ["requestClientApplication=%{DATA:requestClientApplication} %{WORD}=","requestClientApplication=%{GREEDYDATA:requestClientApplication}"] } }
                 grok { match => { "cef_or_leef_msg" => ["requestContext=%{DATA:requestContext} %{WORD}=","requestContext=%{GREEDYDATA:requestContext}"] } }
                 grok { match => { "cef_or_leef_msg" => ["requestMethod=%{DATA:requestMethod} %{WORD}=","requestMethod=%{GREEDYDATA:requestMethod}"] } }
                 grok { match => { "cef_or_leef_msg" => ["rt=%{DATA:rt} %{WORD}=","rt=%{GREEDYDATA:rt}"] } }
                 grok { match => { "cef_or_leef_msg" => ["shost=%{DATA:shost} %{WORD}=","shost=%{GREEDYDATA:shost}"] } }
                 grok { match => { "cef_or_leef_msg" => ["sourceTranslatedAddress=%{DATA:sourceTranslatedAddress} %{WORD}=","sourceTranslatedAddress=%{GREEDYDATA:sourceTranslatedAddress}"] } }
                 grok { match => { "cef_or_leef_msg" => ["sourceTranslatedPort=%{DATA:sourceTranslatedPort} %{WORD}=","sourceTranslatedPort=%{GREEDYDATA:sourceTranslatedPort}"] } }
                 grok { match => { "cef_or_leef_msg" => ["spt=%{DATA:spt} %{WORD}=","spt=%{GREEDYDATA:spt}"] } }
                 grok { match => { "cef_or_leef_msg" => ["src=%{DATA:src} %{WORD}=","src=%{GREEDYDATA:src}"] } }
                 grok { match => { "cef_or_leef_msg" => ["start=%{DATA:start} %{WORD}=","start=%{GREEDYDATA:start}"] } }
                 grok { match => { "cef_or_leef_msg" => ["suid=%{DATA:suid} %{WORD}=","suid=%{GREEDYDATA:suid}"] } }
                 grok { match => { "cef_or_leef_msg" => ["suser=%{DATA:suser} %{WORD}=","suser=%{GREEDYDATA:suser}"] } }
#......................................................................#
# Rename fields (individual groks results)
                mutate {
                 rename => { "[act]" => "[kv_field][act]" }
                 rename => { "[anOSTimeGeneratedHighResolution]" => "[kv_field][anOSTimeGeneratedHighResolution]" }
                 rename => { "[app]" => "[kv_field][app]" }
                 rename => { "[c6a2]" => "[kv_field][c6a2]" }
                 rename => { "[c6a2Label]" => "[kv_field][c6a2Label]" }
                 rename => { "[cat]" => "[kv_field][cat]" }
                 rename => { "[cfp1]" => "[kv_field][cfp1]" }
                 rename => { "[cfp1Label]" => "[kv_field][cfp1Label]" }
                 rename => { "[cfp2]" => "[kv_field][cfp2]" }
                 rename => { "[cfp2Label]" => "[kv_field][cfp2Label]" }
                 rename => { "[cfp3]" => "[kv_field][cfp3]" }
                 rename => { "[cfp3Label]" => "[kv_field][cfp3Label]" }
                 rename => { "[cfp4]" => "[kv_field][cfp4]" }
                 rename => { "[cfp4Label]" => "[kv_field][cfp4Label]" }
                 rename => { "[cn1]" => "[kv_field][cn1]" }
                 rename => { "[cn1Label]" => "[kv_field][cn1Label]" }
                 rename => { "[cn2]" => "[kv_field][cn2]" }
                 rename => { "[cn2Label]" => "[kv_field][cn2Label]" }
                 rename => { "[cn3]" => "[kv_field][cn3]" }
                 rename => { "[cn3Label]" => "[kv_field][cn3Label]" }
                 rename => { "[cn4]" => "[kv_field][cn4]" }
                 rename => { "[cn4Label]" => "[kv_field][cn4Label]" }
                 rename => { "[cn5]" => "[kv_field][cn5]" }
                 rename => { "[cn5Label]" => "[kv_field][cn5Label]" }
                 rename => { "[cn6]" => "[kv_field][cn6]" }
                 rename => { "[cn6Label]" => "[kv_field][cn6Label]" }
                 rename => { "[cnt]" => "[kv_field][cnt]" }
                 rename => { "[cs1]" => "[kv_field][cs1]" }
                 rename => { "[cs1Label]" => "[kv_field][cs1Label]" }
                 rename => { "[cs2]" => "[kv_field][cs2]" }
                 rename => { "[cs2Label]" => "[kv_field][cs2Label]" }
                 rename => { "[cs3]" => "[kv_field][cs3]" }
                 rename => { "[cs3Label]" => "[kv_field][cs3Label]" }
                 rename => { "[cs4]" => "[kv_field][cs4]" }
                 rename => { "[cs4Label]" => "[kv_field][cs4Label]" }
                 rename => { "[cs5]" => "[kv_field][cs5]" }
                 rename => { "[cs5Label]" => "[kv_field][cs5Label]" }
                 rename => { "[cs6]" => "[kv_field][cs6]" }
                 rename => { "[cs6Label]" => "[kv_field][cs6Label]" }
                 rename => { "[destinationServiceName]" => "[kv_field][destinationServiceName]" }
                 rename => { "[destinationTranslatedAddress]" => "[kv_field][destinationTranslatedAddress]" }
                 rename => { "[destinationTranslatedPort]" => "[kv_field][destinationTranslatedPort]" }
                 rename => { "[deviceExternalId]" => "[kv_field][deviceExternalId]" }
                 rename => { "[deviceInboundInterface]" => "[kv_field][deviceInboundInterface]" }
                 rename => { "[deviceOutboundInterface]" => "[kv_field][deviceOutboundInterface]" }
                 rename => { "[dpt]" => "[kv_field][dpt]" }
                 rename => { "[dst]" => "[kv_field][dst]" }
                 rename => { "[duid]" => "[kv_field][duid]" }
                 rename => { "[duser]" => "[kv_field][duser]" }
                 rename => { "[dvchost]" => "[kv_field][dvchost]" }
                 rename => { "[end]" => "[kv_field][end]" }
                 rename => { "[externalId]" => "[kv_field][externalId]" }
                 rename => { "[fileHash]" => "[kv_field][fileHash]" }
                 rename => { "[fileId]" => "[kv_field][fileId]" }
                 rename => { "[filePath]" => "[kv_field][filePath]" }
                 rename => { "[fileType]" => "[kv_field][fileType]" }
                 rename => { "[flags]" => "[kv_field][flags]" }
                 rename => { "[flexNumber1]" => "[kv_field][flexNumber1]" }
                 rename => { "[flexNumber1Label]" => "[kv_field][flexNumber1Label]" }
                 rename => { "[flexNumber2]" => "[kv_field][flexNumber2]" }
                 rename => { "[flexNumber2Label]" => "[kv_field][flexNumber2Label]" }
                 rename => { "[flexString1]" => "[kv_field][flexString1]" }
                 rename => { "[flexString1Label]" => "[kv_field][flexString1Label]" }
                 rename => { "[flexString2]" => "[kv_field][flexString2]" }
                 rename => { "[flexString2Label]" => "[kv_field][flexString2Label]" }
                 rename => { "[fname]" => "[kv_field][fname]" }
                 rename => { "[in]" => "[kv_field][in]" }
                 rename => { "[msg]" => "[kv_field][msg]" }
                 rename => { "[oldFileId]" => "[kv_field][oldFileId]" }
                 rename => { "[out]" => "[kv_field][out]" }
                 rename => { "[PanASServiceDiff]" => "[kv_field][PanASServiceDiff]" }
                 rename => { "[PanASServiceType]" => "[kv_field][PanASServiceType]" }
                 rename => { "[PanContainerName]" => "[kv_field][PanContainerName]" }
                 rename => { "[PanDomainEDL]" => "[kv_field][PanDomainEDL]" }
                 rename => { "[PanDstDAG]" => "[kv_field][PanDstDAG]" }
                 rename => { "[PanDstDeviceCat]" => "[kv_field][PanDstDeviceCat]" }
                 rename => { "[PanDstDeviceModel]" => "[kv_field][PanDstDeviceModel]" }
                 rename => { "[PanDstDeviceOS]" => "[kv_field][PanDstDeviceOS]" }
                 rename => { "[PanDstDeviceOSv]" => "[kv_field][PanDstDeviceOSv]" }
                 rename => { "[PanDstDeviceProf]" => "[kv_field][PanDstDeviceProf]" }
                 rename => { "[PanDstDeviceVendor]" => "[kv_field][PanDstDeviceVendor]" }
                 rename => { "[PanDstEDL]" => "[kv_field][PanDstEDL]" }
                 rename => { "[PanDstHostname]" => "[kv_field][PanDstHostname]" }
                 rename => { "[PanDstMac]" => "[kv_field][PanDstMac]" }
                 rename => { "[PanDynamicUsrgrp]" => "[kv_field][PanDynamicUsrgrp]" }
                 rename => { "[PanEPSerial]" => "[kv_field][PanEPSerial]" }
                 rename => { "[PanGPHostID]" => "[kv_field][PanGPHostID]" }
                 rename => { "[PanHASessionOwner]" => "[kv_field][PanHASessionOwner]" }
                 rename => { "[PanJustification]" => "[kv_field][PanJustification]" }
                 rename => { "[PanLinkChange]" => "[kv_field][PanLinkChange]" }
                 rename => { "[PanLinkDetail]" => "[kv_field][PanLinkDetail]" }
                 rename => { "[PanOSActionFlags]" => "[kv_field][PanOSActionFlags]" }
                 rename => { "[PanOSAPName]" => "[kv_field][PanOSAPName]" }
                 rename => { "[PanOSAreaCode]" => "[kv_field][PanOSAreaCode]" }
                 rename => { "[PanOSAssocID]" => "[kv_field][PanOSAssocID]" }
                 rename => { "[PanOSAttemptedGateways]" => "[kv_field][PanOSAttemptedGateways]" }
                 rename => { "[PanOSAuthMethod]" => "[kv_field][PanOSAuthMethod]" }
                 rename => { "[PanOSCellID]" => "[kv_field][PanOSCellID]" }
                 rename => { "[PanOSCertificateFlags]" => "[kv_field][PanOSCertificateFlags]" }
                 rename => { "[PanOSCertificateSerial]" => "[kv_field][PanOSCertificateSerial]" }
                 rename => { "[PanOSCertificateSize]" => "[kv_field][PanOSCertificateSize]" }
                 rename => { "[PanOSCertificateVersion]" => "[kv_field][PanOSCertificateVersion]" }
                 rename => { "[PanOSChainStatus]" => "[kv_field][PanOSChainStatus]" }
                 rename => { "[PanOSChunkType]" => "[kv_field][PanOSChunkType]" }
                 rename => { "[PanOSClientToFirewall]" => "[kv_field][PanOSClientToFirewall]" }
                 rename => { "[PanOSCommonName]" => "[kv_field][PanOSCommonName]" }
                 rename => { "[PanOSCommonNameLength]" => "[kv_field][PanOSCommonNameLength]" }
                 rename => { "[PanOSConfigVersion]" => "[kv_field][PanOSConfigVersion]" }
                 rename => { "[PanOSConnectionError]" => "[kv_field][PanOSConnectionError]" }
                 rename => { "[PanOSConnectionErrorID]" => "[kv_field][PanOSConnectionErrorID]" }
                 rename => { "[PanOSConnectionMethod]" => "[kv_field][PanOSConnectionMethod]" }
                 rename => { "[PanOSContainerID]" => "[kv_field][PanOSContainerID]" }
                 rename => { "[PanOSContainerName]" => "[kv_field][PanOSContainerName]" }
                 rename => { "[PanOSContainerNameSpace]" => "[kv_field][PanOSContainerNameSpace]" }
                 rename => { "[PanOSContentVer]" => "[kv_field][PanOSContentVer]" }
                 rename => { "[PanOSCountOfRepeats]" => "[kv_field][PanOSCountOfRepeats]" }
                 rename => { "[PanOSDataSourceName]" => "[kv_field][PanOSDataSourceName]" }
                 rename => { "[PanOSDataSourceSubType]" => "[kv_field][PanOSDataSourceSubType]" }
                 rename => { "[PanOSDataSourceType]" => "[kv_field][PanOSDataSourceType]" }
                 rename => { "[PanOSDesc]" => "[kv_field][PanOSDesc]" }
                 rename => { "[PanOSDescription]" => "[kv_field][PanOSDescription]" }
                 rename => { "[PanOSDestinationDeviceCategory]" => "[kv_field][PanOSDestinationDeviceCategory]" }
                 rename => { "[PanOSDestinationDeviceHost]" => "[kv_field][PanOSDestinationDeviceHost]" }
                 rename => { "[PanOSDestinationDeviceMac]" => "[kv_field][PanOSDestinationDeviceMac]" }
                 rename => { "[PanOSDestinationDeviceModel]" => "[kv_field][PanOSDestinationDeviceModel]" }
                 rename => { "[PanOSDestinationDeviceOSFamily]" => "[kv_field][PanOSDestinationDeviceOSFamily]" }
                 rename => { "[PanOSDestinationDeviceOSVersion]" => "[kv_field][PanOSDestinationDeviceOSVersion]" }
                 rename => { "[PanOSDestinationDeviceProfile]" => "[kv_field][PanOSDestinationDeviceProfile]" }
                 rename => { "[PanOSDestinationDeviceVendor]" => "[kv_field][PanOSDestinationDeviceVendor]" }
                 rename => { "[PanOSDestinationDynamicAddressGroup]" => "[kv_field][PanOSDestinationDynamicAddressGroup]" }
                 rename => { "[PanOSDestinationEDL]" => "[kv_field][PanOSDestinationEDL]" }
                 rename => { "[PanOSDestinationUUID]" => "[kv_field][PanOSDestinationUUID]" }
                 rename => { "[PanOSDeviceSN]" => "[kv_field][PanOSDeviceSN]" }
                 rename => { "[PanOSDGl1]" => "[kv_field][PanOSDGl1]" }
                 rename => { "[PanOSDGl2]" => "[kv_field][PanOSDGl2]" }
                 rename => { "[PanOSDGl3]" => "[kv_field][PanOSDGl3]" }
                 rename => { "[PanOSDGl4]" => "[kv_field][PanOSDGl4]" }
                 rename => { "[PanOSDiameterApp]" => "[kv_field][PanOSDiameterApp]" }
                 rename => { "[PanOSDiameterAVPCode]" => "[kv_field][PanOSDiameterAVPCode]" }
                 rename => { "[PanOSDiameterCmdCode]" => "[kv_field][PanOSDiameterCmdCode]" }
                 rename => { "[PanOSDstUUID]" => "[kv_field][PanOSDstUUID]" }
                 rename => { "[PanOSEllipticCurve]" => "[kv_field][PanOSEllipticCurve]" }
                 rename => { "[PanOSEndpointDeviceName]" => "[kv_field][PanOSEndpointDeviceName]" }
                 rename => { "[PanOSEndpointMac]" => "[kv_field][PanOSEndpointMac]" }
                 rename => { "[PanOSEndpointOSType]" => "[kv_field][PanOSEndpointOSType]" }
                 rename => { "[PanOSEndpointOSVersion]" => "[kv_field][PanOSEndpointOSVersion]" }
                 rename => { "[PanOSEndpointSerialNumber]" => "[kv_field][PanOSEndpointSerialNumber]" }
                 rename => { "[PanOSEndUserIP]" => "[kv_field][PanOSEndUserIP]" }
                 rename => { "[PanOSErrorIndex]" => "[kv_field][PanOSErrorIndex]" }
                 rename => { "[PanOSErrorMessage]" => "[kv_field][PanOSErrorMessage]" }
                 rename => { "[PanOSEventID]" => "[kv_field][PanOSEventID]" }
                 rename => { "[PanOSEventStatus]" => "[kv_field][PanOSEventStatus]" }
                 rename => { "[PanOSFingerprint]" => "[kv_field][PanOSFingerprint]" }
                 rename => { "[PanOSFirewallToServer]" => "[kv_field][PanOSFirewallToServer]" }
                 rename => { "[PanOSFWDeviceGroup]" => "[kv_field][PanOSFWDeviceGroup]" }
                 rename => { "[PanOSGateway]" => "[kv_field][PanOSGateway]" }
                 rename => { "[PanOSGatewayPriority]" => "[kv_field][PanOSGatewayPriority]" }
                 rename => { "[PanOSGatewaySelectionType]" => "[kv_field][PanOSGatewaySelectionType]" }
                 rename => { "[PanOSGlobalProtectClientVersion]" => "[kv_field][PanOSGlobalProtectClientVersion]" }
                 rename => { "[PanOSGPGatewayLocation]" => "[kv_field][PanOSGPGatewayLocation]" }
                 rename => { "[PanOSGTPCause]" => "[kv_field][PanOSGTPCause]" }
                 rename => { "[PanOSGTPEventCode]" => "[kv_field][PanOSGTPEventCode]" }
                 rename => { "[PanOSGTPEventType]" => "[kv_field][PanOSGTPEventType]" }
                 rename => { "[PanOSGTPInterface]" => "[kv_field][PanOSGTPInterface]" }
                 rename => { "[PanOSGTPMsgType]" => "[kv_field][PanOSGTPMsgType]" }
                 rename => { "[PanOSHostID]" => "[kv_field][PanOSHostID]" }
                 rename => { "[PanOSHTTP2Con]" => "[kv_field][PanOSHTTP2Con]" }
                 rename => { "[PanOSHTTPHeader]" => "[kv_field][PanOSHTTPHeader]" }
                 rename => { "[PanOSHTTPUserAgent]" => "[kv_field][PanOSHTTPUserAgent]" }
                 rename => { "[PanOSIssuerCommonName]" => "[kv_field][PanOSIssuerCommonName]" }
                 rename => { "[PanOSIssuerNameLength]" => "[kv_field][PanOSIssuerNameLength]" }
                 rename => { "[PanOSLoginDuration]" => "[kv_field][PanOSLoginDuration]" }
                 rename => { "[PanOSLogTimeStamp]" => "[kv_field][PanOSLogTimeStamp]" }
                 rename => { "[PanOSLogTypeSeqNo]" => "[kv_field][PanOSLogTypeSeqNo]" }
                 rename => { "[PanOSMonitorTag]" => "[kv_field][PanOSMonitorTag]" }
                 rename => { "[PanOSMSISDN]" => "[kv_field][PanOSMSISDN]" }
                 rename => { "[PanOSOpCode]" => "[kv_field][PanOSOpCode]" }
                 rename => { "[PanOSPacketsReceived]" => "[kv_field][PanOSPacketsReceived]" }
                 rename => { "[PanOSPacketsSent]" => "[kv_field][PanOSPacketsSent]" }
                 rename => { "[PanOSParentSessionID]" => "[kv_field][PanOSParentSessionID]" }
                 rename => { "[PanOSParentStartTime]" => "[kv_field][PanOSParentStartTime]" }
                 rename => { "[PanOSPayloadProtID]" => "[kv_field][PanOSPayloadProtID]" }
                 rename => { "[PanOSPcapID]" => "[kv_field][PanOSPcapID]" }
                 rename => { "[PanOSPolicyAuditComment]" => "[kv_field][PanOSPolicyAuditComment]" }
                 rename => { "[PanOSPolicyName]" => "[kv_field][PanOSPolicyName]" }
                 rename => { "[PanOSPortal]" => "[kv_field][PanOSPortal]" }
                 rename => { "[PanOSPPID]" => "[kv_field][PanOSPPID]" }
                 rename => { "[PanOSPrivateIPv4]" => "[kv_field][PanOSPrivateIPv4]" }
                 rename => { "[PanOSPrivateIPv6]" => "[kv_field][PanOSPrivateIPv6]" }
                 rename => { "[PanOSProxyType]" => "[kv_field][PanOSProxyType]" }
                 rename => { "[PanOSPublicIPv4]" => "[kv_field][PanOSPublicIPv4]" }
                 rename => { "[PanOSPublicIPv6]" => "[kv_field][PanOSPublicIPv6]" }
                 rename => { "[PanOSQuarantineReason]" => "[kv_field][PanOSQuarantineReason]" }
                 rename => { "[PanOSRadioTech]" => "[kv_field][PanOSRadioTech]" }
                 rename => { "[PanOSReferer]" => "[kv_field][PanOSReferer]" }
                 rename => { "[PanOSRmtUserID]" => "[kv_field][PanOSRmtUserID]" }
                 rename => { "[PanOSRmtUserIP]" => "[kv_field][PanOSRmtUserIP]" }
                 rename => { "[PanOSRootCNLength]" => "[kv_field][PanOSRootCNLength]" }
                 rename => { "[PanOSRootCommonName]" => "[kv_field][PanOSRootCommonName]" }
                 rename => { "[PanOSRootStatus]" => "[kv_field][PanOSRootStatus]" }
                 rename => { "[PanOSRuleUUID]" => "[kv_field][PanOSRuleUUID]" }
                 rename => { "[PanOSSCCPCallingGT]" => "[kv_field][PanOSSCCPCallingGT]" }
                 rename => { "[PanOSSCCPCallingPartySSN]" => "[kv_field][PanOSSCCPCallingPartySSN]" }
                 rename => { "[PanOSSCTPAssocEndReason]" => "[kv_field][PanOSSCTPAssocEndReason]" }
                 rename => { "[PanOSSCTPAssocID]" => "[kv_field][PanOSSCTPAssocID]" }
                 rename => { "[PanOSSCTPCauseCode]" => "[kv_field][PanOSSCTPCauseCode]" }
                 rename => { "[PanOSSCTPChunkRcv]" => "[kv_field][PanOSSCTPChunkRcv]" }
                 rename => { "[PanOSSCTPChunks]" => "[kv_field][PanOSSCTPChunks]" }
                 rename => { "[PanOSSCTPChunkSent]" => "[kv_field][PanOSSCTPChunkSent]" }
                 rename => { "[PanOSSCTPChunksRcv]" => "[kv_field][PanOSSCTPChunksRcv]" }
                 rename => { "[PanOSSCTPFilter]" => "[kv_field][PanOSSCTPFilter]" }
                 rename => { "[PanOSSCTPStreamID]" => "[kv_field][PanOSSCTPStreamID]" }
                 rename => { "[PanOSSCTPVerTag1]" => "[kv_field][PanOSSCTPVerTag1]" }
                 rename => { "[PanOSSCTPVerTag2]" => "[kv_field][PanOSSCTPVerTag2]" }
                 rename => { "[PanOSSequenceNo]" => "[kv_field][PanOSSequenceNo]" }
                 rename => { "[PanOSServerNameIndication]" => "[kv_field][PanOSServerNameIndication]" }
                 rename => { "[PanOSServingCntryMCC]" => "[kv_field][PanOSServingCntryMCC]" }
                 rename => { "[PanOSServingNetMNC]" => "[kv_field][PanOSServingNetMNC]" }
                 rename => { "[PanOSSeverity]" => "[kv_field][PanOSSeverity]" }
                 rename => { "[PanOSSNILength]" => "[kv_field][PanOSSNILength]" }
                 rename => { "[PanOSSourceDeviceCategory]" => "[kv_field][PanOSSourceDeviceCategory]" }
                 rename => { "[PanOSSourceDeviceHost]" => "[kv_field][PanOSSourceDeviceHost]" }
                 rename => { "[PanOSSourceDeviceMac]" => "[kv_field][PanOSSourceDeviceMac]" }
                 rename => { "[PanOSSourceDeviceModel]" => "[kv_field][PanOSSourceDeviceModel]" }
                 rename => { "[PanOSSourceDeviceOSFamily]" => "[kv_field][PanOSSourceDeviceOSFamily]" }
                 rename => { "[PanOSSourceDeviceOSVersion]" => "[kv_field][PanOSSourceDeviceOSVersion]" }
                 rename => { "[PanOSSourceDeviceProfile]" => "[kv_field][PanOSSourceDeviceProfile]" }
                 rename => { "[PanOSSourceDeviceVendor]" => "[kv_field][PanOSSourceDeviceVendor]" }
                 rename => { "[PanOSSourceDynamicAddressGroup]" => "[kv_field][PanOSSourceDynamicAddressGroup]" }
                 rename => { "[PanOSSourceEDL]" => "[kv_field][PanOSSourceEDL]" }
                 rename => { "[PanOSSourceHostname]" => "[kv_field][PanOSSourceHostname]" }
                 rename => { "[PanOSSourceMac]" => "[kv_field][PanOSSourceMac]" }
                 rename => { "[PanOSSourceRegion]" => "[kv_field][PanOSSourceRegion]" }
                 rename => { "[PanOSSourceUserName]" => "[kv_field][PanOSSourceUserName]" }
                 rename => { "[PanOSSourceUUID]" => "[kv_field][PanOSSourceUUID]" }
                 rename => { "[PanOSSrcUUID]" => "[kv_field][PanOSSrcUUID]" }
                 rename => { "[PanOSSSLResponseTime]" => "[kv_field][PanOSSSLResponseTime]" }
                 rename => { "[PanOSStage]" => "[kv_field][PanOSStage]" }
                 rename => { "[PanOSTagName]" => "[kv_field][PanOSTagName]" }
                 rename => { "[PanOSThreatCategory]" => "[kv_field][PanOSThreatCategory]" }
                 rename => { "[PanOSTimeGeneratedHighResolution]" => "[kv_field][PanOSTimeGeneratedHighResolution]" }
                 rename => { "[PanOSTimeNotAfter]" => "[kv_field][PanOSTimeNotAfter]" }
                 rename => { "[PanOSTimeNotBefore]" => "[kv_field][PanOSTimeNotBefore]" }
                 rename => { "[PanOSTimeout]" => "[kv_field][PanOSTimeout]" }
                 rename => { "[PanOSTimeReceivedManagementPlane]" => "[kv_field][PanOSTimeReceivedManagementPlane]" }
                 rename => { "[PanOSTLSAuth]" => "[kv_field][PanOSTLSAuth]" }
                 rename => { "[PanOSTLSEncryptionAlgorithm]" => "[kv_field][PanOSTLSEncryptionAlgorithm]" }
                 rename => { "[PanOSTLSKeyExchange]" => "[kv_field][PanOSTLSKeyExchange]" }
                 rename => { "[PanOSTLSVersion]" => "[kv_field][PanOSTLSVersion]" }
                 rename => { "[PanOSTrafficOriginRegion]" => "[kv_field][PanOSTrafficOriginRegion]" }
                 rename => { "[PanOSTrafficSessionID]" => "[kv_field][PanOSTrafficSessionID]" }
                 rename => { "[PanOSTunneInspectionRule]" => "[kv_field][PanOSTunneInspectionRule]" }
                 rename => { "[PanOSTunnel]" => "[kv_field][PanOSTunnel]" }
                 rename => { "[PanOSTunnelEndptID1]" => "[kv_field][PanOSTunnelEndptID1]" }
                 rename => { "[PanOSTunnelEndptID2]" => "[kv_field][PanOSTunnelEndptID2]" }
                 rename => { "[PanOSTunnelFragment]" => "[kv_field][PanOSTunnelFragment]" }
                 rename => { "[PanOSTunnelID]" => "[kv_field][PanOSTunnelID]" }
                 rename => { "[PanOSTunnelInspectionRule]" => "[kv_field][PanOSTunnelInspectionRule]" }
                 rename => { "[PanOSTunnelType]" => "[kv_field][PanOSTunnelType]" }
                 rename => { "[PanOSUGFlags]" => "[kv_field][PanOSUGFlags]" }
                 rename => { "[PanOSURLCatList]" => "[kv_field][PanOSURLCatList]" }
                 rename => { "[PanOSUserBySource]" => "[kv_field][PanOSUserBySource]" }
                 rename => { "[PanOSVirtualSystem]" => "[kv_field][PanOSVirtualSystem]" }
                 rename => { "[PanOSVsysName]" => "[kv_field][PanOSVsysName]" }
                 rename => { "[PanOSXForwarderfor]" => "[kv_field][PanOSXForwarderfor]" }
                 rename => { "[PanPartialHash]" => "[kv_field][PanPartialHash]" }
                 rename => { "[PanPODName]" => "[kv_field][PanPODName]" }
                 rename => { "[PanPODNamespace]" => "[kv_field][PanPODNamespace]" }
                 rename => { "[PanPolicyID]" => "[kv_field][PanPolicyID]" }
                 rename => { "[PanReasonFilteringAction]" => "[kv_field][PanReasonFilteringAction]" }
                 rename => { "[PanSDWANCluster]" => "[kv_field][PanSDWANCluster]" }
                 rename => { "[PanSDWANClustype]" => "[kv_field][PanSDWANClustype]" }
                 rename => { "[PanSDWANDevice]" => "[kv_field][PanSDWANDevice]" }
                 rename => { "[PanSDWANSite]" => "[kv_field][PanSDWANSite]" }
                 rename => { "[PanSrcDAG]" => "[kv_field][PanSrcDAG]" }
                 rename => { "[PanSrcDeviceCat]" => "[kv_field][PanSrcDeviceCat]" }
                 rename => { "[PanSrcDeviceModel]" => "[kv_field][PanSrcDeviceModel]" }
                 rename => { "[PanSrcDeviceOS]" => "[kv_field][PanSrcDeviceOS]" }
                 rename => { "[PanSrcDeviceOSv]" => "[kv_field][PanSrcDeviceOSv]" }
                 rename => { "[PanSrcDeviceProf]" => "[kv_field][PanSrcDeviceProf]" }
                 rename => { "[PanSrcDeviceVendor]" => "[kv_field][PanSrcDeviceVendor]" }
                 rename => { "[PanSrcEDL]" => "[kv_field][PanSrcEDL]" }
                 rename => { "[PanSrcHostname]" => "[kv_field][PanSrcHostname]" }
                 rename => { "[PanSrcMac]" => "[kv_field][PanSrcMac]" }
                 rename => { "[PanTimeHighRes]" => "[kv_field][PanTimeHighRes]" }
                 rename => { "[PanXFFIP]" => "[kv_field][PanXFFIP]" }
                 rename => { "[proto]" => "[kv_field][proto]" }
                 rename => { "[reason]" => "[kv_field][reason]" }
                 rename => { "[request]" => "[kv_field][request]" }
                 rename => { "[requestClientApplication]" => "[kv_field][requestClientApplication]" }
                 rename => { "[requestContext]" => "[kv_field][requestContext]" }
                 rename => { "[requestMethod]" => "[kv_field][requestMethod]" }
                 rename => { "[rt]" => "[kv_field][rt]" }
                 rename => { "[shost]" => "[kv_field][shost]" }
                 rename => { "[sourceTranslatedAddress]" => "[kv_field][sourceTranslatedAddress]" }
                 rename => { "[sourceTranslatedPort]" => "[kv_field][sourceTranslatedPort]" }
                 rename => { "[spt]" => "[kv_field][spt]" }
                 rename => { "[src]" => "[kv_field][src]" }
                 rename => { "[start]" => "[kv_field][start]" }
                 rename => { "[suid]" => "[kv_field][suid]" }
                 rename => { "[suser]" => "[kv_field][suser]" }
                }
              }
#......................................................................#
#Add standard fields to the tree structure
#......................................................................#
        mutate {
          #Rename the fileds
          rename => { "[embDeviceVendor]" => "[kv_field][embDeviceVendor]" }
          rename => { "[embDeviceProduct]" => "[kv_field][embDeviceProduct]" }
          rename => { "[format_version]" => "[kv_field][format_version]" }
          rename => { "[format_type]" => "[kv_field][format_type]" }
          rename => { "[embDeviceVersion]" => "[kv_field][embDeviceVersion]" }
          rename => { "[priority]" => "[kv_field][priority]" }
          rename => { "[severity]" => "[kv_field][severity]" }
          rename => { "[pa_sender_sw_version]" => "[kv_field][pa_sender_sw_version]" }
          rename => { "[pa_subtype]" => "[kv_field][pa_subtype]" }
          rename => { "[pa_type]" => "[kv_field][pa_type]" }
          rename => { "[pa_threatid]" => "[kv_field][pa_threatid]" }
          rename => { "[pa_result]" => "[kv_field][pa_result]" }
          rename => { "[pa_matchtype]" => "[kv_field][pa_matchtype]" }
          rename => { "[pa_category]" => "[kv_field][pa_category]" }
          rename => { "[message]" => "[kv_field][message]" }
        }

#......................................................................#
#Correlation standard fields
#......................................................................#
    #src can be in multiple fields
    if [kv_field][src] {
        mutate {
          rename => { "[kv_field][src]" => "[kv_field][src_ip]" }
        }
    }

        mutate {
          rename => { "[kv_field][dst]" => "[kv_field][dest_ip]" }
          rename => { "[kv_field][spt]" => "[kv_field][src_port]" }
          rename => { "[kv_field][dpt]" => "[kv_field][dest_port]" }
        }
#......................................................................#
#Generate UTM ACTION field when connection established
#......................................................................#
    #Traffic
    if ([kv_field][pa_type] and [kv_field][pa_subtype]) 
    and ( [kv_field][pa_type] == "TRAFFIC" and ([kv_field][pa_subtype]=~/(START|END|start|end)/)  ) 
    and ([kv_field][act] and [kv_field][act] =~/^(allow|reset-client|reset-server|reset-both)$/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #URL Threat
    } else if ( [kv_field][pa_type] and [kv_field][pa_subtype]) 
    and ( [kv_field][pa_type] == "THREAT" and [kv_field][pa_subtype] =~/(URL|url)/ 
    and ([kv_field][act] and [kv_field][act] =~/^(allow|alert|continue|override)$/ ) ){
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #DATA Threat
    } else if ( [kv_field][pa_type] and [kv_field][pa_subtype]) 
    and ( [kv_field][pa_type] == "THREAT" and [kv_field][pa_subtype] =~/(DATA|data|DLP|dlp|dlp-non-file|FILE|file)/ 
    and ([kv_field][act] and [kv_field][act] =~/^(allow|alert|continue)$/ ) ){
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #Wildfire, is a third party analyzer, not define a connection
    } else if ( [kv_field][pa_type] and [kv_field][pa_subtype]) 
    and ( [kv_field][pa_type] == "THREAT" and [kv_field][pa_subtype] =~/(WILDFIRE|wildfire)/ ){
      
    #General Threat
    } else if ( [kv_field][pa_type] and [kv_field][pa_threatid]) and ( [kv_field][pa_type] == "THREAT" ) 
    and ([kv_field][act] and [kv_field][act] =~/^(alert|allow|reset-client|reset-server|reset-both|continue)$/ ){
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      } 
    #Config
    } else if ( [kv_field][pa_type] ) and ( [kv_field][pa_type] =~/(CONFIG|config)/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      } 
    #System, not enough info
    } else if ( [kv_field][pa_type] ) and ( [kv_field][pa_type] =~/(SYSTEM|system)/ ) { 
    #HIP-MATCH, are rules, dont seems to be a connection
    } else if ( [kv_field][pa_type] ) and ( [kv_field][pa_type] =~/(HIP-MATCH|hip-match)/ ) {
    #Authentication, not enough info needs validation of msg values
    } else if ( [kv_field][pa_type]) and ( [kv_field][pa_type]  =~/(AUTHENTICATION|authentication)/ ) 
    and ([kv_field][msg] and [kv_field][msg] =~/(Allow|allow|Success|success)/ ){
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #USERID, enables you to identify all users on your network, are known users so is always a connection
    } else if ( [kv_field][pa_type]) and ( [kv_field][pa_type]  =~/(USERID|userid)/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #IPTAG, tag mapped to the source IP address, seems to be a proccess after established connection
    } else if ( [kv_field][pa_type]) and ( [kv_field][pa_type]  =~/(IPTAG|iptag)/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #Tunnel
    } else if ( [kv_field][pa_type] and [kv_field][pa_subtype]) 
    and ( [kv_field][pa_type]  =~/(START|start|END|end)/ ) 
    and ( [kv_field][pa_subtype]  =~/(START|start|END|end)/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #CORRELATION, seems to be logs for kind of threats detected
    } else if ( [kv_field][pa_type]) 
    and ( [kv_field][pa_type]  =~/(CORRELATION|correlation)/ ) {
      
    #GTP
    } else if ( [kv_field][pa_type] and [kv_field][pa_subtype]) 
    and ( [kv_field][pa_type]  =~/(GTP|gtp)/ ) 
    and ( [kv_field][pa_subtype]  =~/(START|start|END|end)/ ) 
    and ([kv_field][act] and [kv_field][act] =~/^(allow|Allow)$/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #SCTP
    } else if ( [kv_field][pa_type] ) 
    and ( [kv_field][pa_type]  =~/(SCTP|sctp)/ ) 
    and ([kv_field][act] and [kv_field][act] =~/^(allow|Allow)$/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #GLOBALPROTECT
    } else if ( [kv_field][pa_type] ) and ( [kv_field][pa_type]  =~/(GLOBALPROTECT|globalprotect)/ ) 
    and (([kv_field][PanOSLoginDuration] and [kv_field][PanOSLoginDuration] != "0") or ![kv_field][PanOSLoginDuration]) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    #Decryption
    } else if ( [kv_field][pa_type] ) and ( [kv_field][pa_type]  =~/(DECRYPTION|decryption)/ ) 
    and ([kv_field][act] and [kv_field][act] =~/^(allow|reset-client|reset-server|reset-both)$/ ) {
      mutate {
        add_field => { "[logx][utm][action]" => "Success" }
      }
    }
    
#......................................................................#
#Set null the fields with de X0X value (default string for null), and replace simple and double quotation
#also generate logx tree structure dynamically
          if [kv_field] {
            ruby {
                code => '
                    event.get("[kv_field]").each do |k, v|
                          if (v == "X0X") 
                            event.set("[logx][paloalto_fw][#{k}]",nil)
                          elsif (k=~/(\W)$/)
                              event.remove(k)
                          elsif !(v.kind_of?(Array))
                              new_v = v.to_s.gsub(/\"/, "")
                              new_v = new_v.gsub(/\'/, "")
                              event.set("[logx][paloalto_fw][#{k}]",new_v)
                          else
                              event.set("[logx][paloalto_fw][#{k}]",v)
                          end
                       end   
                    '
            }
          }
#......................................................................#
   #Finally, remove unnecessary fields
   mutate {
      remove_field => ["@version","path","tags","type","syslog_version","kv_field","FUTURE_USE",
      "not_defined","cef_or_leef_msg_all","cef_or_leef_msg","syslog_date_host","irrelevant","init_msg","csv_msg_all"]
   }
  }
 }
   #Also, remove unwanted fields if the message not match with conditions
   mutate {
      remove_field => ["original_log_message","headers"]
   }
}
