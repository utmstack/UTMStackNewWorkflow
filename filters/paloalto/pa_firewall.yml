# Palo Alto Firewall, version 3.0.0
# Based in docs and samples log provided
# Support Syslog CEF format
#
# Documentations
# 1- https://docs.paloaltonetworks.com/pan-os/10-2/pan-os-admin/monitoring/use-syslog-for-monitoring/syslog-field-descriptions
# 2- https://docs.paloaltonetworks.com/resources/cef
#
# Implementation
# 1. Parsing the RAW field containing the Palo Alto Firewall

pipeline:
  - dataTypes:
      - firewall-paloalto
    steps:

      #......................................................................#
      # Using grok to parse syslogHeader of the message
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.priority
              pattern: '\<{{.data}}\>'
            - fieldName: log.syslogVersion
              pattern: '{{.integer}}'
            - fieldName: log.deviceTime
              pattern: '{{.year}}-{{.monthNumber}}-{{.monthDay}}{{.space}}{{.time}}'
            - fieldName: log.syslogHost
              pattern: '{{.hostname}}'
            - fieldName: log.formatType
              pattern: '(CEF:)||(LEEF:)'
            - fieldName: log.formatVersion
              pattern: '(\s)?{{.integer}}'
            - fieldName: log.cefOrLeefMsgAll
              pattern: '{{.greedy}}'
          source: raw
          where:
            variables:
              - get: raw
                as: message
                ofType: string
            expression: message.contains("CEF:") || message.contains("LEEF:")

      #......................................................................#
      # Removing unnecessary characters of the syslogHeader
      #......................................................................#
      - trim:
          function: prefix
          substring: "<"
          fields:
            - log.priority
      - trim:
          function: suffix
          substring: ">"
          fields:
            - log.priority
      - trim:
          function: suffix
          substring: ":"
          fields:
            - log.formatType
      
      # ......................................................................#
      # Logs have different structure according to Firewall Log Types, so first, define Log Type
      # Using grok to parse components of the cef_message
      # ......................................................................#
      # FIREWALL LOGS 
      # ......................................................................#
      # Detect if its a Traffic log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("TRAFFIC") || cefOrLeefMsgAll.contains("traffic")

    #......................................................................#
      # Detect if its an url threat log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("THREAT") || cefOrLeefMsgAll.contains("threat") && 
                        cefOrLeefMsgAll.contains("url") || cefOrLeefMsgAll.contains("URL")

      #......................................................................#
      # Detect if its a data threat log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("THREAT") || cefOrLeefMsgAll.contains("threat") &&
                        (cefOrLeefMsgAll.contains("data") || cefOrLeefMsgAll.contains("DATA")) || 
                        cefOrLeefMsgAll.contains("DLP") || cefOrLeefMsgAll.contains("DLP-NON-FILE") || 
                        cefOrLeefMsgAll.contains("FILE")

      #......................................................................#
      # Detect if its a WildFire threat log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("THREAT") || cefOrLeefMsgAll.contains("threat") && 
                        cefOrLeefMsgAll.contains("wildfire") || cefOrLeefMsgAll.contains("WILDFIRE")

      # ......................................................................#
      # Detect if its general threat log
      # ......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("THREAT") || cefOrLeefMsgAll.contains("threat")
      
      #......................................................................#
      # Detect if its a CONFIG threat log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("CONFIG") || cefOrLeefMsgAll.contains("config")

      #......................................................................#
      # Detect if its a System log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("SYSTEM") || cefOrLeefMsgAll.contains("system")

      #......................................................................#
      # Detect if its a HIP-MATCH log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("HIP-MATCH") || cefOrLeefMsgAll.contains("hip-match")

      #......................................................................#
      # Detect if its an AUTHENTICATION log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("AUTHENTICATION") || cefOrLeefMsgAll.contains("authentication")

      #......................................................................#
      # Detect if its an USERID log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("USERID") || cefOrLeefMsgAll.contains("userid")

      #......................................................................#
      # Detect if its an IPTAG log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("IPTAG") || cefOrLeefMsgAll.contains("iptag")

      #......................................................................#
      # Detect if its an Tunnel log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("START") || cefOrLeefMsgAll.contains("start") || 
                        cefOrLeefMsgAll.contains("END") || cefOrLeefMsgAll.contains("end")

      #......................................................................#
      # Detect if its an CORRELATION log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: .cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("CORRELATION") || cefOrLeefMsgAll.contains("correlation")

      #......................................................................#
      # Detect if its an GTP log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.severity
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("GTP") || cefOrLeefMsgAll.contains("gtp")

      #......................................................................#
      # Detect if its an SCTP log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("SCTP") || cefOrLeefMsgAll.contains("sctp")

      #......................................................................#
      # Detect if its an GLOBALPROTECT log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("GLOBALPROTECT") || cefOrLeefMsgAll.contains("globalprotect")

      #......................................................................#
      # Detect if its an DECRYPTION log
      #......................................................................#
      - grok:
          patterns:
            - fieldName: log.embDeviceVendor
              pattern: '\|{{.data}}\|'
            - fieldName: log.embDeviceProduct
              pattern: '{{.data}}\|'
            - fieldName: log.paSenderSwVersion
              pattern: '{{.data}}\|'
            - fieldName: log.paType
              pattern: '{{.data}}\|'
            - fieldName: log.paSubtype
              pattern: '{{.data}}\|'
            - fieldName: log.cefOrLeefMsg
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          where:
            variables:
              - get: log.cefOrLeefMsgAll
                as: cefOrLeefMsgAll
                ofType: string
            expression: cefOrLeefMsgAll.contains("DECRYPTION") || cefOrLeefMsgAll.contains("decryption")

      #......................................................................#
      # Remove unnecessary caracters
      #......................................................................#
      - trim:
          function: prefix
          substring: '|'
          fields:
            - log.embDeviceVendor

      - trim:
          function: suffix
          substring: '|'
          fields:
            - log.embDeviceVendor
            - log.embDeviceProduct
            - log.paSenderSwVersion
            - log.paType
            - log.paSubtype
            - log.severity

      # .......................................................................#
      # Using grok to parse kv indiduals fields
      # .......................................................................#
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(act=)'
            - fieldName: log.act
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(anOSTimeGeneratedHighResolution=)'
            - fieldName: log.anOSTimeGeneratedHighResolution
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(app=)'
            - fieldName: log.app
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(c6a2=)'
            - fieldName: log.c6a2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(c6a2Label=)'
            - fieldName: log.c6a2Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cat=)'
            - fieldName: log.cat
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp1=)'
            - fieldName: log.cfp1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp1Label=)'
            - fieldName: log.cfp1Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp2=)'
            - fieldName: log.cfp2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp2Label=)'
            - fieldName: log.cfp2Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp3=)'
            - fieldName: log.cfp3
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp3Label=)'
            - fieldName: log.cfp3Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp4=)'
            - fieldName: log.cfp4
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cfp4Label=)'
            - fieldName: log.cfp4Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn1=)'
            - fieldName: log.cn1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn2=)'
            - fieldName: log.cn2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn2Label=)'
            - fieldName: log.cn2Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn3=)'
            - fieldName: log.cn3
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn3Label=)'
            - fieldName: log.cn3Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn4=)'
            - fieldName: log.cn4
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn4Label=)'
            - fieldName: log.cn4Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn5=)'
            - fieldName: log.cn5
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn5Label=)'
            - fieldName: log.cn5Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cn6=)'
            - fieldName: log.cn6
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cnt=)'
            - fieldName: log.cnt
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs1=)'
            - fieldName: log.cs1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs1Label=)'
            - fieldName: log.cs1Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs2=)'
            - fieldName: log.cs2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs2Label=)'
            - fieldName: log.cs2Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs3=)'
            - fieldName: log.cs3
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs3Label=)'
            - fieldName: log.cs3Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs4=)'
            - fieldName: log.cs4
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs5=)'
            - fieldName: log.cs5
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs5Label=)'
            - fieldName: log.cs5Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs6=)'
            - fieldName: log.cs6
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(cs6Label=)'
            - fieldName: log.cs6Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(destinationServiceName=)'
            - fieldName: log.destinationServiceName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(destinationTranslatedAddress=)'
            - fieldName: log.destinationTranslatedAddress
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(destinationTranslatedPort=)'
            - fieldName: log.destinationTranslatedPort
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(deviceExternalId=)'
            - fieldName: log.deviceExternalId
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(deviceInboundInterface=)'
            - fieldName: log.deviceInboundInterface
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(deviceOutboundInterface=)'
            - fieldName: log.deviceOutboundInterface
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(dpt=)'
            - fieldName: log.dpt
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(dst=)'
            - fieldName: log.dst
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(duid=)'
            - fieldName: log.duid
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(duser=)'
            - fieldName: log.duser
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(dvchost=)'
            - fieldName: log.dvchost
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(end=)'
            - fieldName: log.end
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(externalId=)'
            - fieldName: log.externalId
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(fileHash=)'
            - fieldName: log.fileHash
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(fileId=)'
            - fieldName: log.fileId
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(filePath=)'
            - fieldName: log.filePath
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(fileType=)'
            - fieldName: log.fileType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flags=)'
            - fieldName: log.flags
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexNumber1=)'
            - fieldName: log.flexNumber1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexNumber1Label=)'
            - fieldName: log.flexNumber1Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexNumber2=)'
            - fieldName: log.flexNumber2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexNumber2Label=)'
            - fieldName: log.flexNumber2Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexString1=)'
            - fieldName: log.flexString1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexString1Label=)'
            - fieldName: log.flexString1Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexString2=)'
            - fieldName: log.flexString2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(flexString2Label=)'
            - fieldName: log.flexString2Label
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(fname=)'
            - fieldName: log.fname
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(in=)'
            - fieldName: log.in
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(msg=)'
            - fieldName: log.msg
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(oldFileId=)'
            - fieldName: log.oldFileId
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panASServiceDiff=)'
            - fieldName: log.panASServiceDiff
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panASServiceType=)'
            - fieldName: log.panASServiceType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panContainerName=)'
            - fieldName: log.panContainerName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDomainEDL=)'
            - fieldName: log.panDomainEDL
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDAG=)'
            - fieldName: log.panDstDAG
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDeviceCat=)'
            - fieldName: log.panDstDeviceCat
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDeviceModel=)'
            - fieldName: log.panDstDeviceModel
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDeviceOS=)'
            - fieldName: log.panDstDeviceOS
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDeviceOSv=)'
            - fieldName: log.panDstDeviceOSv
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDeviceProf=)'
            - fieldName: log.panDstDeviceProf
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstDeviceVendor=)'
            - fieldName: log.panDstDeviceVendor
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstEDL=)'
            - fieldName: log.panDstEDL
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstHostname=)'
            - fieldName: log.panDstHostname
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDstMac=)'
            - fieldName: log.panDstMac
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panDynamicUsrgrp=)'
            - fieldName: log.panDynamicUsrgrp
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panEPSerial=)'
            - fieldName: log.panEPSerial
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panGPHostID=)'
            - fieldName: log.panGPHostID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panHASessionOwner=)'
            - fieldName: log.panHASessionOwner
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panJustification=)'
            - fieldName: log.panJustification
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panLinkChange=)'
            - fieldName: log.panLinkChange
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panLinkDetail=)'
            - fieldName: log.panLinkDetail
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSActionFlags=)'
            - fieldName: log.panOSActionFlags
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSAPName=)'
            - fieldName: log.panOSAPName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSAreaCode=)'
            - fieldName: log.panOSAreaCode
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSAssocID=)'
            - fieldName: log.panOSAssocID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSAttemptedGateways=)'
            - fieldName: log.panOSAttemptedGateways
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSAuthMethod=)'
            - fieldName: log.panOSAuthMethod
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCellID=)'
            - fieldName: log.panOSCellID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCertificateFlags=)'
            - fieldName: log.panOSCertificateFlags
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCertificateSerial=)'
            - fieldName: log.panOSCertificateSerial
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCertificateSize=)'
            - fieldName: log.panOSCertificateSize
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCertificateVersion=)'
            - fieldName: log.panOSCertificateVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSChainStatus=)'
            - fieldName: log.panOSChainStatus
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSChunkType=)'
            - fieldName: log.panOSChunkType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSClientToFirewall=)'
            - fieldName: log.panOSClientToFirewall
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCommonName=)'
            - fieldName: log.panOSCommonName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCommonNameLength=)'
            - fieldName: log.panOSCommonNameLength
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSConfigVersion=)'
            - fieldName: log.panOSConfigVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSConnectionError=)'
            - fieldName: log.panOSConnectionError
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSConnectionErrorID=)'
            - fieldName: log.panOSConnectionErrorID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSConnectionMethod=)'
            - fieldName: log.panOSConnectionMethod
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSContainerID=)'
            - fieldName: log.panOSContainerID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSContainerName=)'
            - fieldName: log.panOSContainerName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
        patterns:
          - fieldName: log.irrelevant
            pattern: '{{.data}}(panOSContainerNameSpace=)'
          - fieldName: log.panOSContainerNameSpace
            pattern: '{{.data}}({{.word}}=)'
          - fieldName: log.irrelevant
            pattern: '{{.greedy}}'
        source: log.cefOrLeefMsgAll
        
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSContentVer=)'
            - fieldName: log.panOSContentVer
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSCountOfRepeats=)'
            - fieldName: log.panOSCountOfRepeats
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDataSourceName=)'
            - fieldName: log.panOSDataSourceName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDataSourceSubType=)'
            - fieldName: log.panOSDataSourceSubType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDataSourceType=)'
            - fieldName: log.panOSDataSourceType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDesc=)'
            - fieldName: log.panOSDesc
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDescription=)'
            - fieldName: log.panOSDescription
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceCategory=)'
            - fieldName: log.panOSDestinationDeviceCategory
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceHost=)'
            - fieldName: log.panOSDestinationDeviceHost
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceMac=)'
            - fieldName: log.panOSDestinationDeviceMac
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceModel=)'
            - fieldName: log.panOSDestinationDeviceModel
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceOSFamily=)'
            - fieldName: log.panOSDestinationDeviceOSFamily
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceOSVersion=)'
            - fieldName: log.panOSDestinationDeviceOSVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceProfile=)'
            - fieldName: log.panOSDestinationDeviceProfile
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDeviceVendor=)'
            - fieldName: log.panOSDestinationDeviceVendor
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationDynamicAddressGroup=)'
            - fieldName: log.panOSDestinationDynamicAddressGroup
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationEDL=)'
            - fieldName: log.panOSDestinationEDL
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDestinationUUID=)'
            - fieldName: log.panOSDestinationUUID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDeviceSN=)'
            - fieldName: log.panOSDeviceSN
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
        patterns:
          - fieldName: log.irrelevant
            pattern: '{{.data}}(panOSDGl1=)'
          - fieldName: log.panOSDGl1
            pattern: '{{.data}}({{.word}}=)'
          - fieldName: log.irrelevant
            pattern: '{{.greedy}}'
        source: log.cefOrLeefMsgAll
    
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDGl2=)'
            - fieldName: log.panOSDGl2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDGl3=)'
            - fieldName: log.panOSDGl3
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDGl4=)'
            - fieldName: log.panOSDGl4
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDiameterApp=)'
            - fieldName: log.panOSDiameterApp
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDiameterAVPCode=)'
            - fieldName: log.panOSDiameterAVPCode
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDiameterCmdCode=)'
            - fieldName: log.panOSDiameterCmdCode
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSDstUUID=)'
            - fieldName: log.panOSDstUUID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEllipticCurve=)'
            - fieldName: log.panOSEllipticCurve
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEndpointDeviceName=)'
            - fieldName: log.panOSEndpointDeviceName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEndpointMac=)'
            - fieldName: log.panOSEndpointMac
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEndpointOSType=)'
            - fieldName: log.panOSEndpointOSType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEndpointOSVersion=)'
            - fieldName: log.panOSEndpointOSVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEndpointSerialNumber=)'
            - fieldName: log.panOSEndpointSerialNumber
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEndUserIP=)'
            - fieldName: log.panOSEndUserIP
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSErrorIndex=)'
            - fieldName: log.panOSErrorIndex
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSErrorMessage=)'
            - fieldName: log.panOSErrorMessage
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEventID=)'
            - fieldName: log.panOSEventID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSEventStatus=)'
            - fieldName: log.panOSEventStatus
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSFingerprint=)'
            - fieldName: log.panOSFingerprint
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSFirewallToServer=)'
            - fieldName: log.panOSFirewallToServer
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSFWDeviceGroup=)'
            - fieldName: log.panOSFWDeviceGroup
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGateway=)'
            - fieldName: log.panOSGateway
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGatewayPriority=)'
            - fieldName: log.panOSGatewayPriority
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGatewaySelectionType=)'
            - fieldName: log.panOSGatewaySelectionType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGlobalProtectClientVersion=)'
            - fieldName: log.panOSGlobalProtectClientVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGPGatewayLocation=)'
            - fieldName: log.panOSGPGatewayLocation
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGTPCause=)'
            - fieldName: log.panOSGTPCause
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGTPEventCode=)'
            - fieldName: log.panOSGTPEventCode
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGTPEventType=)'
            - fieldName: log.panOSGTPEventType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGTPInterface=)'
            - fieldName: log.panOSGTPInterface
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSGTPMsgType=)'
            - fieldName: log.panOSGTPMsgType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSHostID=)'
            - fieldName: log.panOSHostID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSHTTP2Con=)'
            - fieldName: log.panOSHTTP2Con
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSHTTPHeader=)'
            - fieldName: log.panOSHTTPHeader
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSHTTPUserAgent=)'
            - fieldName: log.panOSHTTPUserAgent
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSIssuerCommonName=)'
            - fieldName: log.panOSIssuerCommonName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSIssuerNameLength=)'
            - fieldName: log.panOSIssuerNameLength
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSLoginDuration=)'
            - fieldName: log.panOSLoginDuration
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSLogTimeStamp=)'
            - fieldName: log.panOSLogTimeStamp
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSLogTypeSeqNo=)'
            - fieldName: log.panOSLogTypeSeqNo
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSMonitorTag=)'
            - fieldName: log.panOSMonitorTag
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSMSISDN=)'
            - fieldName: log.panOSMSISDN
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSOpCode=)'
            - fieldName: log.panOSOpCode
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPacketsReceived=)'
            - fieldName: log.panOSPacketsReceived
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPacketsSent=)'
            - fieldName: log.panOSPacketsSent
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSParentSessionID=)'
            - fieldName: log.panOSParentSessionID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSParentStartTime=)'
            - fieldName: log.panOSParentStartTime
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPayloadProtID=)'
            - fieldName: log.panOSPayloadProtID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPcapID=)'
            - fieldName: log.panOSPcapID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPolicyAuditComment=)'
            - fieldName: log.panOSPolicyAuditComment
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPolicyName=)'
            - fieldName: log.panOSPolicyName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPortal=)'
            - fieldName: log.panOSPortal
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPPID=)'
            - fieldName: log.panOSPPID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
        
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPrivateIPv4=)'
            - fieldName: log.panOSPrivateIPv4
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPrivateIPv6=)'
            - fieldName: log.panOSPrivateIPv6
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSProxyType=)'
            - fieldName: log.panOSProxyType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPublicIPv4=)'
            - fieldName: log.panOSPublicIPv4
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSPublicIPv6=)'
            - fieldName: log.panOSPublicIPv6
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSQuarantineReason=)'
            - fieldName: log.panOSQuarantineReason
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRadioTech=)'
            - fieldName: log.panOSRadioTech
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSReferer=)'
            - fieldName: log.panOSReferer
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRmtUserID=)'
            - fieldName: log.panOSRmtUserID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRmtUserIP=)'
            - fieldName: log.panOSRmtUserIP
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRootCNLength=)'
            - fieldName: log.panOSRootCNLength
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRootCommonName=)'
            - fieldName: log.panOSRootCommonName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRootStatus=)'
            - fieldName: log.panOSRootStatus
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSRuleUUID=)'
            - fieldName: log.panOSRuleUUID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCCPCallingGT=)'
            - fieldName: log.panOSSCCPCallingGT
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCCPCallingPartySSN=)'
            - fieldName: log.panOSSCCPCallingPartySSN
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPAssocEndReason=)'
            - fieldName: log.panOSSCTPAssocEndReason
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPAssocID=)'
            - fieldName: log.panOSSCTPAssocID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPCauseCode=)'
            - fieldName: log.panOSSCTPCauseCode
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPChunkRcv=)'
            - fieldName: log.panOSSCTPChunkRcv
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPChunks=)'
            - fieldName: log.panOSSCTPChunks
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPChunkSent=)'
            - fieldName: log.panOSSCTPChunkSent
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPChunksRcv=)'
            - fieldName: log.panOSSCTPChunksRcv
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPFilter=)'
            - fieldName: log.panOSSCTPFilter
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPStreamID=)'
            - fieldName: log.panOSSCTPStreamID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
      
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPVerTag1=)'
            - fieldName: log.panOSSCTPVerTag1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSCTPVerTag2=)'
            - fieldName: log.panOSSCTPVerTag2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSequenceNo=)'
            - fieldName: log.panOSSequenceNo
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSServerNameIndication=)'
            - fieldName: log.panOSServerNameIndication
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSServingCntryMCC=)'
            - fieldName: log.panOSServingCntryMCC
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSServingNetMNC=)'
            - fieldName: log.panOSServingNetMNC
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSeverity=)'
            - fieldName: log.panOSSeverity
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSNILength=)'
            - fieldName: log.panOSSNILength
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceCategory=)'
            - fieldName: log.panOSSourceDeviceCategory
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceHost=)'
            - fieldName: log.panOSSourceDeviceHost
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceMac=)'
            - fieldName: log.panOSSourceDeviceMac
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceModel=)'
            - fieldName: log.panOSSourceDeviceModel
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceOSFamily=)'
            - fieldName: log.panOSSourceDeviceOSFamily
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceOSVersion=)'
            - fieldName: log.panOSSourceDeviceOSVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceProfile=)'
            - fieldName: log.panOSSourceDeviceProfile
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDeviceVendor=)'
            - fieldName: log.panOSSourceDeviceVendor
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceDynamicAddressGroup=)'
            - fieldName: log.panOSSourceDynamicAddressGroup
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceEDL=)'
            - fieldName: log.panOSSourceEDL
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceHostname=)'
            - fieldName: log.panOSSourceHostname
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceMac=)'
            - fieldName: log.panOSSourceMac
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceRegion=)'
            - fieldName: log.panOSSourceRegion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceUserName=)'
            - fieldName: log.panOSSourceUserName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSourceUUID=)'
            - fieldName: log.panOSSourceUUID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSrcUUID=)'
            - fieldName: log.panOSSrcUUID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSSSLResponseTime=)'
            - fieldName: log.panOSSSLResponseTime
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSStage=)'
            - fieldName: log.panOSStage
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTagName=)'
            - fieldName: log.panOSTagName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSThreatCategory=)'
            - fieldName: log.panOSThreatCategory
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTimeGeneratedHighResolution=)'
            - fieldName: log.panOSTimeGeneratedHighResolution
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTimeNotAfter=)'
            - fieldName: log.panOSTimeNotAfter
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTimeNotBefore=)'
            - fieldName: log.panOSTimeNotBefore
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTimeout=)'
            - fieldName: log.panOSTimeout
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTimeReceivedManagementPlane=)'
            - fieldName: log.panOSTimeReceivedManagementPlane
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTLSAuth=)'
            - fieldName: log.panOSTLSAuth
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTLSEncryptionAlgorithm=)'
            - fieldName: log.panOSTLSEncryptionAlgorithm
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTLSKeyExchange=)'
            - fieldName: log.panOSTLSKeyExchange
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTLSVersion=)'
            - fieldName: log.panOSTLSVersion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTrafficOriginRegion=)'
            - fieldName: log.panOSTrafficOriginRegion
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTrafficSessionID=)'
            - fieldName: log.panOSTrafficSessionID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunneInspectionRule=)'
            - fieldName: log.panOSTunneInspectionRule
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnel=)'
            - fieldName: log.panOSTunnel
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnelEndptID1=)'
            - fieldName: log.panOSTunnelEndptID1
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnelEndptID2=)'
            - fieldName: log.panOSTunnelEndptID2
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnelFragment=)'
            - fieldName: log.panOSTunnelFragment
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnelID=)'
            - fieldName: log.panOSTunnelID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnelInspectionRule=)'
            - fieldName: log.panOSTunnelInspectionRule
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSTunnelType=)'
            - fieldName: log.panOSTunnelType
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSUGFlags=)'
            - fieldName: log.panOSUGFlags
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSURLCatList=)'
            - fieldName: log.panOSURLCatList
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSUserBySource=)'
            - fieldName: log.panOSUserBySource
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSVirtualSystem=)'
            - fieldName: log.panOSVirtualSystem
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSVsysName=)'
            - fieldName: log.panOSVsysName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panOSXForwarderfor=)'
            - fieldName: log.panOSXForwarderfor
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panPartialHash=)'
            - fieldName: log.panPartialHash
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panPODName=)'
            - fieldName: log.panPODName
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panPODNamespace=)'
            - fieldName: log.panPODNamespace
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panPolicyID=)'
            - fieldName: log.panPolicyID
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panReasonFilteringAction=)'
            - fieldName: log.panReasonFilteringAction
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSDWANCluster=)'
            - fieldName: log.panSDWANCluster
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSDWANClustype=)'
            - fieldName: log.panSDWANClustype
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSDWANDevice=)'
            - fieldName: log.panSDWANDevice
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSDWANSite=)'
            - fieldName: log.panSDWANSite
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll   
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDAG=)'
            - fieldName: log.panSrcDAG
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDeviceCat=)'
            - fieldName: log.panSrcDeviceCat
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDeviceModel=)'
            - fieldName: log.panSrcDeviceModel
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDeviceOS=)'
            - fieldName: log.panSrcDeviceOS
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDeviceOSv=)'
            - fieldName: log.panSrcDeviceOSv
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDeviceProf=)'
            - fieldName: log.panSrcDeviceProf
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcDeviceVendor=)'
            - fieldName: log.panSrcDeviceVendor
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
        
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcEDL=)'
            - fieldName: log.panSrcEDL
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
        
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcHostname=)'
            - fieldName: log.panSrcHostname
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panSrcMac=)'
            - fieldName: log.panSrcMac
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panTimeHighRes=)'
            - fieldName: log.panTimeHighRes
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
        
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(panXFFIP=)'
            - fieldName: log.panXFFIP
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(proto=)'
            - fieldName: log.proto
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(reason=)'
            - fieldName: log.reason
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(request=)'
            - fieldName: log.request
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(requestContext=)'
            - fieldName: log.requestContext
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(requestMethod=)'
            - fieldName: log.requestMethod
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(rt=)'
            - fieldName: log.rt
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(shost=)'
            - fieldName: log.shost
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
            
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(sourceTranslatedAddress=)'
            - fieldName: log.sourceTranslatedAddress
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(sourceTranslatedPort=)'
            - fieldName: log.sourceTranslatedPort
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(spt=)'
            - fieldName: log.spt
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(src=)'
            - fieldName: log.src
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(start=)'
            - fieldName: log.start
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(suid=)'
            - fieldName: log.suid
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll
          
      - grok:
          patterns:
            - fieldName: log.irrelevant
              pattern: '{{.data}}(suser=)'
            - fieldName: log.suser
              pattern: '{{.data}}({{.word}}=)'
            - fieldName: log.irrelevant
              pattern: '{{.greedy}}'
          source: log.cefOrLeefMsgAll

      # .................................................#
      # Applying grok to remove unnecessary data
      # .................................................#
      - grok:
          patterns:
            - fieldName: log.act
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.act

      - grok:
          patterns:
            - fieldName: log.anOSTimeGeneratedHighResolution
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.anOSTimeGeneratedHighResolution

      - grok:
          patterns:
            - fieldName: log.app
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.app

      - grok:
          patterns:
            - fieldName: log.c6a2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.c6a2

      - grok:
          patterns:
            - fieldName: log.cat
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cat

      - grok:
          patterns:
            - fieldName: log.cfp1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp1

      - grok:
          patterns:
            - fieldName: log.cfp1Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp1Label

      - grok:
          patterns:
            - fieldName: log.cfp2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp2

      - grok:
          patterns:
            - fieldName: log.cfp2Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp2Label

      - grok:
          patterns:
            - fieldName: log.cfp3
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp3

      - grok:
          patterns:
            - fieldName: log.cfp3Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp3Label

      - grok:
          patterns:
            - fieldName: log.cfp4
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cfp4

      - grok:
          patterns:
            - fieldName: log.cn1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn1

      - grok:
          patterns:
            - fieldName: log.cn1Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn1Label

      - grok:
          patterns:
            - fieldName: log.cn2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn2

      - grok:
          patterns:
            - fieldName: log.cn2Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn2Label

      - grok:
          patterns:
            - fieldName: log.cn3
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn3

      - grok:
          patterns:
            - fieldName: log.cn3Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn3Label

      - grok:
          patterns:
            - fieldName: log.cn4
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn4

      - grok:
          patterns:
            - fieldName: log.cn4Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn4Label

      - grok:
          patterns:
            - fieldName: log.cn5
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn5

      - grok:
          patterns:
            - fieldName: log.cn5Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn5Label

      - grok:
          patterns:
            - fieldName: log.cn6
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn6

      - grok:
          patterns:
            - fieldName: log.cn6Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cn6Label

      - grok:
          patterns:
            - fieldName: log.cnt
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cnt

      - grok:
          patterns:
            - fieldName: log.cs1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs1

      - grok:
          patterns:
            - fieldName: log.cs1Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs1Label

      - grok:
          patterns:
            - fieldName: log.cs2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs2

      - grok:
          patterns:
            - fieldName: log.cs2Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs2Label

      - grok:
          patterns:
            - fieldName: log.cs3
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs3

      - grok:
          patterns:
            - fieldName: log.cs3Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs3Label

      - grok:
          patterns:
            - fieldName: log.cs4
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs4

      - grok:
          patterns:
            - fieldName: log.cs4Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs4Label

      - grok:
          patterns:
            - fieldName: log.cs5
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs5

      - grok:
          patterns:
            - fieldName: log.cs5Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs5Label

      - grok:
          patterns:
            - fieldName: log.cs6
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs6

      - grok:
          patterns:
            - fieldName: log.cs6Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.cs6Label

      - grok:
          patterns:
            - fieldName: log.destinationServiceName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.destinationServiceName

      - grok:
          patterns:
            - fieldName: log.destinationTranslatedAddress
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.destinationTranslatedAddress

      - grok:
          patterns:
            - fieldName: log.destinationTranslatedPort
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.destinationTranslatedPort

      - grok:
          patterns:
            - fieldName: log.deviceExternalId
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.deviceExternalId

      - grok:
          patterns:
            - fieldName: log.deviceInboundInterface
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.deviceInboundInterface

      - grok:
          patterns:
            - fieldName: log.deviceOutboundInterface
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.deviceOutboundInterface

      - grok:
          patterns:
            - fieldName: log.dpt
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.dpt

      - grok:
          patterns:
            - fieldName: log.dst
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.dst

      - grok:
          patterns:
            - fieldName: log.duid
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.duid

      - grok:
          patterns:
            - fieldName: log.duser
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.duser

      - grok:
          patterns:
            - fieldName: log.dvchost
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.dvchost

      - grok:
          patterns:
            - fieldName: log.end
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.end

      - grok:
          patterns:
            - fieldName: log.externalId
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.externalId

      - grok:
          patterns:
            - fieldName: log.fileHash
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.fileHash

      - grok:
          patterns:
            - fieldName: log.fileId
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.fileId

      - grok:
          patterns:
            - fieldName: log.filePath
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.filePath

      - grok:
          patterns:
            - fieldName: log.fileType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.fileType

      - grok:
          patterns:
            - fieldName: log.flags
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flags

      - grok:
          patterns:
            - fieldName: log.flexNumber1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexNumber1

      - grok:
          patterns:
            - fieldName: log.flexNumber1Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexNumber1Label

      - grok:
          patterns:
            - fieldName: log.flexNumber2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexNumber2

      - grok:
          patterns:
            - fieldName: log.flexNumber2Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexNumber2Label

      - grok:
          patterns:
            - fieldName: log.flexString1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexString1

      - grok:
          patterns:
            - fieldName: log.flexString1Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexString1Label

      - grok:
          patterns:
            - fieldName: log.flexString2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexString2

      - grok:
          patterns:
            - fieldName: log.flexString2Label
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.flexString2Label

      - grok:
          patterns:
            - fieldName: log.fname
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.fname

      - grok:
          patterns:
            - fieldName: log.in
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.in

      - grok:
          patterns:
            - fieldName: log.msg
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.msg

      - grok:
          patterns:
            - fieldName: log.oldFileId
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.oldFileId

      - grok:
          patterns:
            - fieldName: log.out
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.out

      - grok:
          patterns:
            - fieldName: log.panASServiceDiff
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panASServiceDiff

      - grok:
          patterns:
            - fieldName: log.panASServiceType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panASServiceType

      - grok:
          patterns:
            - fieldName: log.panContainerName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panContainerName

      - grok:
          patterns:
            - fieldName: log.panDomainEDL
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDomainEDL

      - grok:
          patterns:
            - fieldName: log.panDstDAG
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDAG

      - grok:
          patterns:
            - fieldName: log.panDstDeviceCat
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDeviceCat

      - grok:
          patterns:
            - fieldName: log.panDstDeviceModel
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDeviceModel

      - grok:
          patterns:
            - fieldName: log.panDstDeviceOS
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDeviceOS

      - grok:
          patterns:
            - fieldName: log.panDstDeviceOSv
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDeviceOSv

      - grok:
          patterns:
            - fieldName: log.panDstDeviceProf
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDeviceProf

      - grok:
          patterns:
            - fieldName: log.panDstDeviceVendor
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstDeviceVendor

      - grok:
          patterns:
            - fieldName: log.panDstEDL
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstEDL

      - grok:
          patterns:
            - fieldName: log.panDstHostname
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstHostname

      - grok:
          patterns:
            - fieldName: log.panDstMac
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDstMac

      - grok:
          patterns:
            - fieldName: log.panDynamicUsrgrp
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panDynamicUsrgrp

      - grok:
          patterns:
            - fieldName: log.panEPSerial
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panEPSerial

      - grok:
          patterns:
            - fieldName: log.panGPHostID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panGPHostID

      - grok:
          patterns:
            - fieldName: log.panHASessionOwner
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panHASessionOwner

      - grok:
          patterns:
            - fieldName: log.panJustification
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panJustification

      - grok:
          patterns:
            - fieldName: log.panLinkChange
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panLinkChange

      - grok:
          patterns:
            - fieldName: log.panLinkDetail
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panLinkDetail

      - grok:
          patterns:
            - fieldName: log.panOSActionFlags
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSActionFlags

      - grok:
          patterns:
            - fieldName: log.panOSAPName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSAPName

      - grok:
          patterns:
            - fieldName: log.panOSAreaCode
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSAreaCode

      - grok:
          patterns:
            - fieldName: log.panOSAssocID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSAssocID

      - grok:
          patterns:
            - fieldName: log.panOSAttemptedGateways
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSAttemptedGateways

      - grok:
          patterns:
            - fieldName: log.panOSAuthMethod
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSAuthMethod

      - grok:
          patterns:
            - fieldName: log.panOSCellID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCellID

      - grok:
          patterns:
            - fieldName: log.panOSCertificateFlags
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCertificateFlags

      - grok:
          patterns:
            - fieldName: log.panOSCertificateSerial
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCertificateSerial

      - grok:
          patterns:
            - fieldName: log.panOSCertificateSize
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCertificateSize

      - grok:
          patterns:
            - fieldName: log.panOSCertificateVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCertificateVersion

      - grok:
          patterns:
            - fieldName: log.panOSChainStatus
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSChainStatus

      - grok:
          patterns:
            - fieldName: log.panOSChunkType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSChunkType

      - grok:
          patterns:
            - fieldName: log.panOSClientToFirewall
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSClientToFirewall

      - grok:
          patterns:
            - fieldName: log.panOSCommonName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCommonName

      - grok:
          patterns:
            - fieldName: log.panOSCommonNameLength
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCommonNameLength

      - grok:
          patterns:
            - fieldName: log.panOSConfigVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSConfigVersion

      - grok:
          patterns:
            - fieldName: log.panOSConnectionError
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSConnectionError

      - grok:
          patterns:
            - fieldName: log.panOSConnectionErrorID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSConnectionErrorID

      - grok:
          patterns:
            - fieldName: log.panOSConnectionMethod
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSConnectionMethod

      - grok:
          patterns:
            - fieldName: log.panOSContainerID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSContainerID

      - grok:
          patterns:
            - fieldName: log.panOSContainerName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSContainerName

      - grok:
          patterns:
            - fieldName: log.panOSContainerNameSpace
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSContainerNameSpace

      - grok:
          patterns:
            - fieldName: log.panOSContentVer
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSContentVer

      - grok:
          patterns:
            - fieldName: log.panOSCountOfRepeats
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSCountOfRepeats

      - grok:
          patterns:
            - fieldName: log.panOSDataSourceName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDataSourceName

      - grok:
          patterns:
            - fieldName: log.panOSDataSourceSubType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDataSourceSubType

      - grok:
          patterns:
            - fieldName: log.panOSDataSourceType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDataSourceType

      - grok:
          patterns:
            - fieldName: log.panOSDesc
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDesc

      - grok:
          patterns:
            - fieldName: log.panOSDescription
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDescription

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceCategory
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceCategory

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceHost
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceHost

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceMac
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceMac

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceModel
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceModel

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceOSFamily
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceOSFamily

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceOSVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceOSVersion

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceProfile
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceProfile

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDeviceVendor
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDeviceVendor

      - grok:
          patterns:
            - fieldName: log.panOSDestinationDynamicAddressGroup
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationDynamicAddressGroup

      - grok:
          patterns:
            - fieldName: log.panOSDestinationEDL
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationEDL

      - grok:
          patterns:
            - fieldName: log.panOSDestinationUUID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDestinationUUID

      - grok:
          patterns:
            - fieldName: log.panOSDeviceSN
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDeviceSN

      - grok:
          patterns:
            - fieldName: log.panOSDGl1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDGl1

      - grok:
          patterns:
            - fieldName: log.panOSDGl2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDGl2

      - grok:
          patterns:
            - fieldName: log.panOSDGl3
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDGl3

      - grok:
          patterns:
            - fieldName: log.panOSDGl4
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDGl4

      - grok:
          patterns:
            - fieldName: log.panOSDiameterApp
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDiameterApp

      - grok:
          patterns:
            - fieldName: log.panOSDiameterAVPCode
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDiameterAVPCode

      - grok:
          patterns:
            - fieldName: log.panOSDiameterCmdCode
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDiameterCmdCode

      - grok:
          patterns:
            - fieldName: log.panOSDstUUID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSDstUUID

      - grok:
          patterns:
            - fieldName: log.panOSEllipticCurve
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEllipticCurve

      - grok:
          patterns:
            - fieldName: log.panOSEndpointDeviceName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEndpointDeviceName

      - grok:
          patterns:
            - fieldName: log.panOSEndpointMac
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEndpointMac

      - grok:
          patterns:
            - fieldName: log.panOSEndpointOSType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEndpointOSType

      - grok:
          patterns:
            - fieldName: log.panOSEndpointOSVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEndpointOSVersion

      - grok:
          patterns:
            - fieldName: log.panOSEndpointSerialNumber
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEndpointSerialNumber

      - grok:
          patterns:
            - fieldName: log.panOSEndUserIP
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEndUserIP

      - grok:
          patterns:
            - fieldName: log.panOSErrorIndex
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSErrorIndex

      - grok:
          patterns:
            - fieldName: log.panOSErrorMessage
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSErrorMessage

      - grok:
          patterns:
            - fieldName: log.panOSEventID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEventID

      - grok:
          patterns:
            - fieldName: log.panOSEventStatus
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSEventStatus

      - grok:
          patterns:
            - fieldName: log.panOSFingerprint
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSFingerprint

      - grok:
          patterns:
            - fieldName: log.panOSFirewallToServer
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSFirewallToServer

      - grok:
          patterns:
            - fieldName: log.panOSFWDeviceGroup
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSFWDeviceGroup

      - grok:
          patterns:
            - fieldName: log.panOSGateway
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGateway

      - grok:
          patterns:
            - fieldName: log.panOSGatewayPriority
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGatewayPriority

      - grok:
          patterns:
            - fieldName: log.panOSGatewaySelectionType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGatewaySelectionType

      - grok:
          patterns:
            - fieldName: log.panOSGlobalProtectClientVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGlobalProtectClientVersion

      - grok:
          patterns:
            - fieldName: log.panOSGPGatewayLocation
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGPGatewayLocation

      - grok:
          patterns:
            - fieldName: log.panOSGTPCause
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGTPCause

      - grok:
          patterns:
            - fieldName: log.panOSGTPEventCode
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGTPEventCode

      - grok:
          patterns:
            - fieldName: log.panOSGTPEventType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGTPEventType

      - grok:
          patterns:
            - fieldName: log.panOSGTPInterface
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGTPInterface

      - grok:
          patterns:
            - fieldName: log.panOSGTPMsgType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSGTPMsgType

      - grok:
          patterns:
            - fieldName: log.panOSHostID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSHostID

      - grok:
          patterns:
            - fieldName: log.panOSHTTP2Con
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSHTTP2Con

      - grok:
          patterns:
            - fieldName: log.panOSHTTPHeader
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSHTTPHeader

      - grok:
          patterns:
            - fieldName: log.panOSHTTPUserAgent
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSHTTPUserAgent

      - grok:
          patterns:
            - fieldName: log.panOSIssuerCommonName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSIssuerCommonName

      - grok:
          patterns:
            - fieldName: log.panOSIssuerNameLength
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSIssuerNameLength

      - grok:
          patterns:
            - fieldName: log.panOSLoginDuration
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSLoginDuration

      - grok:
          patterns:
            - fieldName: log.panOSLogTimeStamp
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSLogTimeStamp

      - grok:
          patterns:
            - fieldName: log.panOSLogTypeSeqNo
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSLogTypeSeqNo

      - grok:
          patterns:
            - fieldName: log.panOSMonitorTag
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSMonitorTag

      - grok:
          patterns:
            - fieldName: log.panOSMSISDN
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSMSISDN

      - grok:
          patterns:
            - fieldName: log.panOSOpCode
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSOpCode

      - grok:
          patterns:
            - fieldName: log.panOSPacketsReceived
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPacketsReceived

      - grok:
          patterns:
            - fieldName: log.panOSPacketsSent
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPacketsSent

      - grok:
          patterns:
            - fieldName: log.panOSParentSessionID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSParentSessionID

      - grok:
          patterns:
            - fieldName: log.panOSParentStartTime
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSParentStartTime

      - grok:
          patterns:
            - fieldName: log.panOSPayloadProtID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPayloadProtID

      - grok:
          patterns:
            - fieldName: log.panOSPcapID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPcapID

      - grok:
          patterns:
            - fieldName: log.panOSPolicyAuditComment
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPolicyAuditComment

      - grok:
          patterns:
            - fieldName: log.panOSPolicyName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPolicyName

      - grok:
          patterns:
            - fieldName: log.panOSPortal
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPortal

      - grok:
          patterns:
            - fieldName: log.panOSPPID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPPID

      - grok:
          patterns:
            - fieldName: log.panOSPrivateIPv4
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPrivateIPv4

      - grok:
          patterns:
            - fieldName: log.panOSPrivateIPv6
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPrivateIPv6

      - grok:
          patterns:
            - fieldName: log.panOSProxyType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSProxyType

      - grok:
          patterns:
            - fieldName: log.panOSPublicIPv4
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPublicIPv4

      - grok:
          patterns:
            - fieldName: log.panOSPublicIPv6
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSPublicIPv6

      - grok:
          patterns:
            - fieldName: log.panOSQuarantineReason
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSQuarantineReason

      - grok:
          patterns:
            - fieldName: log.panOSRadioTech
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRadioTech

      - grok:
          patterns:
            - fieldName: log.panOSReferer
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSReferer

      - grok:
          patterns:
            - fieldName: log.panOSRmtUserID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRmtUserID

      - grok:
          patterns:
            - fieldName: log.panOSRmtUserIP
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRmtUserIP

      - grok:
          patterns:
            - fieldName: log.panOSRootCNLength
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRootCNLength

      - grok:
          patterns:
            - fieldName: log.panOSRootCommonName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRootCommonName

      - grok:
          patterns:
            - fieldName: log.panOSRootStatus
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRootStatus

      - grok:
          patterns:
            - fieldName: log.panOSRuleUUID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSRuleUUID

      - grok:
          patterns:
            - fieldName: log.panOSSCCPCallingGT
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCCPCallingGT

      - grok:
          patterns:
            - fieldName: log.panOSSCCPCallingPartySSN
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCCPCallingPartySSN

      - grok:
          patterns:
            - fieldName: log.panOSSCTPAssocEndReason
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPAssocEndReason

      - grok:
          patterns:
            - fieldName: log.panOSSCTPAssocID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPAssocID

      - grok:
          patterns:
            - fieldName: log.panOSSCTPCauseCode
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPCauseCode

      - grok:
          patterns:
            - fieldName: log.panOSSCTPChunkRcv
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPChunkRcv

      - grok:
          patterns:
            - fieldName: log.panOSSCTPChunks
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPChunks

      - grok:
          patterns:
            - fieldName: log.panOSSCTPChunkSent
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPChunkSent

      - grok:
          patterns:
            - fieldName: log.panOSSCTPChunksRcv
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPChunksRcv

      - grok:
          patterns:
            - fieldName: log.panOSSCTPFilter
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPFilter

      - grok:
          patterns:
            - fieldName: log.panOSSCTPStreamID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPStreamID

      - grok:
          patterns:
            - fieldName: log.panOSSCTPVerTag1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPVerTag1

      - grok:
          patterns:
            - fieldName: log.panOSSCTPVerTag2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSCTPVerTag2

      - grok:
          patterns:
            - fieldName: log.panOSSequenceNo
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSequenceNo

      - grok:
          patterns:
            - fieldName: log.panOSServerNameIndication
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSServerNameIndication

      - grok:
          patterns:
            - fieldName: log.panOSServingCntryMCC
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSServingCntryMCC

      - grok:
          patterns:
            - fieldName: log.panOSServingNetMNC
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSServingNetMNC

      - grok:
          patterns:
            - fieldName: log.panOSSeverity
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSeverity

      - grok:
          patterns:
            - fieldName: log.panOSSNILength
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSNILength

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceCategory
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceCategory

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceHost
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceHost

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceMac
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceMac

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceModel
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceModel

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceOSFamily
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceOSFamily

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceOSVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceOSVersion

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceProfile
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceProfile

      - grok:
          patterns:
            - fieldName: log.panOSSourceDeviceVendor
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDeviceVendor

      - grok:
          patterns:
            - fieldName: log.panOSSourceDynamicAddressGroup
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceDynamicAddressGroup

      - grok:
          patterns:
            - fieldName: log.panOSSourceEDL
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceEDL

      - grok:
          patterns:
            - fieldName: log.panOSSourceHostname
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceHostname

      - grok:
          patterns:
            - fieldName: log.panOSSourceMac
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceMac

      - grok:
          patterns:
            - fieldName: log.panOSSourceRegion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceRegion

      - grok:
          patterns:
            - fieldName: log.panOSSourceUserName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceUserName

      - grok:
          patterns:
            - fieldName: log.panOSSourceUUID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSourceUUID

      - grok:
          patterns:
            - fieldName: log.panOSSrcUUID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSrcUUID

      - grok:
          patterns:
            - fieldName: log.panOSSSLResponseTime
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSSSLResponseTime

      - grok:
          patterns:
            - fieldName: log.panOSStage
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSStage

      - grok:
          patterns:
            - fieldName: log.panOSTagName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTagName

      - grok:
          patterns:
            - fieldName: log.panOSThreatCategory
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSThreatCategory

      - grok:
          patterns:
            - fieldName: log.panOSTimeGeneratedHighResolution
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTimeGeneratedHighResolution

      - grok:
          patterns:
            - fieldName: log.panOSTimeNotAfter
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTimeNotAfter

      - grok:
          patterns:
            - fieldName: log.panOSTimeNotBefore
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTimeNotBefore

      - grok:
          patterns:
            - fieldName: log.panOSTimeout
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTimeout

      - grok:
          patterns:
            - fieldName: log.panOSTimeReceivedManagementPlane
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTimeReceivedManagementPlane

      - grok:
          patterns:
            - fieldName: log.panOSTLSAuth
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTLSAuth

      - grok:
          patterns:
            - fieldName: log.panOSTLSEncryptionAlgorithm
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTLSEncryptionAlgorithm

      - grok:
          patterns:
            - fieldName: log.panOSTLSKeyExchange
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTLSKeyExchange

      - grok:
          patterns:
            - fieldName: log.panOSTLSVersion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTLSVersion

      - grok:
          patterns:
            - fieldName: log.panOSTrafficOriginRegion
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTrafficOriginRegion

      - grok:
          patterns:
            - fieldName: log.panOSTrafficSessionID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTrafficSessionID

      - grok:
          patterns:
            - fieldName: log.panOSTunneInspectionRule
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunneInspectionRule

      - grok:
          patterns:
            - fieldName: log.panOSTunnel
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnel

      - grok:
          patterns:
            - fieldName: log.panOSTunnelEndptID1
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnelEndptID1

      - grok:
          patterns:
            - fieldName: log.panOSTunnelEndptID2
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnelEndptID2

      - grok:
          patterns:
            - fieldName: log.panOSTunnelFragment
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnelFragment

      - grok:
          patterns:
            - fieldName: log.panOSTunnelID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnelID

      - grok:
          patterns:
            - fieldName: log.panOSTunnelInspectionRule
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnelInspectionRule

      - grok:
          patterns:
            - fieldName: log.panOSTunnelType
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSTunnelType

      - grok:
          patterns:
            - fieldName: log.panOSUGFlags
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSUGFlags

      - grok:
          patterns:
            - fieldName: log.panOSURLCatList
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSURLCatList

      - grok:
          patterns:
            - fieldName: log.panOSUserBySource
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSUserBySource

      - grok:
          patterns:
            - fieldName: log.panOSVirtualSystem
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSVirtualSystem

      - grok:
          patterns:
            - fieldName: log.panOSVsysName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSVsysName

      - grok:
          patterns:
            - fieldName: log.panOSXForwarderfor
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panOSXForwarderfor

      - grok:
          patterns:
            - fieldName: log.panPartialHash
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panPartialHash

      - grok:
          patterns:
            - fieldName: log.panPODName
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panPODName

      - grok:
          patterns:
            - fieldName: log.panPODNamespace
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panPODNamespace

      - grok:
          patterns:
            - fieldName: log.panPolicyID
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panPolicyID

      - grok:
          patterns:
            - fieldName: log.panReasonFilteringAction
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panReasonFilteringAction

      - grok:
          patterns:
            - fieldName: log.panSDWANCluster
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSDWANCluster

      - grok:
          patterns:
            - fieldName: log.panSDWANClustype
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSDWANClustype

      - grok:
          patterns:
            - fieldName: log.panSDWANDevice
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSDWANDevice

      - grok:
          patterns:
            - fieldName: log.panSDWANSite
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSDWANSite

      - grok:
          patterns:
            - fieldName: log.panSrcDAG
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDAG

      - grok:
          patterns:
            - fieldName: log.panSrcDeviceCat
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDeviceCat

      - grok:
          patterns:
            - fieldName: log.panSrcDeviceModel
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDeviceModel

      - grok:
          patterns:
            - fieldName: log.panSrcDeviceOS
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDeviceOS

      - grok:
          patterns:
            - fieldName: log.panSrcDeviceOSv
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDeviceOSv

      - grok:
          patterns:
            - fieldName: log.panSrcDeviceProf
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDeviceProf

      - grok:
          patterns:
            - fieldName: log.panSrcDeviceVendor
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcDeviceVendor

      - grok:
          patterns:
            - fieldName: log.panSrcEDL
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcEDL

      - grok:
          patterns:
            - fieldName: log.panSrcHostname
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcHostname

      - grok:
          patterns:
            - fieldName: log.panSrcMac
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panSrcMac

      - grok:
          patterns:
            - fieldName: log.panTimeHighRes
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panTimeHighRes

      - grok:
          patterns:
            - fieldName: log.panXFFIP
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.panXFFIP

      - grok:
          patterns:
            - fieldName: log.proto
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.proto

      - grok:
          patterns:
            - fieldName: log.reason
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.reason

      - grok:
          patterns:
            - fieldName: log.request
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.request

      - grok:
          patterns:
            - fieldName: log.requestContext
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.requestContext

      - grok:
          patterns:
            - fieldName: log.requestMethod
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.requestMethod

      - grok:
          patterns:
            - fieldName: log.rt
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.rt

      - grok:
          patterns:
            - fieldName: log.shost
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.shost

      - grok:
          patterns:
            - fieldName: log.sourceTranslatedAddress
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.sourceTranslatedAddress

      - grok:
          patterns:
            - fieldName: log.sourceTranslatedPort
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.sourceTranslatedPort

      - grok:
          patterns:
            - fieldName: log.spt
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.spt

      - grok:
          patterns:
            - fieldName: log.src
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.src

      - grok:
          patterns:
            - fieldName: log.start
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.start

      - grok:
          patterns:
            - fieldName: log.suid
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.suid

      - grok:
          patterns:
            - fieldName: log.suser
              pattern: '{{.greedy}}{{.space}}'
            - fieldName: log.irrelevant
              pattern: '{{.word}}(=)'
          source: log.suser

      #......................................................................#
      # Remove issues fields
      #......................................................................#
      - delete:
          fields:
            - log.cefOrLeefMsgAll
            - log.cefOrLeefMsg
            - log.irrelevant